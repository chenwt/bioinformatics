<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1d3 20150301//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:ali="http://www.niso.org/schemas/ali/1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.0 20120330//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName JATS-journalpublishing1.dtd?><?SourceDTD.Version 39.96?><?ConverterInfo.XSLTName jp2nlmx2.xsl?><?ConverterInfo.Version 2?><front><journal-meta><journal-id journal-id-type="nlm-ta">Biomed Res Int</journal-id><journal-id journal-id-type="iso-abbrev">Biomed Res Int</journal-id><journal-id journal-id-type="publisher-id">BMRI</journal-id><journal-title-group><journal-title>BioMed Research International</journal-title></journal-title-group><issn pub-type="ppub">2314-6133</issn><issn pub-type="epub">2314-6141</issn><publisher><publisher-name>Hindawi Publishing Corporation</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">4709598</article-id><article-id pub-id-type="doi">10.1155/2015/780519</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group></article-categories><title-group><article-title>SimFuse: A Novel Fusion Simulator for RNA Sequencing (RNA-Seq) Data</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Tan</surname><given-names>Yuxiang</given-names></name><xref ref-type="aff" rid="I1"><sup>1</sup>
</xref><xref ref-type="corresp" rid="cor1">
<sup>*</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Tambouret</surname><given-names>Yann</given-names></name><xref ref-type="aff" rid="I2">
<sup>2</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Monti</surname><given-names>Stefano</given-names></name><xref ref-type="aff" rid="I1">
<sup>1</sup>
</xref><xref ref-type="aff" rid="I3">
<sup>3</sup>
</xref><xref ref-type="corresp" rid="cor2">
<sup>*</sup>
</xref></contrib></contrib-group><aff id="I1"><sup>1</sup>Bioinformatics, Boston University, Boston, MA 02215, USA</aff><aff id="I2"><sup>2</sup>Research Computing Services (IS&#x00026;T), Boston University, Boston, MA 02215, USA</aff><aff id="I3"><sup>3</sup>Section of Computational Biomedicine, Boston University, MA 02215, USA</aff><author-notes><corresp id="cor1">*Yuxiang Tan: <email>ytan7@bu.edu</email> and </corresp><corresp id="cor2">*Stefano Monti: <email>smonti@bu.edu</email></corresp><fn fn-type="other"><p>Academic Editor: Luoying Zhang</p></fn></author-notes><pub-date pub-type="ppub"><year>2015</year></pub-date><pub-date pub-type="epub"><day>29</day><month>12</month><year>2015</year></pub-date><volume>2015</volume><elocation-id>780519</elocation-id><history><date date-type="received"><day>16</day><month>10</month><year>2015</year></date><date date-type="accepted"><day>3</day><month>12</month><year>2015</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2015 Yuxiang Tan et al.</copyright-statement><copyright-year>2015</copyright-year><license license-type="open-access"><license-p>This is an open access article distributed under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><abstract><p>The performance evaluation of fusion detection algorithms from high-throughput sequencing data crucially relies on the availability of data with known positive and negative cases of gene rearrangements. The use of simulated data circumvents some shortcomings of real data by generation of an unlimited number of true and false positive events, and the consequent robust estimation of accuracy measures, such as precision and recall. Although a few simulated fusion datasets from RNA Sequencing (RNA-Seq) are available, they are of limited sample size. This makes it difficult to systematically evaluate the performance of RNA-Seq based fusion-detection algorithms. Here, we present SimFuse to address this problem. SimFuse utilizes real sequencing data as the fusions' background to closely approximate the distribution of reads from a real sequencing library and uses a reference genome as the template from which to simulate fusions' supporting reads. To assess the supporting read-specific performance, SimFuse generates multiple datasets with various numbers of fusion supporting reads. Compared to an extant simulated dataset, SimFuse gives users control over the supporting read features and the sample size of the simulated library, based on which the performance metrics needed for the validation and comparison of alternative fusion-detection algorithms can be rigorously estimated. </p></abstract></article-meta></front><body><sec id="sec1"><title>1. Introduction</title><p>A gene fusion, also referred to as chromosomal translocation, denotes the event whereby two normally separated genes are joined together as a consequence of a genomic rearrangement following DNA replication. Gene fusions are known to play an important role in tumorigenesis in nearly all tumor types [<xref rid="B1" ref-type="bibr">1</xref>, <xref rid="B2" ref-type="bibr">2</xref>]. Because RNA Sequencing (RNA-Seq) provides high coverage and reveals expressed gene fusion transcripts, RNA-Seq based fusion-detection is a standard component of functional cancer genomic research.</p><p>Currently, there are more than 15 RNA-Seq based fusion-detection tools published [<xref rid="B3" ref-type="bibr">3</xref>&#x02013;<xref rid="B9" ref-type="bibr">9</xref>]. Most of these tools were tested only on real data (cell-lines or patient samples) with RT-PCR validations of a limited number of predicted fusions, which precluded the accurate estimation of recall and precision. Therefore, real data are useful to test whether a method is successful in detecting specific events but are not sufficient to comprehensively estimate the method's predictive performance. A statistically powerful simulated dataset containing large numbers of known true positives and true negatives is the complementary solution.</p><p>Some of the published fusion-detection tools [<xref rid="B9" ref-type="bibr">9</xref>&#x02013;<xref rid="B11" ref-type="bibr">11</xref>] utilized an RNA-Seq based simulated fusion dataset generated as part of the evaluation of FusionMap [<xref rid="B5" ref-type="bibr">5</xref>]. However, this is a small dataset representing a single sample and a total of 50 fusions. A fusion simulator able to automatically generate multiple datasets with various numbers and types of fusion supporting reads could facilitate the performance evaluation of new and existing fusion-detection algorithms. Here, we propose SimFuse, a novel fusion simulator, to address this gap.</p><p>SimFuse uses real data to generate background reads. SimFuse can generate multiple fusion events with different numbers and types of supporting reads. With sufficient sampling, users can minimize random effects and accurately estimate the performance of a fusion-detection algorithm. Additionally, with SimFuse generated data, users can precisely estimate fusion-detection recall and precision rates as a function of the numbers or types of supporting reads. Availability: SimFuse is free for noncommercial use at (<ext-link ext-link-type="uri" xlink:href="https://github.com/yuxiangtan/SimFuse">https://github.com/yuxiangtan/SimFuse</ext-link>).</p></sec><sec id="sec2"><title>2. Methods</title><p>We begin by defining some essential terms used throughout the paper (<xref ref-type="fig" rid="fig1">Figure 1</xref>). We define a<italic> fragment</italic> as a contiguous sequence of nucleotides from a cDNA molecule. The distribution of fragment lengths should approximately follow a Gaussian distribution. We define a<italic> read</italic> as the sequenced end of a fragment. We define<italic> pair-end sequencing</italic> as the procedure of sequencing both ends of the same fragment, and the two sequenced ends as<italic> paired ends</italic>. We define<italic> insert-size</italic> as the size of the nonsequenced fragment portion between the paired ends. We define<italic> fusion boundaries</italic> as the precise, nucleotide-level genomic breakpoint coordinates on both sides of the fusion gene pair. Lastly, we define<italic> spanning</italic> reads as those reads that have the fusion boundaries in the gap between the paired ends. Conversely, a<italic> splitting</italic> read has the fusion boundaries within one of the paired-end reads.</p><p>The input to SimFuse consists of a pair-end aligned BAM file with known read length and distribution of fragment lengths (the insert-size must be positive in order to simulate spanning reads following this distribution). This BAM file can be the pure SAM/BAM output from aligners without additional filtering. SimFuse consists of the following four modules (<xref ref-type="fig" rid="fig2">Figure 2</xref>):<list list-type="simple"><list-item><label>(1)</label><p><italic>Extraction of Fusion-Free Reads (from the Input BAM File, to Build the Background Read Distribution).</italic> Generally, a real dataset from patients or cell-lines is preferred. The benefit of using real data to generate the background is that it mimics the background noise in real data and also captures the realistic variation in gene expression levels. To filter all the potential fusion-supporting reads from the real data, only the pair-end aligned reads consistent with the distribution of fragment lengths are kept.</p></list-item><list-item><label>(2)</label><p><italic>Simulation of Fusion Supporting Reads</italic>. To fully control the simulation, SimFuse uses a genome reference (e.g., hg19.fa) as the template to generate supporting reads for simulated fusions (<xref ref-type="fig" rid="fig3">Figure 3</xref>). First, genes are binned into <italic>M</italic> expression subgroups based on the corresponding number of raw reads in the input data. In the default setting, raw read counts are grouped into the <italic>M</italic> ranges [0&#x02009;~&#x02009;10), [10&#x02009;~&#x02009;10<sup>2</sup>), [10<sup>2</sup>&#x02009;~&#x02009;10<sup>3</sup>),&#x02026;, [10<sup><italic>M</italic>&#x02212;1</sup>&#x02009;~&#x02009;10<sup><italic>M</italic></sup>]. For each expression subgroup, <italic>N</italic> (the number of fusions to be simulated in a group; <italic>N</italic> = 100 as default) genes are randomly picked without replacement as the fusion genes. For each fusion gene, a fusion gene partner is randomly selected from each of the expression subgroups. For each pair of genes, splitting and spanning read pairs are simulated by using the reference sequence of these genes (see supplementary material in Supplementary Material available online at <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1155/2015/780519">http://dx.doi.org/10.1155/2015/780519</ext-link>). At the end of this process, a total of <italic>M</italic> &#x000d7; <italic>N</italic> &#x000d7; <italic>M</italic> fusion events are generated, with <italic>N</italic> fusion events for each of the <italic>M</italic> &#x000d7; <italic>M</italic> combinations of expression groups. Finally, all the simulated reads are merged with the background reads into a newly created FASTQ file, and a list of fusion-gene pairs is generated.</p></list-item><list-item><label>(3)</label><p><italic>Wrapper for the Automatic Simulation of Multiple Datasets</italic> (<italic>with Different Supporting Reads).</italic> To fully estimate the performance of a fusion-detection algorithm, a simulated dataset with large enough sample size is needed. Additionally, the performance of a fusion-detection algorithm may be dependent on the number and the types (i.e., spanning or splitting) of supporting reads. To be user friendly, SimFuse has a wrapper function that simultaneously generates <italic>K</italic> simulations with <italic>L</italic> different combinations of supporting read numbers, which yields a total of <italic>M</italic> &#x000d7; <italic>N</italic> &#x000d7; <italic>M</italic> &#x000d7; <italic>L</italic> &#x000d7; <italic>K</italic> fusion events.</p></list-item><list-item><label>(4)</label><p><italic>Generation of a Summary of Fusion-Detection Results</italic> (<italic>from a Given Algorithm for the Whole Simulation).</italic> To compare fusion-detection results from different algorithms efficiently, we convert these results to a uniform format and then use a SimFuse function for summarization (see supplementary Table&#x02009;&#x02009;1 and Figure&#x02009;&#x02009;S1).</p></list-item></list>To estimate the performance of a fusion-detection algorithm, we use recall and precision rates instead of sensitivity and specificity [<xref rid="B12" ref-type="bibr">12</xref>]. Precision is more informative than specificity, since in the fusion-detection problem the number of true negatives (TN) is always much larger (~20&#x02009;K genes in the human genome) than the number of true positives (TP). As a result, unless the number of false positives (type I errors) is extremely large, the specificity will always be close to 1 and will not adequately capture the difference among competing detection algorithms: <list list-type="simple"><list-item><label>&#x02009;&#x02009;</label><p>recall: true positive/(true positive + false negative),</p></list-item><list-item><label>&#x02009;&#x02009;</label><p>precision: true positive/(true positive + false positive).</p></list-item></list></p></sec><sec id="sec3"><title>3. Results</title><sec id="sec3.1"><title>3.1. A Simulation Example from SimFuse</title><p>We used an ENCODE MCF-7 cell-line dataset (SRR521521) to extract the background reads to be included in the simulation. This dataset consists of 76&#x02009;bp pair-end reads, with a median fragment size of 192&#x02009;bp and a standard deviation of 29&#x02009;bp. Accordingly, we used a splitting-to-spanning read ratio of 19&#x02009;:&#x02009;5 for the generation of the fusion supporting reads (see supplementary materials). We next generated <italic>K</italic> = 100 independent simulations, and, for each simulation, we generated <italic>L</italic> = 10 combinations of supporting read numbers, ranging from 1 splitting read and no spanning reads (1&#x02009;:&#x02009;0) to 100 splitting reads and 26 spanning reads (100&#x02009;:&#x02009;26), with <italic>N</italic> = 100 fusion events for each combination (see supplementary Table&#x02009;&#x02009;2). Grouping based on expression levels is not considered and we set <italic>M</italic> = 1, since the data already has 100,000 (1 &#x000d7; 100 &#x000d7; 1 &#x000d7; 10 &#x000d7; 100) fusions. The entire data generation procedure was run on a 16-core 2.3&#x02009;GHz AMD Opteron 6276 machine with 64&#x02009;GB memory. Because SimFuse does not currently support parallel processing, it took 18.5 hours to complete this task using a single core.</p><p>We used deFuse [<xref rid="B3" ref-type="bibr">3</xref>] and TophatFusion [<xref rid="B8" ref-type="bibr">8</xref>] as the two fusion-detection algorithms to analyze the simulated datasets, with default parameter settings (see supplementary materials). <xref ref-type="fig" rid="fig4"> Figure 4</xref> summarized the recall and precision rates of the two algorithms. The recall rate of deFuse was lower than TophatFusion in the low supporting read range but increased and surpassed the recall rate of TophatFusion in the detection of fusions with at least 100 splitting and 26 spanning reads. Conversely, TophatFusion achieved a 75% recall rate with as few as 3 splitting and 1 spanning reads. However, it plateaued at a lower 84% recall rate with 20 splitting and 5 spanning reads. The precision of deFuse was relatively low in the low supporting read range but reached a maximum of 95% when detecting fusions with at least 20 splitting and 5 spanning reads. The precision of TophatFusion was always high but slightly decreased as the number of supporting reads increased. The likely explanation for this phenomenon is that as the number of supporting reads increases, the chance of detecting multiple alignment events also increases.</p></sec><sec id="sec3.2"><title>3.2. Comparison with Existing Simulated Data</title><p>The simulated dataset from FusionMap is the most accessible and popular simulated RNA-Seq fusion dataset currently available [<xref rid="B5" ref-type="bibr">5</xref>, <xref rid="B11" ref-type="bibr">11</xref>]. Hence, we aimed to evaluate our SimFuse-based comparison of deFuse and TophatFusion against the analogous comparison based on the FusionMap simulated dataset. To make the comparison fair, deFuse and TophatFusion were run with the same parameter settings used with the SimFuse datasets. On the other hand, because the FusionMap dataset has only one sample with 50 fusions and no replicates, it was not possible to estimate the corresponding distributions of recall and precision rates. The overall recall rate was 68% (34/50) for deFuse and 70% (35/50) for TophatFusion, and the overall precision rate was 97.1% (34/35) for deFuse and 97.2% (35/36) for TophatFusion. These estimates from the FusionMap dataset are concordant with those from the SimFuse datasets. Additionally, in these 50 fusions, the supporting read numbers range from 2 to 1587, which makes it not possible to rigorously estimate recall and precision rates at different supporting read levels. Nevertheless, the analysis on the FusionMap dataset revealed that deFuse could not detect fusions with fewer than 10 reads while TophatFusion could, thus confirming the more detailed conclusions drawn from the SimFuse datasets.</p></sec></sec><sec id="sec4"><title>4. Discussion</title><p>We have presented a new fusion simulator, SimFuse, for the evaluation and comparison of fusion-detection algorithms from RNAseq data. To our knowledge, this is the first publicly available tool for the simulation of RNAseq libraries enriched for fusion events. The simulator's main selling point is its capability of generating large numbers of fusion events with customizable characteristics, including number of supporting reads and ratio of splitting-to-spanning reads, among others. An additional advantage is SimFuse's ability to simultaneously generate a large number of samples, providing great statistical power for fusion-detection algorithm performance estimation. The capability of generating fusions with a tunable number of supporting reads also allows users to estimate the minimum number of reads necessary to achieve desired rates of fusion-detection recall and precision. Moreover, SimFuse provides detailed individual supporting read information for each simulated fusion, and as a result, users can evaluate the fusion-detection algorithm performance on every single supporting read. This is a unique feature that no other simulated RNA-Seq fusion dataset provides.</p><p>We used SimFuse to generate a large dataset of fusion-rich samples, which was used to compare two state-of-the-art fusion-detection tools, TophatFusion [<xref rid="B8" ref-type="bibr">8</xref>] and deFuse [<xref rid="B3" ref-type="bibr">3</xref>]. By comparing the number of known fusion-supporting reads in the SimFuse dataset with those identified by deFuse and TophatFusion, we found that deFuse and TophatFusion could detect splitting and spanning reads well in most cases. However, in some cases, these two methods reported more supporting reads than the actual number of simulated reads, which might suggest a propensity of these algorithms to report false positives.</p><p>SimFuse already allows for the control of fusion parameters (such as number of supporting reads and ratio of splitting-to-spanning reads) and relies on a reference genome template for the generation of the fusion supporting reads, but additional parameters will be included in future improvements to more closely approximate real data. For example, we can introduce tunable mutation rates for each base in the template genome reference, or relax the location requirement of fusion boundaries, or offer the option of alternative splicing conjunction between exons.</p><p>SimFuse is available as open source software on github, and input from any developers is welcome. Our hope is that this package will provide for a starting point and that additional functions and improvements will be contributed by the community.</p></sec><sec sec-type="supplementary-material" id="supplementary-material-sec"><title>Supplementary Material</title><supplementary-material content-type="local-data" id="f1"><caption><p>In this supplementary, we descript the four main sessions of SimFuse in details (including versions of tools used). We also provide the parameters used for running deFuse and TophatFusion for the comparision. Supplementary tables, which are complementary to figures of barplots are included. The logic of the summary function is presented in the supplementary figure.</p></caption><media xlink:href="780519.f1.pptx" mimetype="application" mime-subtype="vnd.openxmlformats-officedocument.presentationml.presentation" orientation="portrait" id="d36e411" position="anchor"/></supplementary-material><supplementary-material content-type="local-data" id="f2"><media xlink:href="780519.f2.xlsx" mimetype="application" mime-subtype="vnd.openxmlformats-officedocument.spreadsheetml.sheet" orientation="portrait" id="d36e413" position="anchor"/></supplementary-material><supplementary-material content-type="local-data" id="f3"><media xlink:href="780519.f3.xlsx" mimetype="application" mime-subtype="vnd.openxmlformats-officedocument.spreadsheetml.sheet" orientation="portrait" id="d36e415" position="anchor"/></supplementary-material></sec></body><back><ack><title>Acknowledgments</title><p>The authors would like to thank Avi Spira, Evan Johnson, Luis Carvalho, and Bjoern Chapuy for constructive feedback. The authors would also like to thank Jake Kantrowitz and Yi Li.</p></ack><sec sec-type="conflict"><title>Conflict of Interests</title><p>The authors declare that there is no conflict of interests regarding the publication of this paper.</p></sec><ref-list><ref id="B1"><label>1</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mitelman</surname><given-names>F.</given-names></name><name><surname>Johansson</surname><given-names>B.</given-names></name><name><surname>Mertens</surname><given-names>F.</given-names></name></person-group><article-title>The impact of translocations and gene fusions on cancer causation</article-title><source><italic>Nature Reviews Cancer</italic></source><year>2007</year><volume>7</volume><issue>4</issue><fpage>233</fpage><lpage>245</lpage><pub-id pub-id-type="doi">10.1038/nrc2091</pub-id><pub-id pub-id-type="other">2-s2.0-33947581390</pub-id><pub-id pub-id-type="pmid">17361217</pub-id></element-citation></ref><ref id="B2"><label>2</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Vega</surname><given-names>F.</given-names></name><name><surname>Medeiros</surname><given-names>L. J.</given-names></name></person-group><article-title>Chromosomal translocations involved in non-Hodgkin lymphomas</article-title><source><italic>Archives of Pathology &#x00026; Laboratory Medicine</italic></source><year>2003</year><volume>127</volume><issue>9</issue><fpage>1148</fpage><lpage>1160</lpage><pub-id pub-id-type="pmid">12946230</pub-id></element-citation></ref><ref id="B3"><label>3</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McPherson</surname><given-names>A.</given-names></name><name><surname>Hormozdiari</surname><given-names>F.</given-names></name><name><surname>Zayed</surname><given-names>A.</given-names></name><etal/></person-group><article-title>deFuse: an algorithm for gene fusion discovery in tumor RNA-Seq data</article-title><source><italic>PLoS Computational Biology</italic></source><year>2011</year><volume>7</volume><issue>5</issue><pub-id pub-id-type="publisher-id">e1001138</pub-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1001138</pub-id></element-citation></ref><ref id="B4"><label>4</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>Y.</given-names></name><name><surname>Chien</surname><given-names>J.</given-names></name><name><surname>Smith</surname><given-names>D. I.</given-names></name><name><surname>Ma</surname><given-names>J.</given-names></name></person-group><article-title>FusionHunter: identifying fusion transcripts in cancer using paired-end RNA-seq</article-title><source><italic>Bioinformatics</italic></source><year>2011</year><volume>27</volume><issue>12</issue><fpage>1708</fpage><lpage>1710</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btr265</pub-id><pub-id pub-id-type="other">2-s2.0-79958172285</pub-id><pub-id pub-id-type="pmid">21546395</pub-id></element-citation></ref><ref id="B5"><label>5</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ge</surname><given-names>H.</given-names></name><name><surname>Liu</surname><given-names>K.</given-names></name><name><surname>Juan</surname><given-names>T.</given-names></name><name><surname>Fang</surname><given-names>F.</given-names></name><name><surname>Newman</surname><given-names>M.</given-names></name><name><surname>Hoeck</surname><given-names>W.</given-names></name></person-group><article-title>FusionMap: detecting fusion genes from next-generation sequencing data at base-pair resolution</article-title><source><italic>Bioinformatics</italic></source><year>2011</year><volume>27</volume><issue>14</issue><fpage>1922</fpage><lpage>1928</lpage><pub-id pub-id-type="publisher-id">btr310</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btr310</pub-id><pub-id pub-id-type="other">2-s2.0-79960126958</pub-id><pub-id pub-id-type="pmid">21593131</pub-id></element-citation></ref><ref id="B6"><label>6</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sboner</surname><given-names>A.</given-names></name><name><surname>Habegger</surname><given-names>L.</given-names></name><name><surname>Pflueger</surname><given-names>D.</given-names></name><etal/></person-group><article-title>FusionSeq: a modular framework for finding gene fusions by analyzing paired-end RNA-sequencing data</article-title><source><italic>Genome Biology</italic></source><year>2010</year><volume>11</volume><issue>10, article R104</issue><pub-id pub-id-type="doi">10.1186/gb-2010-11-10-r104</pub-id><pub-id pub-id-type="other">2-s2.0-77958040520</pub-id></element-citation></ref><ref id="B7"><label>7</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dobin</surname><given-names>A.</given-names></name><name><surname>Davis</surname><given-names>C. A.</given-names></name><name><surname>Schlesinger</surname><given-names>F.</given-names></name><etal/></person-group><article-title>STAR: ultrafast universal RNA-seq aligner</article-title><source><italic>Bioinformatics</italic></source><year>2013</year><volume>29</volume><issue>1</issue><fpage>15</fpage><lpage>21</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/bts635</pub-id><pub-id pub-id-type="other">2-s2.0-84871809302</pub-id><pub-id pub-id-type="pmid">23104886</pub-id></element-citation></ref><ref id="B8"><label>8</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kim</surname><given-names>D.</given-names></name><name><surname>Salzberg</surname><given-names>S. L.</given-names></name></person-group><article-title>TopHat-Fusion: an algorithm for discovery of novel fusion transcripts</article-title><source><italic>Genome Biology</italic></source><year>2011</year><volume>12</volume><issue>8, article R72</issue><pub-id pub-id-type="doi">10.1186/gb-2011-12-8-r72</pub-id><pub-id pub-id-type="other">2-s2.0-80051507403</pub-id></element-citation></ref><ref id="B9"><label>9</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jia</surname><given-names>W.</given-names></name><name><surname>Qiu</surname><given-names>K.</given-names></name><name><surname>He</surname><given-names>M.</given-names></name><etal/></person-group><article-title>SOAPfuse: an algorithm for identifying fusion transcripts from paired-end RNA-Seq data</article-title><source><italic>Genome Biology</italic></source><year>2013</year><volume>14</volume><issue>2, article R12</issue><pub-id pub-id-type="doi">10.1186/gb-2013-14-2-r12</pub-id><pub-id pub-id-type="other">2-s2.0-84873606413</pub-id></element-citation></ref><ref id="B10"><label>10</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Carrara</surname><given-names>M.</given-names></name><name><surname>Beccuti</surname><given-names>M.</given-names></name><name><surname>Cavallo</surname><given-names>F.</given-names></name><etal/></person-group><article-title>State of art fusion-finder algorithms are suitable to detect transcription-induced chimeras in normal tissues?</article-title><source><italic>BMC Bioinformatics</italic></source><year>2013</year><volume>14</volume><issue>supplement 7, article S2</issue><pub-id pub-id-type="doi">10.1186/1471-2105-14-S7-S2</pub-id><pub-id pub-id-type="other">2-s2.0-84887182396</pub-id></element-citation></ref><ref id="B11"><label>11</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Carrara</surname><given-names>M.</given-names></name><name><surname>Beccuti</surname><given-names>M.</given-names></name><name><surname>Lazzarato</surname><given-names>F.</given-names></name><etal/></person-group><article-title>State-of-the-art fusion-finder algorithms sensitivity and specificity</article-title><source><italic>BioMed Research International</italic></source><year>2013</year><volume>2013</volume><fpage>6</fpage><pub-id pub-id-type="publisher-id">340620</pub-id><pub-id pub-id-type="doi">10.1155/2013/340620</pub-id><pub-id pub-id-type="other">2-s2.0-84874867981</pub-id></element-citation></ref><ref id="B12"><label>12</label><element-citation publication-type="other"><collab>Wikipedia</collab><comment>Precision and recall, February 2015, <ext-link ext-link-type="uri" xlink:href="http://en.wikipedia.org/wiki/Precision_and_recall">http://en.wikipedia.org/wiki/Precision_and_recall</ext-link></comment></element-citation></ref></ref-list></back><floats-group><fig id="fig1" orientation="portrait" position="float"><label>Figure 1</label><caption><p>Definition of essential terms. (a) Definition of fragment, read, and insert size. A fragment is sequenced in both directions to get a pair of reads in the paired-end sequencing. The size of the nonsequenced portion between the paired ends is called insert size. (b) Definition of spanning read and splitting read pairs. The fusion boundaries are in the insert region in a spanning read pair, while the fusion boundaries fall within one of the reads in a splitting read pair.</p></caption><graphic xlink:href="BMRI2015-780519.001"/></fig><fig id="fig2" orientation="portrait" position="float"><label>Figure 2</label><caption><p>SimFuse workflow. (a) Fusion free reads are extracted from the real data. (b) The expression quantification from real data and a genome reference are used to simulate fusion reads. (c) Fusion-free reads and simulated fusion reads are merged. (d) Running a fusion-detection algorithm on the simulation dataset generates results of detected fusions. Comparison of these results with the list of simulated fusions yields fusion-detection performance estimates (recall and precision) for the algorithm.</p></caption><graphic xlink:href="BMRI2015-780519.002"/></fig><fig id="fig3" orientation="portrait" position="float"><label>Figure 3</label><caption><p>Workflow of generating fusion supporting reads. An exon in gene <italic>X</italic> and an exon in gene <italic>Y</italic> are randomly selected. Exon boundaries are used as the fusion boundaries. Spanning reads are randomly generated from within a prespecified range (read-length <italic>&#x02217;</italic> 3 by default) from the boundaries. To generate a splitting read, two fragments from the two genes <italic>X</italic> and <italic>Y</italic> are generated, with their sum length being equal to the required read-length. A spanning read is randomly generated from either of the two exons to match the splitting read into a splitting read pair.</p></caption><graphic xlink:href="BMRI2015-780519.003"/></fig><fig id="fig4" orientation="portrait" position="float"><label>Figure 4</label><caption><p>Barplot of recall and precision rates for deFuse and TophatFusion. Blue bars indicate deFuse results and red bars indicate TophatFusion results. The <italic>x</italic>-axis is indexed by the supporting read groups, with each group corresponding to the indicated splitting-to-spanning read ratio. The <italic>y</italic>-axis reports precision and recall rates. The red dash line shows estimates for TophatFusion from the FusionMap dataset, while the blue dash line shows estimates for deFuse.</p></caption><graphic xlink:href="BMRI2015-780519.004"/></fig></floats-group></article>