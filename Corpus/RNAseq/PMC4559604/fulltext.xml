<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1d2 20140930//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article" xml:lang="en"><?DTDIdentifier.IdentifierValue article.dtd?><?DTDIdentifier.IdentifierType system?><?SourceDTD.DTDName article.dtd?><?SourceDTD.Version 1.0?><?ConverterInfo.XSLTName bmc2nlmx2.xsl?><?ConverterInfo.Version 2?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id><journal-title-group><journal-title>BMC Bioinformatics</journal-title></journal-title-group><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">4559604</article-id><article-id pub-id-type="publisher-id">1471-2105-16-S11-S4</article-id><article-id pub-id-type="doi">10.1186/1471-2105-16-S11-S4</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research</subject></subj-group></article-categories><title-group><article-title>Epiviz: a view inside the design of an integrated visual analysis software for genomics</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes" id="A1"><name><surname>Chelaru</surname><given-names>Florin</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>florin.chelaru@gmail.com</email></contrib><contrib contrib-type="author" corresp="yes" id="A2"><name><surname>Corrada Bravo</surname><given-names>H&#x000e9;ctor</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>hcorrada@umiacs.umd.edu</email></contrib></contrib-group><aff id="I1"><label>1</label>Center for Bioinformatics and Computational Biology, University of Maryland, College Park, MD, USA</aff><aff id="I2"><label>2</label>Department of Computer Science, University of Maryland, College Park, MD, USA</aff><pub-date pub-type="collection"><year>2015</year></pub-date><pub-date pub-type="epub"><day>13</day><month>8</month><year>2015</year></pub-date><volume>16</volume><issue>Suppl 11</issue><supplement><named-content content-type="supplement-title">Proceedings of the 5th Symposium on Biological Data Visualization: Part 1</named-content><named-content content-type="supplement-editor">Daniel Weiskopf and Jan Aerts</named-content><named-content content-type="supplement-sponsor">Publication of this supplement has not been supported by sponsorship. Information about the source of funding for publication charges can be found in the individual articles. Articles have undergone the journal's standard peer review process for supplements. The Supplement Editors declare that they have no competing interests.</named-content></supplement><fpage>S4</fpage><lpage>S4</lpage><permissions><copyright-statement>Copyright &#x000a9; 2015 Chelaru and Bravo</copyright-statement><copyright-year>2015</copyright-year><copyright-holder>Chelaru and Bravo</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0"><license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0">http://creativecommons.org/licenses/by/4.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p></license></permissions><self-uri xlink:href="http://www.biomedcentral.com/1471-2105/16/S11/S4"/><abstract><sec><title>Background</title><p>Computational and visual data analysis for genomics has traditionally involved a combination of tools and resources, of which the most ubiquitous consist of genome browsers, focused mainly on integrative visualization of large numbers of big datasets, and computational environments, focused on data modeling of a small number of moderately sized datasets. Workflows that involve the integration and exploration of multiple heterogeneous data sources, small and large, public and user specific have been poorly addressed by these tools. In our previous work, we introduced Epiviz, which bridges the gap between the two types of tools, simplifying these workflows.</p></sec><sec><title>Results</title><p>In this paper we expand on the design decisions behind Epiviz, and introduce a series of new advanced features that further support the type of interactive exploratory workflow we have targeted. We discuss three ways in which Epiviz advances the field of genomic data analysis: 1) it brings code to interactive visualizations at various different levels; 2) takes the first steps in the direction of collaborative data analysis by incorporating user plugins from source control providers, as well as by allowing analysis states to be shared among the scientific community; 3) combines established analysis features that have never before been available simultaneously in a genome browser. In our discussion section, we present security implications of the current design, as well as a series of limitations and future research steps.</p></sec><sec><title>Conclusions</title><p>Since many of the design choices of Epiviz are novel in genomics data analysis, this paper serves both as a document of our own approaches with lessons learned, as well as a start point for future efforts in the same direction for the genomics community.</p></sec></abstract><kwd-group><kwd>Visualization</kwd><kwd>Functional Genomics</kwd><kwd>DNA Methylation</kwd></kwd-group><conference><conf-date>10-11 July 2015</conf-date><conf-name>5th Symposium on Biological Data Visualization</conf-name><conf-loc>Dublin, Ireland</conf-loc></conference></article-meta></front><body><sec><title>Background</title><p>We provide an insight into the design choices of Epiviz [<xref ref-type="bibr" rid="B1">1</xref>], a tool for interactive visual and computational analysis of genomic data. We include design choices behind the tool and introduce new features that greatly broaden our support for interactive analysis workflows of genomic data over our previously published general overview of its architecture and design. We present a use case of epigenomic data analysis that makes use of the improvements of Epiviz based on these new extensions and features.</p><sec><title>Motivation</title><p>The design of Epiviz responds to the need of integrating computational and visual interactive and exploratory analysis for genomics data. Existing tools usually treat these steps: 1) computational and statistical analysis, and 2) interactive integrative visualization, as distinct (Sup. Table 1 in Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>), while they are more effective when used iteratively.</p><p>Consider the case of finding differentially methylated regions (DMRs) associated with cancer. Statistical inferences from smoothing methods built on base-pair level measurements of DNA methylation (DNAm) [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B3">3</xref>] are used to carry out this task. In a general sense, these methods use a statistical model of expected methylation <inline-formula><mml:math id="M1" name="1471-2105-16-S11-S4-i1" overflow="scroll"><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> at genomic locus <italic>l </italic>for replicate <italic>j </italic>belonging to class <italic>k </italic>(say, normal or tumor): <inline-formula><mml:math id="M2" name="1471-2105-16-S11-S4-i2" overflow="scroll"><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo class="MathClass-rel">=</mml:mo><mml:mi>f</mml:mi><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow><mml:mo class="MathClass-bin">+</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow><mml:mo class="MathClass-bin">+</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> where <inline-formula><mml:math id="M3" name="1471-2105-16-S11-S4-i3" overflow="scroll"><mml:mi>f</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:mfenced></mml:math></inline-formula> is a smooth function over genomic loci and <inline-formula><mml:math id="M4" name="1471-2105-16-S11-S4-i4" overflow="scroll"><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow></mml:math></inline-formula> is another smooth function that measures deviation in methylation for class <italic>k</italic>, so that contiguous regions where <inline-formula><mml:math id="M5" name="1471-2105-16-S11-S4-i5" overflow="scroll"><mml:mo class="MathClass-rel">|</mml:mo><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="("><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:mfenced><mml:mo class="MathClass-rel">|</mml:mo></mml:math></inline-formula> is large enough are considered differentially methylated and a level of significance can be determined by parametric or non-parametric statistical methods. This stipulates a chain of measurements and estimates that lead to the final list of regions found: the base-pair level DNAm measured for each sample, the smooth functions used in the above model, and the regions where methylation differences are determined to be significantly different (Figure 1).</p><p>Note that these smooth functions are parameterized by bandwidth to adjust their smoothness, which in turn determines the size of DMRs found: e.g., large smoothing windows leading to longer DMRs detected. For data derived from Illumina HumanMethylation 450k beadarrays this methodology is implemented in the minfi [<xref ref-type="bibr" rid="B2">2</xref>] Bioconductor package.</p><p>Once these regions are determined, they would be exported, as BED file for example, and visualized on a genome browser to integrate with other annotations (for example, the location of CpG islands and genes), providing context and interpretation based on the relationship between estimated DMRs and other genome annotations. Unfortunately, at this point most information pertinent to the statistical analysis driving these inferences is lost (for example, the choice of smoothing parameters that determine the width of DMRs and therefore their overlap with other genomic features). Furthermore, interaction in the genome browser is not informed by statistical properties of the inferred regions (for example, navigating through regions in order of statistical significance).</p><p>Current tools make it difficult to simultaneously perform <italic>statistically informed </italic>visualization by allowing exploratory analysis of measurements and estimates across this multi-stage statistical procedure and <italic>visualization informed </italic>statistical analysis where parameters of this multi-stage procedure are explored based on integrative visualization.</p><p>Figure <xref ref-type="fig" rid="F1">1</xref> shows how the design of Epiviz is based on supporting this type of workflow. Analysts can simultaneously visualize data across multiple stages of statistical analyses (at CpG level, the smooth functions in statistical model, and inferred DMRs) directly from data, through the Epivizr Bioconductor package. Changes in parameters of this statistical pipeline would be reflected immediately in the visualization. Analysts can also integrate annotation data (gene and CpG island location and expression data from the Gene Expression Barcode [<xref ref-type="bibr" rid="B4">4</xref>] project for multiple tissues). This paper describes in detail the design of our tool to support this type of analysis workflow.</p><fig id="F1" position="float"><label>Figure 1</label><caption><p><bold>Statistical analysis of colon cancer methylome</bold>. Top-left displays CpG-level methylation measurements for colon normal and tumor tissue for a sample of TCGA [<xref ref-type="bibr" rid="B12">12</xref>] data; top-right displays expression data from the Gene Expression Barcode Project across multiple cancer types as a <italic>heatmap</italic>, the hierarchical clustering is dynamically updated as the users navigates across the genome; the bottom display shows smooth function <inline-formula><mml:math id="M6" name="1471-2105-16-S11-S4-i6" overflow="scroll"><mml:msub><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow></mml:math></inline-formula>, described in the main text, corresponding to differences in methylation between normal and tumor; the "Colon Blocks" track displays statistically significant DMRs inferred from the smoothed methylation difference function. The brushing interaction (in yellow) links data from Bioconductor objects produced at different stages of a statistical analysis pipeline: from measurement preprocessing to statistically significant regions of interest allowing effective exploration of the statistical properties of these genomic findings. <ext-link ext-link-type="uri" xlink:href="http://epiviz.cbcb.umd.edu/?ws=sp9ShCJdS3c">http://epiviz.cbcb.umd.edu/?ws=sp9ShCJdS3c</ext-link></p></caption><graphic xlink:href="1471-2105-16-S11-S4-1"/></fig><p>Some of the ways Epiviz advanced the field of genomics interactive visual analysis include:</p><p>1. Introducing the first genomic data visualization software that brings code to interactive visualization by allowing computational environments such as R or Python to use it as an interactive display device and by allowing scripts stored externally (i.e. on source control providers) to be dynamically integrated into the framework. The Epivizr package is designed to integrate Epiviz with the state-of-the-art Bioconductor infrastructure for genomics statistical analysis.</p><p>2. Introducing the concept of community-contributed plugins for web applications through JavaScript dynamic extension. Epiviz is the first web-based visualization tool whose code base can be extended by actively incorporating third-party scripts. Combined with the <italic>workspaces </italic>feature, which allows users to persistently save, replicate and share analysis steps - including code customizations done in the UI - this opens the door to social collaboration within the genomic community, which has never been done before.</p><p>3. Creating the first genome browser that makes use of the following set of concepts and features simultaneously: brushing and linking, binning, supporting data transformations in the UI, predictive caching based on navigation, aggregating data from multiple sources - both cloud-based and local - and persistently saving and sharing data analysis steps as <italic>workspaces</italic>.</p></sec><sec><title>Contributions</title><p>In this paper, we present specific extensions and features introduced posterior to the initial launch of our project and consequent publication, as well as aspects of the architecture that have not been described before.</p><p>1. Visualization code customization in the UI. Previous versions of Epiviz allowed users to create custom visualizations and data providers, as well as to override existing settings by storing scripts on the cloud and referencing them within the tool. A lot of data analysis workflows however, require customizations that are so simple, that creating a whole new visualization for them would be too much overhead. For cases such as these, Epiviz provides a window straight into the parts of the visualizations code that matter for the user, who can customize this code directly in the user interface, using a JavaScript code editor dialog.</p><p>2. Data transformations directly in the UI. In Epiviz, data transformations can be easily applied by coupling a computational environment to the interactive visualization environment. Also, new measurements can be created as combinations of existing ones using the <italic>computed measurements </italic>feature. However, in our work we recognize the need of being able to make such transformations as close to the user interface as possible, in order to optimize the data analysis workflow. For this reason, we expanded our framework's API to include a series of customizable and extensible transformations over data within visualizations. Measurement and feature sorting, aggregation, as well as dynamic coloring are a few examples of transformations currently available within our tool. Epiviz exposes a fully-featured JavaScript code dialog which scientists can use to define complex ways in which these transformations can be applied.</p><p>3. The extension of user <italic>workspaces </italic>to include user-defined code customizations. Reproducibility is an essential aspect of genomics data analysis workflows, which was one of the central concepts in the Epiviz design from the beginning. To keep our framework in tune with this concept, we extended the <italic>workspaces </italic>feature to include code customizations, for both visualizations as well as data transformations described above.</p><p>4. Securing third-party code. The introduction of the data and visualization code transformations described earlier, as well as storing these user-scripts into the database as part of workspaces poses security risks for server-side data integrity, as well as user information. For this reason, we implemented a series of security features, of which the most important is utilizing a code sanitizing library that ensures no malicious code will be executed within either the user session or our servers, and no such code will be stored on our databases.</p><p>5. A series of new visualizations, as well as advanced features of the existing visualizations, such as heatmap clustering, which we exemplify, alongside the new code features, in the <italic>Results and discussion </italic>section. The section also includes results derived from these new features and visualizations, which constitute important insights over the relationship between different genomic measurements.</p><p>6. We discuss the current challenges brought by data specific to genomic analysis and present an abstract data format designed with these challenges in mind. We describe ways in which the architecture of our framework takes these into account in defining a uniform data format We provide an in-depth description of the data abstraction and standardization of Epiviz, which is the cornerstone of our plugin API, facilitating the usage of the same visualizations for different data types, as well as using different visualizations for representing different dimensions of the same data type. The uniform data format is also an essential aspect of integrating data from different sources, both computational environments and cloud-based databases.</p></sec><sec><title>Considerations about genomic data</title><p>Data used by bioinformaticians in data analysis is complex in its variety, heterogeneity, and size. Sometimes, this data consists of records mapped to a genome - for example, DNA methylation, or read coverage, which are commonly displayed in genome browsers [<xref ref-type="bibr" rid="B5">5</xref>-<xref ref-type="bibr" rid="B8">8</xref>]. In other cases, the main coordinate is replaced by time or some other user-defined dimension.</p><p>The size of genomics data also tends to vary greatly. Usually, a single dataset corresponding to the genomic data for a single sample will range from a few hundred records to a few hundred million [<xref ref-type="bibr" rid="B9">9</xref>], all of which can easily fit into the memory of a modern day computer. However, in the workflow of a single data analysis task, a scientist may involve a large enough number of datasets for it not to be feasible to load all data in the memory of a workstation at once, or even store it locally. For this reason, there now exist several large databases aggregating and making available various types of genomic datasets for a multitude of use cases [<xref ref-type="bibr" rid="B4">4</xref>,<xref ref-type="bibr" rid="B10">10</xref>,<xref ref-type="bibr" rid="B11">11</xref>]. There have been large efforts geared to storing efficiently and providing large selections of these datasets to bioinformaticians [<xref ref-type="bibr" rid="B12">12</xref>]. Often these sit behind genome browsers, which offer, to some extent, help with the dissemination of subsets of these datasets. However, in the past, no tool has been able to interactively visualize data from a multitude of these different sources simultaneously, and at the same time facilitate dynamic statistical analysis of new datasets derived from user experiments, residing locally.</p><p>In our work we recognize the need to analyze, model, navigate over, correlate and interactively visualize data that is both varied in terms of format and semantics, as well as source and size. Current data analysis workflows of individual researchers as well as research groups usually involve the usage of a multitude of tools as part of the same process, including a number of genome browsers and statistical environments such as R/Bioconductor or Python. To reduce the time spent by users switching between tools in the course of one data analysis process, genome browsers take one of two paths. The first is to duplicate data already available in other databases [<xref ref-type="bibr" rid="B13">13</xref>-<xref ref-type="bibr" rid="B15">15</xref>]; this approach is unfeasible when taking into account the rate at which new data becomes available [<xref ref-type="bibr" rid="B11">11</xref>,<xref ref-type="bibr" rid="B16">16</xref>], the sizes of some such databases [<xref ref-type="bibr" rid="B4">4</xref>,<xref ref-type="bibr" rid="B17">17</xref>], as well as the efforts aimed at making these databases efficient in terms of query time and data format [<xref ref-type="bibr" rid="B12">12</xref>]. The other path is to serve data directly from the cloud [<xref ref-type="bibr" rid="B6">6</xref>]. We find the latter preferable, given the data considerations made earlier. But, in addition to genome browsers, data analysts often revert to computational platforms, for quick access to data widely used in their scientific community as well as quick manipulation and complex modelling of small datasets. For genomics data, the R/Bioconductor framework is a state-of-the-art platform for implementation and dissemination of computational and statistical analysis methods.</p><p>However, before Epiviz, no existing tool by itself was able to accomplish both of the following: 1) integrate simultaneously data from different genome browsers without replicating it on the local database, and 2) bridge the gap between genome browsers and computational environments, by coupling interactive visualization with statistical data modelling. Genome browsers sit in front of large databases and are highly interactive, but have little to no data transformation capability. Computational environments on the other hand, are powerful data modelling tools, but do not expose interactive visualizations, nor are they capable of easily manipulating extremely large datasets, being limited to the physical memory of the local machine.</p><p>One of the purposes of Epiviz is to make different datasets in various locations and formats easy to access and manipulate in the same tool. Through Epiviz, we propose a system that is able to visualize datasets directly from their existing locations, as well as custom user data residing on the local machine, side by side. Not only this, but the users are now able to model and change their custom data in a computing environment of their choice and immediately visually explore these changes, all in the same view, without the need to switch between tools or to constantly upload new versions of transformed data to a web server. Epiviz introduces a framework that features a data provider API which can be used to integrate both data available through online services, as well as data loaded in the memory of a computing environment. In addition, users of Epiviz gain the benefits of new data sources and formats available only to services within these environments [<xref ref-type="bibr" rid="B18">18</xref>-<xref ref-type="bibr" rid="B20">20</xref>]. These services provide uniform access to a large number of data sources to support data integration by providing infrastructure that supports a large variety of data types based on community standards (Sup. Table 2 in Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>). Development of interactive and integrative visualization tools that are able to interact with frameworks such as R/Bioconductor is a strong motivation for Epiviz. Through them, it is assured of high visibility and impact in the scientific community. Tools that directly benefit from our system include a number of frequently used, state-of-the-art methods for a) ChIPseq (DiffBind [<xref ref-type="bibr" rid="B21">21</xref>]), where iterative visualization of data and results of peak-calling algorithms is necessary; b) RNAseq analyses using DESeq [<xref ref-type="bibr" rid="B22">22</xref>], edgeR [<xref ref-type="bibr" rid="B23">23</xref>], or limma [<xref ref-type="bibr" rid="B24">24</xref>], and Cufflinks/Cuffdiff [<xref ref-type="bibr" rid="B25">25</xref>] through the cummeRbund package, where both location-based coverage and feature-based expression levels are required; c) methylation analyses using BSmooth [<xref ref-type="bibr" rid="B3">3</xref>] or minfi [<xref ref-type="bibr" rid="B2">2</xref>], where location-based analysis at multiple genomic scales is important.</p></sec></sec><sec><title>Implementation</title><sec><title>Bringing code to interactive visualizations</title><p>Coupling between computational environments and visualizations has been done before, to some extent, either in areas of computer science unrelated to genomics, or for different audiences than the one targeted by Epiviz. In this section we briefly describe two categories of tools that attempt to do this, underlining aspects that we considered worth replicating for our purposes, and ideas we decided to take a step further. Combined with the interactive features of a genome browser, these make Epiviz the first tool of its kind.</p><sec><title>Web-based computational environments</title><p>One category of tools that has gained a lot of traction in the past years is represented by web-based computational environments, such as IPython Notebook [<xref ref-type="bibr" rid="B26">26</xref>] and RCloud [<xref ref-type="bibr" rid="B27">27</xref>]. They are much similar to regular computational environments, but in addition, they combine code execution in browser, plots, and rich media. What we find particularly useful about these tools is the ability of users to create custom notebooks, and share them with each other. This is done either via individual files that can be viewed using an online notebook viewer, or using cloud-based source control providers such as GitHub. This collaborative approach has been proven extremely effective for the audiences of these tools, consisting mainly of programmers and data analysts.</p><p>But neither of these tools can substitute a genome browser, because they are not specialized on interactive visual exploration of genomic datasets. They feature a set of static charts, the same as regular computational environments, but operations specific to genome browsers, such as navigation, or brushing, to link data across different charts are not naturally supported.</p></sec><sec><title>Shiny</title><p>Shiny [<xref ref-type="bibr" rid="B28">28</xref>] is an interactive web application framework for R, which features a set of predefined web widgets which can be used to visualize custom sets of data loaded in memory. What is especially useful about this tool is a feature called <italic>reactivity</italic>, which consists of binding web controls to R functionality that responds to user actions on the web interface. This opens the door for R to visualizations that are more interactive than conventional static plots. This, along with the fact that its native environment is R, makes the tool extremely popular within the computational genomics community.</p><p>Although it is a great addition to the R computing environment, Shiny is a general framework that cannot replace genome browsers in a data analysis workflow without significant extensions. It is not built to link data across charts using brushing, nor does it support navigation over subsets of the same data. In addition, custom visualizations and visual optimizations cannot be built directly in R - knowledge of JavaScript and visual libraries built on top of it is required to create advanced complex views. In addition, Shiny is not built to display partitions of data at a time, but rather, relies on the entire data to be loaded in memory of R. Also, there is no easy way to put together subsets of data from a multitude of large databases.</p></sec><sec><title>Visualization systems with similar functionality</title><p>Harger et al. [<xref ref-type="bibr" rid="B29">29</xref>] and Zhang et al. [<xref ref-type="bibr" rid="B30">30</xref>] provide two comprehensive surveys and comparisons of the state-of-the-art visual analytics open-source toolkits and commercial systems respectively taking into account a wide variety of features, from visualizations offered, to analysis functionality and portability. Based on these studies, the Titan [<xref ref-type="bibr" rid="B31">31</xref>] toolkit and the system Spotfire [<xref ref-type="bibr" rid="B32">32</xref>] stand out through their extensive combination of <italic>visualization </italic>and <italic>statistical analysis </italic>functionality. All other tools analyzed in these surveys lack support for <italic>multivariate statistical analysis </italic>- the statistical analysis of data in three or more dimensions (for example, <italic>dimensionality reduction, clustering</italic>, etc.), which is essential for genomic data analysis workflows.</p></sec><sec><title>Titan</title><p>Titan is not in itself a visualization tool, but rather a toolkit providing an environment for data visualization and analysis. Unlike most other desktop-based visualization toolkits, it is OS-flexible, offers a good set of multiple coordinated interactive visualizations, as well as a computational facet for C++, Python and TCL. The architecture is also extensible by allowing users to create custom plugins for data transformations.</p><p>In contrast, one of the goals of our efforts in developing Epiviz was to provide support for frequently used state-of-the-art methods for genomic data analysis. This is currently best addressed by R/Bioconductor, through an extensive suite of libraries and packages that are able to both manipulate different types of genomic data (Sup. Table 2 in Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>), and facilitate workflows for a number of established domain-specific analysis methods, as outlined in <italic>Considerations about genomic data</italic>. The Titan toolkit is bound to C++, offering limited ways in which a connection to the R/Bioconductor infrastructure could be established. In addition, customizing the code of Epiviz is an easy task partially because of our choice of JavaScript as the main programming environment for the framework. With Titan, in order to create a plugin, one needs to instantiate and build the entire framework on the local machine. In contrast, the current design of Epiviz requires no download, being able to interpret and execute third-party code from cloud-based locations such as GitHub. Our option also implicitly solves a security concern since JavaScript is given limited access to the user file system, which is ensured by web browser vendors. Desktop-based software on the other hand, is vulnerable to a wide variety of security vulnerabilities.</p></sec><sec><title>Spotfire</title><p>Spotfire is a commercial desktop-based data analysis and visualization tool which also comes with a wide variety of analytic features, like brushing and linking, multivariate statistical functions, as well as a feature which allows users to define custom data transformations by writing IronPython code directly into the UI. As powerful as it is, the tool comes with a number of limitations which make it difficult to use for genomic data analysis workflows. The most evident is the fact that the tool is OS-dependent, being able to run solely on Windows. This is a serious drawback for the genomics community, where more than half of the users work on either Macintosh or Linux (Sup. Figure 3 in Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>). Like Titan, Spotfire does not natively support common genomic data types, and relies on loading the entire data in memory, making it unfeasible to use for extremely large datasets.</p></sec><sec><title>Epiviz</title><p>Epiviz brings code to visualizations in ways similar to those described in the previous sections.</p><p>First of all, it features a WebSockets API similar to that used by Shiny, which allows communication between the web framework and any environment that implements the corresponding endpoint protocol. This API is used by Epivizr, a Bioconductor package that permits communication between the R computational environment and the Epiviz user interface.</p><p>Secondly, Epiviz exposes a plugin API for both data providers and visualizations, so that new data sources can be easily added as needed, and new visualizations can be defined to display the same data from different perspectives. Custom JavaScript code for new visualizations or data providers, can be plugged in on-the-fly using GitHub Gists, similar to the way IPython and RCloud incorporate custom user notebooks.</p><p>Finally, a set of code features provides a gateway into the parts of JavaScript code that matters for the effective transformation of visualizations and data depicted in them. These are described in detail in <italic>Visualization customization in the UI </italic>and <italic>Data transformation in the UI</italic>.</p></sec></sec><sec><title>Epivizr</title><p>Epivizr is an R/Bioconductor package that uses the data provider WebSocket protocol to connect to the Epiviz framework. Through it, Epiviz makes requests to the R environment so data in R objects is served in response. All data sources catalogued by the AnnotationHub Bioconductor resource are available for integration as measurements via Epivizr: the UCSC genome browser database [<xref ref-type="bibr" rid="B10">10</xref>], Ensembl [<xref ref-type="bibr" rid="B11">11</xref>], and BioMart [<xref ref-type="bibr" rid="B19">19</xref>]. Infrastructure from the core Bioconductor team and hundreds of contributed packages are used in a large number of projects analyzing data that ranges from expression microarrays to next-generation sequencing. Due to Epivizr, users of Epiviz immediately benefit from the fundamental data structures exposed by Bioconductor in their analyses. Conversely, developers of new methods in R and Bioconductor have now access to an interactive way of visualizing data at each step of development.</p><p>Epivizr features updating, filtering and subsetting operations on R objects that trigger updates in their corresponding visualizations in Epiviz. One of its most important capabilities is that it supports interactive exploratory browsing by, for example, allowing users to navigate in order through a set of genomic regions defined in R, using the <italic>slideshow </italic>feature. Thereby, users can rank regions of interest according to some predefined, or computed attribute. A canonical example is navigation through regions of differentially expressed genes from an RNAseq experiment obtained from packages like DESeq or EdgeR.</p></sec><sec><title>Software extension using JavaScript dynamic code interpretation</title><p>One powerful feature of JavaScript is its ability to evaluate strings of text into runnable code, which Epiviz makes use of, to dynamically incorporate custom user logic into the framework. In this section we expand over the different kind of functionalities based on this feature available in Epiviz. Also, in the <italic>Results and discussion </italic>section we discuss the security implications of taking this path, as well as our approaches to addressing them.</p><sec><title>External scripts</title><p>One way in which we make use of this capability is by providing an extension in the API which permits automatically incorporating user specified external scripts that can override existing functionality, such as visualizations, data providers and settings, or define new ones. The new visualizations, data providers and custom settings are ready to use immediately, alongside predefined ones. On launch, Epiviz first loads the base framework logic and searches for scripts specified using user-provided parameters. Epiviz then executes the code in these scripts in sandbox mode and UI elements are immediately updated. Epiviz supports the GitHub Gist API, which makes it possible for users to specify code stored on this source control provider. Using this functionality, users can collaborate on a set of scripts simultaneously, sharing their work while using a common set of workspaces as the functionality contained in the scripts evolves.</p><p>Visualization plugins can be easily created using the Epiviz Visualization API, which exposes a series of interfaces and base classes. These classes implement basic functionality, like drawing axes, creating a main SVG canvas where drawing is done, drawing legends etc., which can in turn be used by plugins that only need to implement a <italic>draw </italic>method, greatly simplifying the complexity of plugin code. Figure <xref ref-type="fig" rid="F2">2</xref> shows an example of an externally defined visualization that follows this API, and whose code is hosted using GitHub Gist.</p><fig id="F2" position="float"><label>Figure 2</label><caption><p><bold>Screenshot of Epiviz</bold>. It shows the main elements available within the tool: 1) the <italic>main </italic><italic>toolbar</italic>, featuring all UI controls; 2) a <italic>scatter plot</italic>, showing two <italic>computed measurements</italic>: the average and difference between colon gene expression for normal and cancer tissues; the code for this plot is customized in the UI to show a line at <italic>y=</italic>0, that separates genes with positive and negative differences; 3) a <italic>heatmap</italic>, showing values from the Gene Expression Barcode [<xref ref-type="bibr" rid="B4">4</xref>] comparing the normal and cancer expressions for different tissues. Using its clustering feature, we notice that tumors tend to group separately from normal tissues; in addition, the clustering result seems to be determined by a small number of genes, namely MMP1, MMP3 and MMP10; 4) a stacked plot, showing two columns for normal and cancer gene expression; it uses the <italic>color by </italic>transformation, to highlight genes with various expression differences. This plot offers several insights: first, that overall expression tends to be higher for cancer than normal tissues; second, it allows us to immediately spot the differentially expressed genes, by brushing over the blocks colored in <italic>deep red</italic>, corresponding to them; 5) a custom track defined in a plugin hosted on GitHub Gist, showing blocks aligned to the genome, with height corresponding to the expression of the genes; 6) a <italic>stacked track</italic>, showing a <italic>computed measurement</italic>, corresponding to the difference between normal and cancer methylation; this track offers an insight over the hypo/hyper-methylated blocks; 7) a <italic>lines track</italic>, showing DNA methylation for normal and cancer colon tissues; the track uses the <italic>group by </italic>transformation to aggregate three normal samples and three tumor samples, and displays error bars to show the variation of methylation for each group at each data point; in addition, it uses <italic>basis </italic>interpolation to smoothly connect the available data points; 8) a <italic>genes track</italic>, showing human genome genes fetched from the <italic>UCSC database</italic>[<xref ref-type="bibr" rid="B10">10</xref>] using a <italic>data provider plugin </italic>stored externally on GitHub Gist; 9) a tooltip showing details on demand for the gene MMP1. The highlighted items correspond to the brushing feature, triggered while hovering over the MMP1 gene in the genes track. The feature links all visualizations together by genomic location. <ext-link ext-link-type="uri" xlink:href="http://epiviz.cbcb.umd.edu/?gist[]=160e8b84795603961b9f&#x00026;gist[]=5a88f39caa801e58b8ae&#x00026;ws=GJU2bfURaUd">http://epiviz.cbcb.umd.edu/?gist[]=160e8b84795603961b9f&#x00026;gist[]=5a88f39caa801e58b8ae&#x00026;ws=GJU2bfURaUd</ext-link></p></caption><graphic xlink:href="1471-2105-16-S11-S4-2"/></fig><p>New data providers can be specified in Epiviz using the same mechanism, and a Data Provider API, designed to allow users to dynamically plug in custom sources of data. Using the data provider plugin mechanism, Epiviz can display data located remotely or on the local machine. Conceptually, Epiviz data providers represent proxies to real data sources. For example, the WebSocket data provider enables connections with R/Bioconductor through the Epivizr package. Different data providing services are interfaced through an API that de-centralizes data storage by allowing users to easily integrate external data sources. Figure <xref ref-type="fig" rid="F2">2</xref> contains a track that displays human genome genes from the <italic>refGenes </italic>SQL table, in the UCSC database. This is done through a custom data provider, plugged into Epiviz using the <italic>gist </italic>feature.</p></sec><sec><title>Visualization customization in the UI</title><p>Epiviz also introduces a mechanism that permits users to customize charts' code directly in the UI, as well as to define simple data transformations. Using this, users can alter individual visualizations in place to match their needs. The code of chart <italic>instances </italic>can be modified such as to incorporate additional functionality per user needs. For example, the scatter plot in Figure <xref ref-type="fig" rid="F2">2</xref> contains a line at <italic>y</italic>=0, separating positive and negative gene expression differences. In Sup. Figure 4 in Additional file <xref ref-type="supplementary-material" rid="S1">1</xref> we show the dialog where users can edit the visualization code, and the code necessary to apply this particular transformation to the scatter plot.</p></sec><sec><title>Data transformation in the UI</title><p>The same type of functionality is used to apply data transformations for individual visualizations. These define ways in which the data that comes into a visualization should be transformed prior to rendering. Currently, Epiviz provides support for the following transformations: 1) <italic>filter </italic>by data object properties; 2) <italic>color by </italic>measurement or coordinate properties; 3) <italic>group by </italic>measurement properties; 4) <italic>order by </italic>measurement properties.</p><p>In the following lines we expand on these transformations. Each of them exposes two functions that users can implement using the code editor controls in the <italic>code dialog </italic>(Figure <xref ref-type="fig" rid="F3">3</xref>, Sup. Figure 4 in Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>). The first is called before any transformation, and is used to define and initialize variables to be used throughout the transformation; the second function corresponds to the actual transformation, and is called for each object, measurement, or feature coordinate in the selected genomic region, depending on the transformation.</p><fig id="F3" position="float"><label>Figure 3</label><caption><p><bold>Custom <italic>color by </italic>transformation for the stacked plot</bold>. This code computes the absolute difference between the two measurements - for example gene expression normal and cancer - in the plot, and splits it in increments of 4. The resulting plot will colour genes with different colours, each corresponding to its expression difference.</p></caption><graphic xlink:href="1471-2105-16-S11-S4-3"/></fig><p>In the <italic>filter by </italic>transformation, the inputs correspond to records in a <italic>data source </italic>(Sup. Figure 1 in Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>). Each input contains coordinate information, as well as a feature value. The <italic>filter by </italic>function yields a <italic>Boolean </italic>with the following semantics: 1) a returned value of <italic>true </italic>signifies that the item should be drawn in the visualization, while 2) <italic>false </italic>means that it should be hidden.</p><p>The <italic>color by, group by </italic>and <italic>order by </italic>transformations, all have the same signature (Figure <xref ref-type="fig" rid="F3">3</xref>): they can be set up to take as inputs either <italic>data source </italic>records, <italic>measurements</italic>, or <italic>feature coordinates</italic>. Based on the input, the function returns a <italic>label</italic>, in the form of a text string or a number. Labels are used by each transformation accordingly. For example, <italic>color by </italic>will use them to color the objects with the same label with the same color. <italic>Group by </italic>uses a user-selected aggregation function to aggregate all objects with the same label into one visualization object. Finally, <italic>order by </italic>sorts objects in the visualization according to the lexicographic order of their corresponding labels.</p><p>For example, the stacked plot in Figure <xref ref-type="fig" rid="F2">2</xref> uses a <italic>color by </italic>transformation, which is used to highlight genes with various expression differences - <italic>0-4</italic>, light blue, <italic>4-8</italic>, dark blue, <italic>8-12</italic>, orange, and <italic>&#x0003e;12</italic>, red. The code necessary to apply this transformation is depicted in Figure <xref ref-type="fig" rid="F3">3</xref> which shows a screenshot of the contents of a code transformation dialog.</p><p>Another example is the <italic>lines track </italic>depicted in Figure <xref ref-type="fig" rid="F2">2</xref> which uses a <italic>group by </italic>transformation, where the two labels are <italic>tumor</italic>, if the measurement corresponds to a tumor sample, and <italic>normal </italic>otherwise.</p><p>The Epiviz API also implements a simple computing language for creation of new measurements from combining existing ones. We call the result <italic>computed measurements</italic>. These differ from the previously mentioned transformations in that they act like regular measurements in the framework, and are available globally for all visualizations to use. For example, based on the gene expression values for normal and cancer colon tissues, we generated a particular kind of scatter plot also known in genomic data analysis as an <italic>MA plot </italic>- the <italic>x </italic>axis shows the average gene expression for normal and cancer colon tissues, while <italic>y </italic>corresponds to the difference. This plot is used in the use case presented in the <italic>Results and discussion </italic>section and shown in Figure <xref ref-type="fig" rid="F2">2</xref>. Dudoit et al. [<xref ref-type="bibr" rid="B33">33</xref>] offers an in-depth analysis of the motivation behind choosing this kind of plot for differential gene expression analysis. Computed measurements values are calculated lazily, as needed by visualizations, just for data represented on the screen.</p><p>In the use case illustrated in the <italic>Results and discussion </italic>section, we provide several examples of each of these features - chart code customization, data transformations, as well as computed measurements.</p></sec></sec><sec><title>Visualization system concepts put together for the first time in genomics</title><p>Apart from bringing code to visualizations on various levels, Epiviz also uses a series of design choices and features of which some have been used before for genome browsing, others for other various types of systems. What makes Epiviz stand out is that it is the first software to put all of them together in an integrative genomics interactive visual software. In this section we present some of the most important of these choices, underlining, where necessary, the motivation that led to their development, as well as benefits that follow their implementation.</p><sec><title>Visual encodings</title><p>The Epiviz UI offers data scientists a combination of <italic>multiple coordinated views </italic>and <italic>overlays</italic>, featuring <italic>brushing </italic>and <italic>linking</italic>. The main goal behind this is to enable both data comparison and visual validation in order to help users extract insights and gain both an overall and detailed understanding of the data. Epiviz provides out-of-the-box visualizations that are both <italic>feature- </italic>and <italic>genomic location-oriented</italic>, to help provide a multidimensional comprehension of the explored domain. Both types of visualizations offer in turn different kinds of graphical representations; for example some of the available feature-oriented views are the <italic>heatmap </italic>and <italic>stacked plot</italic>, while some of the available location-oriented views are the <italic>genes </italic>and <italic>line tracks </italic>(Figure <xref ref-type="fig" rid="F2">2</xref>). This differentiates Epiviz from most other genome browsers, which usually feature only <italic>genomic location-oriented </italic>visualizations.</p><p>All graphics are rendered using Scalable Vector Graphics (SVG), an XML vector format that all modern browsers can interpret. Choosing this format allows users to treat objects in charts independently, as direct representations of data [<xref ref-type="bibr" rid="B34">34</xref>], as well as to perform specific operations on them, by customizing their properties - shape, color, size, stroke, transparency, etc. This opens the door to a wide variety of options available directly to visualizations, of which perhaps the most important are <italic>brushing and linking, object tooltips</italic>, and the ability to save views as both vector and raster static images.</p></sec><sec><title>Brushing</title><p>Through brushing, users have the ability to visually link data from all visualizations on the screen (Figure <xref ref-type="fig" rid="F2">2</xref>). By hovering over/selecting a particular object in one chart, related objects are automatically highlighted in all other charts as well. The unified data types used in Epiviz include identifiers for <italic>data source groups </italic>which declare keys for each set of observations, to establish data relationships used in the brushing feature. Therefore, all <italic>data sources </italic>from the same group are assumed to have the same keys. In the absence of keys, we use feature coordinate overlap to establish these relationships as well. Notice that this design is extremely flexible since keys defining data relationships are defined dynamically. Brushing is available in Epiviz due to the choice of SVG as the rendering mechanism, since each object on the screen corresponds to an HTML element in the DOM. Hovering or clicking on an object thus triggers events that all visualizations listen to in order to decide which objects will be highlighted at their end.</p></sec><sec><title>Collaboration through sharing of analysis steps</title><p>One important functionality essential to scientific data analysis, and yet inexistent in current genome browsers, is that of persistently saving and sharing steps of an analysis within the scientific community. Often times, operations that should be straightforward, such as replicating results presented in publications pose big challenges and come with heavy overhead. Through Epiviz, we take the first steps in the direction of simplifying this process, through a feature called <italic>workspaces</italic>. Workspaces were first introduced in our previous work [<xref ref-type="bibr" rid="B1">1</xref>]; however, following that, we extended them with new analysis state components, such as code customizations and data transformations, so that any user action within the software could be tracked and reproduced.</p><p>Workspaces contain complete information needed to reproduce analysis states in Epiviz. All visualizations on the screen, including their customizations (screen coordinates, code changes, data transformations and color palettes), and the current genomic location in view are included as part of a workspace. Workspaces are stored in a database on the Epiviz server hosted at the University of Maryland. To save analysis steps, users need to authenticate using an OpenID account. Once logged in, users can create new workspaces and replicate existing ones shared with them. Storage management for persistent workspaces is part of the data provider API. Source code for this type of server is publicly available on the Epiviz project page and can be installed on a standard PHP/MySQL system to provide the same functionality if users desire to keep their workspaces private on a local server. Once created, a workspace is associated with a unique id that can be used to share individual work with other users, through permanent hyperlinks. Using the workspace id, any user can view a particular workspace, and copy its contents to their own account. This mechanism can be used for either sharing data analyses between users or even for referencing figures in publications (Figure <xref ref-type="fig" rid="F2">2</xref>).</p></sec></sec></sec><sec><title>Results and discussion</title><sec><title>Exploring the relationship between gene expression and DNA methylation</title><p>We present a use case that highlights the most powerful features of Epiviz, with an emphasis on the ones introduced following the work presented in Chelaru et al. [<xref ref-type="bibr" rid="B1">1</xref>]. We used Epiviz to explore the relationship between DNA methylation and gene expression within normal and tumor colon tissues. Our goal was to examine regions in the genome where the difference in gene expression between the two is large.</p><p>We started with a <italic>genes track </italic>showing gene models from the UCSC database. To fetch this data, we used a custom <italic>data provider </italic>plugin stored on GitHub Gist. In order to find regions in the genome where expression differences are large, we used two <italic>computed measurements</italic>, corresponding to the <italic>average</italic>, and <italic>difference </italic>gene expression, respectively, for RNA-seq data from chromosome 11. We displayed these using a <italic>scatter plot</italic>. In order to better observe expression differences, we dynamically customized the code of the scatter plot to show a line at <italic>y </italic>= 0 (Figure <xref ref-type="fig" rid="F2">2</xref>). We identified two genes with large expression difference by selecting the outliers in this plot from all genes in chromosome 11: <italic>MMP1 </italic>and <italic>MMP3</italic>. The brushing feature allowed us to observe that these outliers are also adjacent in the genome. To find the exact genomic locations of these genes, we hovered over them to trigger a tooltip (Figure <xref ref-type="fig" rid="F4">4</xref>, Figure <xref ref-type="fig" rid="F2">2</xref>).</p><fig id="F4" position="float"><label>Figure 4</label><caption><p><bold>An overview of gene expression in chromosome 11</bold>. The <italic>scatter plot </italic>shows colon normal and tumour gene expression average on the <italic>x </italic>axis, and difference on the <italic>y </italic>axis. The <italic>genes track </italic>shows genes fetched from the UCSC database, using a <italic>data provider </italic>plugin hosted on GitHub Gist (<ext-link ext-link-type="uri" xlink:href="http://gist.github.com/5a88f39caa801e58b8ae">http://gist.github.com/5a88f39caa801e58b8ae</ext-link>). The highlighted data point in the scatter plot corresponds to a gene expression difference outlier. Using the <italic>brushing </italic>feature of Epiviz, we link this outlier to its corresponding gene in the <italic>genes track</italic>. <ext-link ext-link-type="uri" xlink:href="http://epiviz.cbcb.umd.edu/?gist[]=5a88f39caa801e58b8ae&#x00026;ws=gdmUH1ANl3m">http://epiviz.cbcb.umd.edu/?gist[]=5a88f39caa801e58b8ae&#x00026;ws=gdmUH1ANl3m</ext-link></p></caption><graphic xlink:href="1471-2105-16-S11-S4-4"/></fig><p>We zoomed into a smaller genomic region to examine these genes at high resolution. To check whether expression differences are consistent across tissue types, we added a <italic>heatmap </italic>with aggregated expression data from the Gene Expression Barcode [<xref ref-type="bibr" rid="B4">4</xref>], for six different tissue types, both normal and tumor: colon, stomach, breast, kidney, lung and esophagus. We used this visualization's <italic>clustering </italic>feature to group tissues based on gene expression similarity within this genomic region. The high expression differences for the <italic>MMP1 </italic>and <italic>MMP3 </italic>genes, between normal and tumor tissues, across tissue types, played a decisive role in the clustering result (Figure <xref ref-type="fig" rid="F2">2</xref>, Sup. Figure 5 in Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>).</p><p>Next, we added a new visualization called <italic>stacked plot</italic>, showing two columns, corresponding to the summed gene expression for normal and cancer tissues respectively. This visualization stacks values for different genes, one on top of the other, depicting each gene with a different color. Using a <italic>color by </italic>transformation, we customized this plot to color-code different genes according to the expression differences (Figure <xref ref-type="fig" rid="F3">3</xref>). Analyzing the result yields a couple of insights: first, that overall gene expression tends to be higher for cancer tissues; and second, that genes with high expression difference tend to be collocated in the same region of the genome (Figure <xref ref-type="fig" rid="F2">2</xref>).</p><p>To examine gene expression along the genomic coordinate in relation with DNA methylation, we created a custom track plugin, which we stored on GitHub Gist. The track displays genes as blocks aligned to the genome, whose height corresponds to the gene expression. We also added a new visualization called <italic>stacked track</italic>, which we used to display a <italic>computed measurement</italic>, corresponding to the difference in methylation levels between normal and cancer samples (Figure <xref ref-type="fig" rid="F2">2</xref>, Figure <xref ref-type="fig" rid="F3">3</xref>). The data for these measurements corresponds to base-pair-resolution smoothed methylation log ratio resulted from sequencing of bisulfite-converted DNA [<xref ref-type="bibr" rid="B35">35</xref>]. The advantage of this type of visualization over the traditional <italic>blocks track </italic>which we used in the previous version of our work is that this offers not only information about the location of <italic>hypomethylated blocks</italic>, but in addition, it provides a two-dimensional high resolution understanding of the structure of these blocks. For example, examining these two tracks side by side, we were able to extract a number of insights: first, the density of genes increases as methylation difference decreases; second, gene expression for both normal and tumor samples increases in regions where methylation difference is smaller; and third, we were able to differentiate between hypomethylated regions by their level of auto-correlation (smoothness) at base-pair level, which links well in this region with gene expression differences.</p><p>Finally, we created a line track showing the methylation levels for six different samples, three normal and three tumor. We used the <italic>group by </italic>transformation, to aggregate normal and cancer samples together respectively (Figure <xref ref-type="fig" rid="F2">2</xref>). A high resolution view over the data allowed us to further differentiate between the two hypomethylated blocks in view: the first, ranging from 102.3 Mbp to 102.9 Mbp, and the second, ranging from 103 Mbp onward.</p><p>We discovered that although at the block-level there is an overall difference between cancer and normal methylation, the degree of auto-correlation in the methylation data at base pair resolution varies within the block. Furthermore, we observed that genes that show high differences in expression tend to collocate with regions of low methylation auto-correlation (lower smoothness) while genes that are not differentially expressed collocate with regions of high methylation auto-correlation (high smoothness). This analysis suggests that understanding the relationship between expression and methylation within long epigenetic domains requires that methylation data is analyzed at multiple genomic resolutions. Using Epiviz, it was easy to switch between low and high resolutions to facilitate these type of multi-resolution analyses.</p></sec><sec><title>Notes about software security</title><p>One challenge that comes with allowing Epiviz to incorporate and run third-party scripts consists of the security risks associated with SQL injection and cross-site scripting (XSS) [<xref ref-type="bibr" rid="B36">36</xref>]. The main concern is that, having access to private user information, third-party scripts could be used to compromise user content, privacy, and sensitive data. In this section we underline the ways in which Epiviz addresses these concerns in order to provide a safe data analysis environment.</p><p>Epiviz features a server side component, and a client JavaScript component, the latter containing the entire framework functionality, described in this paper. The server side component contains a web service for a number of public epigenetic datasets, similar to those hosted on other genome browser servers, as well as private Epiviz user information, such as their OpenID account data provided when signing up, and workspaces associated to it. The public sets of epigenetic data are served in a read-only fashion, no changes to it being permitted to users accessing the service. OpenID information cannot be retrieved using the web services endpoint; in addition, information about a particular user cannot be modified externally after the user has logged in for the first time, having successfully authenticated using the corresponding OpenID provider. The only information that can be both retrieved and modified externally on the server side is that of user workspaces. Changes to workspaces can be made within the session of their owner. All database access for the webserver is achieved through PHP prepared statements [<xref ref-type="bibr" rid="B37">37</xref>] which are guaranteed safe from SQL injection.</p><p>This implementation leaves room for only one type of potential attacks. Malicious external JavaScript code, being incorporated into Epiviz using the dynamic code interpretation feature, might gain access to the user session and potentially compromise workspaces information, the only kind of private information that can be accessed and modified externally. Alternatively, it could extract private information such as that stored in user cookies, and transmit it to a phishing server using, for example, AJAX calls. This constitutes a great vulnerability, and therefore, we needed to find a solution which would allow the execution of third-party scripts in a sandbox mode, with no access to sensitive information or actions that might compromise data integrity.</p><p>To address this vulnerability, we used a JavaScript sanitizing library called Caja [<xref ref-type="bibr" rid="B38">38</xref>], which allows third-party scripts to be executed by the same JavaScript runtime environment as the framework code, but in sandbox mode, with restrictions defined within the host script.</p><p>Whether the scripts are stored externally, or they consist of custom code inserted using the web-browser code editor, they are executed in protected mode, which effectively defends against XSS attacks. This security feature allows Epiviz to be the first visualization tool to allow its users the wide range of power that comes with expanding functionality through third-party plug-ins and code customization.</p></sec><sec><title>Future research directions</title><sec><title>Performance and optimization</title><p>There are three ways of addressing the limitations brought by the choice of JavaScript as the main programming environment for our framework. In this section we describe some which we are looking to implement in our future work: 1) a clearer separation of data processing operations from visualizations, to better use with web workers; 2) the use of the WebGL technology, which comes with all the power of gaining direct access to the GPU [<xref ref-type="bibr" rid="B39">39</xref>]; 3) as the new technology WebCL [<xref ref-type="bibr" rid="B40">40</xref>] becomes available, and execution threads are introduced into the language, move some of the most CPU-consuming operations of Epiviz into secondary execution threads.</p><p>The choice of SVG for rendering visualizations also comes with a number of limitations which we describe in the supplementary material. In Chelaru et al. [<xref ref-type="bibr" rid="B1">1</xref>] we discussed a number of optimizations for individual charts, as well as their effects over render latencies. What is not said there is that these optimizations cannot, because of the design decisions of Epiviz, be generalized so that new visualizations can take advantage of them. A solution for this drawback, which we are looking at implementing in future versions of our software, is to alternate between raster views and vector views, depending on the amount of data loaded in memory. We anticipate this approach to significantly improve user experience for the visualization of extremely large datasets.</p></sec><sec><title>Research directions in collaboration</title><p>Epiviz has taken a few preliminary steps in the direction of providing a collaboration-friendly environment. Two features in particular are aimed to help teams that work on a joint data analysis project: 1) workspaces, which provide a way of storing analysis steps persistently, and sharing them among the community; 2) an API that has support for custom software plugins created within the scientific community, stored on GitHub Gist, which can be used to share visualizations and data providers among users. In addition, as the entire code base of Epiviz is open-source, users from the scientific community are able to report errors or new ideas, as well as contribute to the development of the project. However, these represent only our preliminary efforts in a long-term plan of creating a truly collaborative data analysis environment and by no means do we consider them complete. In this section we briefly introduce the next two steps we mean to take in this direction, based on previous research on this topic [<xref ref-type="bibr" rid="B41">41</xref>] as well as related examples [<xref ref-type="bibr" rid="B26">26</xref>,<xref ref-type="bibr" rid="B27">27</xref>] where approaches have proved to provide a high level of collaboration, enhancing usability, transparency and interaction among users.</p><p>A first step is to centralize workspaces, as well as custom user code used for both plugins and data transformations, in a webpage similar to those provided by IPython and RCloud for user notebooks. We intend to allow our users to browse existing workspaces and plugins, copy and extend them, as well as rank them using a starring system. The goal for this feature is to introduce transparency and awareness within the Epiviz community, allowing users to dynamically interact with each other and expand the usability of the framework.</p><p>The second step is to introduce <italic>same-workspace concurrent collaboration</italic>. The current functionality already allows the same Epiviz instance to pull data from multiple sources, of which several can be either R or Python sessions. These sessions can be located on any network-accessible machine. This opens the door to a peer-to-peer type of collaboration similar to that of Google Docs, where multiple users can connect to the same data sources and computational environment sessions, and interact from different workstations over the same joint workspace simultaneously. Changes made to the workspace by one user will be immediately propagated and become visible to all other users connected to the same R session. The current architecture of Epivizr is one step away from permitting this kind of functionality. The only thing missing is an awareness component within the Epivizr package which will track the activity of each connected user, and propagate it to all the others. The peer-to-peer approach also implies that no centralized server would be necessary for this architecture, delegating that functionality to the R/Epivizr sessions instead.</p></sec><sec><title>Incorporating new technologies</title><p>Epiviz was designed with the goal of easily incorporating new technologies, both on the data integration side (as new infrastructure in Bioconductor is designed to incorporate new genomic data types) and the visualization side. For example, new technologies such as <italic>htmlwidgets </italic>[<xref ref-type="bibr" rid="B42">42</xref>], released after the initial launch of Epiviz, consists of an R package that provides a framework for creating R bindings to JavaScript libraries. Users and developers are tasked with creating wrappers around JavaScript libraries, in order to use them directly in R applications. The package can be used alongside Shiny to facilitate two-way communication between R and JavaScript. The design of Epiviz permits the creation of bindings for the Epiviz <italic>visualizations tier</italic> using <italic>htmlwidgets</italic>, to facilitate the use of our visualizations independently of genomics data analyses. Generic visualizations included in Epiviz, such as the heatmap or scatter plot, which have grown to be very feature-rich - exposing options for coloring by data features, clustering, binning, brushing and linking, etc. - can thus be made available to the entire R community in a lightweight fashion, without the tight coupling to the entire Epiviz framework, or the Epivizr Bioconductor package.</p></sec></sec></sec><sec sec-type="conclusions"><title>Conclusions</title><p>We gave an overview of the motivations that led to the development of Epiviz as well as a series of design decisions and features that have never been put together before genomics interactive visual analysis. Epiviz is the first genomic data analysis software that brings code to interactive visualization, bridging the gap between computational environments and genome browsers. The software also sets a precedent for genomic data analysis collaborative workflows by enabling reproducible and shareable steps, and allowing custom user code to be dynamically incorporated, while guaranteeing the security and integrity of user data.</p></sec><sec><title>Availability and requirements</title><p>Epiviz is available at <ext-link ext-link-type="uri" xlink:href="http://epiviz.cbcb.umd.edu">http://epiviz.cbcb.umd.edu</ext-link>. Epivizr is available as a Bioconductor package (<ext-link ext-link-type="uri" xlink:href="http://bioconductor.org">http://bioconductor.org</ext-link>). Documentation is available at <ext-link ext-link-type="uri" xlink:href="http://epiviz.cbcb.umd.edu/help">http://epiviz.cbcb.umd.edu/help</ext-link>.</p></sec><sec><title>List of abbreviations</title><p>DNAm: DNA methylation; DMR: differentially methylated region.</p></sec><sec><title>Competing interests</title><p>The authors declare that they have no competing interests.</p></sec><sec><title>Authors' contributions</title><p>FC and HCB designed the software, analyzed data and wrote the manuscript.</p></sec><sec sec-type="supplementary-material"><title>Supplementary Material</title><supplementary-material content-type="local-data" id="S1"><caption><title>Additional File 1</title></caption><media xlink:href="1471-2105-16-S11-S4-S1.pdf"><caption><p>Click here for file</p></caption></media></supplementary-material></sec></body><back><sec><title>Acknowledgements and declarations</title><p>We thank the Bioconductor core team and members of the Bioinformatics and Computational Biology Department of Genentech Research and Early Development for helpful suggestions and comments. This work and publication was partially supported by US National Institutes of Health grants R01 HG006102 to H.C.B. and F.C., R01 HG005220 to H.C.B., and support from Genentech.</p><p>This article has been published as part of <italic>BMC Bioinformatics </italic>Volume 16 Supplement 11, 2015: Proceedings of the 5th Symposium on Biological Data Visualization: Part 1. The full contents of the supplement are available online at <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/bmcbioinformatics/supplements/16/S11">http://www.biomedcentral.com/bmcbioinformatics/supplements/16/S11</ext-link></p></sec><ref-list><ref id="B1"><mixed-citation publication-type="journal"><name><surname>Chelaru</surname><given-names>F</given-names></name><name><surname>Smith</surname><given-names>L</given-names></name><name><surname>Goldstein</surname><given-names>N</given-names></name><name><surname>Bravo</surname><given-names>HC</given-names></name><article-title>Epiviz: interactive visual analytics for functional genomics data</article-title><source>Nat Methods</source><year>2014</year><volume>11</volume><issue>9</issue><fpage>938</fpage><lpage>940</lpage><pub-id pub-id-type="doi">10.1038/nmeth.3038</pub-id><?supplied-pmid 25086505?><pub-id pub-id-type="pmid">25086505</pub-id></mixed-citation></ref><ref id="B2"><mixed-citation publication-type="journal"><name><surname>Aryee</surname><given-names>MJ</given-names></name><name><surname>Jaffe</surname><given-names>AE</given-names></name><name><surname>Corrada-Bravo</surname><given-names>H</given-names></name><name><surname>Ladd-Acosta</surname><given-names>C</given-names></name><name><surname>Feinberg</surname><given-names>AP</given-names></name><name><surname>Hansen</surname><given-names>KD</given-names></name><name><surname>Irizarry</surname><given-names>RA</given-names></name><article-title>Minfi: a flexible and comprehensive Bioconductor package for the analysis of Infinium DNA methylation microarrays</article-title><source>Bioinformatics</source><year>2014</year><volume>30</volume><issue>10</issue><fpage>1363</fpage><lpage>1369</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btu049</pub-id><?supplied-pmid 24478339?><pub-id pub-id-type="pmid">24478339</pub-id></mixed-citation></ref><ref id="B3"><mixed-citation publication-type="journal"><name><surname>Hansen</surname><given-names>KD</given-names></name><name><surname>Langmead</surname><given-names>B</given-names></name><name><surname>Irizarry</surname><given-names>RA</given-names></name><article-title>BSmooth: from whole genome bisulfite sequencing reads to differentially methylated regions</article-title><source>Genome Biol</source><year>2012</year><volume>13</volume><issue>10</issue><fpage>R83</fpage><pub-id pub-id-type="doi">10.1186/gb-2012-13-10-r83</pub-id><?supplied-pmid 23034175?><pub-id pub-id-type="pmid">23034175</pub-id></mixed-citation></ref><ref id="B4"><mixed-citation publication-type="journal"><name><surname>McCall</surname><given-names>MN</given-names></name><name><surname>Uppal</surname><given-names>K</given-names></name><name><surname>Jaffee</surname><given-names>HA</given-names></name><name><surname>Zilliox</surname><given-names>MJ</given-names></name><name><surname>Irizarry</surname><given-names>RA</given-names></name><article-title>The Gene Expression Barcode: leveraging public data repositories to begin cataloging the human and murine transcriptomes</article-title><source>Nucleic Acids Res</source><year>2011</year><volume>39</volume><issue>Database issue</issue><fpage>D1011</fpage><lpage>D1015</lpage><?supplied-pmid 21177656?><pub-id pub-id-type="pmid">21177656</pub-id></mixed-citation></ref><ref id="B5"><mixed-citation publication-type="journal"><name><surname>Kent</surname><given-names>WJ</given-names></name><name><surname>Sugnet</surname><given-names>CW</given-names></name><name><surname>Furey</surname><given-names>TS</given-names></name><name><surname>Roskin</surname><given-names>KM</given-names></name><name><surname>Pringle</surname><given-names>TH</given-names></name><name><surname>Zahler</surname><given-names>AM</given-names></name><name><surname>Haussler</surname><given-names>D</given-names></name><article-title>The human genome browser at UCSC</article-title><source>Genome Res</source><year>2002</year><volume>12</volume><issue>6</issue><fpage>996</fpage><lpage>1006</lpage><pub-id pub-id-type="doi">10.1101/gr.229102</pub-id><?supplied-pmid 12045153?><pub-id pub-id-type="pmid">12045153</pub-id></mixed-citation></ref><ref id="B6"><mixed-citation publication-type="journal"><name><surname>Robinson</surname><given-names>JT</given-names></name><name><surname>Thorvaldsd&#x000f3;ttir</surname><given-names>H</given-names></name><name><surname>Winckler</surname><given-names>W</given-names></name><name><surname>Guttman</surname><given-names>M</given-names></name><name><surname>Lander</surname><given-names>ES</given-names></name><name><surname>Getz</surname><given-names>G</given-names></name><name><surname>Mesirov</surname><given-names>JP</given-names></name><article-title>Integrative genomics viewer</article-title><source>Nat Biotechnol</source><year>2011</year><volume>29</volume><issue>1</issue><fpage>24</fpage><lpage>26</lpage><pub-id pub-id-type="doi">10.1038/nbt.1754</pub-id><?supplied-pmid 21221095?><pub-id pub-id-type="pmid">21221095</pub-id></mixed-citation></ref><ref id="B7"><mixed-citation publication-type="journal"><name><surname>Fiume</surname><given-names>M</given-names></name><name><surname>Williams</surname><given-names>V</given-names></name><name><surname>Brook</surname><given-names>A</given-names></name><name><surname>Brudno</surname><given-names>M</given-names></name><article-title>Savant: genome browser for high-throughput sequencing data</article-title><source>Bioinformatics</source><year>2010</year><volume>26</volume><issue>16</issue><fpage>1938</fpage><lpage>1944</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btq332</pub-id><?supplied-pmid 20562449?><pub-id pub-id-type="pmid">20562449</pub-id></mixed-citation></ref><ref id="B8"><mixed-citation publication-type="journal"><name><surname>Pak</surname><given-names>TR</given-names></name><name><surname>Roth</surname><given-names>FP</given-names></name><article-title>ChromoZoom: a flexible, fluid, web-based genome browser</article-title><source>Bioinformatics</source><year>2013</year><volume>29</volume><issue>3</issue><fpage>384</fpage><lpage>386</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/bts695</pub-id><?supplied-pmid 23220575?><pub-id pub-id-type="pmid">23220575</pub-id></mixed-citation></ref><ref id="B9"><mixed-citation publication-type="journal"><collab>Cancer Genome Atlas Network</collab><article-title>Comprehensive molecular characterization of human colon and rectal cancer</article-title><source>Nature</source><year>2012</year><volume>487</volume><issue>7407</issue><fpage>330</fpage><lpage>337</lpage><pub-id pub-id-type="doi">10.1038/nature11252</pub-id><?supplied-pmid 22810696?><pub-id pub-id-type="pmid">22810696</pub-id></mixed-citation></ref><ref id="B10"><mixed-citation publication-type="journal"><name><surname>Karolchik</surname><given-names>D</given-names></name><name><surname>Baertsch</surname><given-names>R</given-names></name><name><surname>Diekhans</surname><given-names>M</given-names></name><name><surname>Furey</surname><given-names>TS</given-names></name><name><surname>Hinrichs</surname><given-names>A</given-names></name><name><surname>Lu</surname><given-names>YT</given-names></name><article-title>The UCSC Genome Browser Database</article-title><source>Nucleic Acids Res</source><year>2003</year><volume>31</volume><issue>1</issue><fpage>51</fpage><lpage>54</lpage><pub-id pub-id-type="doi">10.1093/nar/gkg129</pub-id><?supplied-pmid 12519945?><pub-id pub-id-type="pmid">12519945</pub-id></mixed-citation></ref><ref id="B11"><mixed-citation publication-type="journal"><name><surname>Hubbard</surname><given-names>TJP</given-names></name><name><surname>Aken</surname><given-names>BL</given-names></name><name><surname>Ayling</surname><given-names>S</given-names></name><name><surname>Ballester</surname><given-names>B</given-names></name><name><surname>Beal</surname><given-names>K</given-names></name><name><surname>Bragin</surname><given-names>E</given-names></name><etal/><article-title>Ensembl 2009</article-title><source>Nucleic Acids Res</source><year>2009</year><volume>37</volume><issue>Database issue</issue><fpage>D690</fpage><lpage>D697</lpage><?supplied-pmid 19033362?><pub-id pub-id-type="pmid">19033362</pub-id></mixed-citation></ref><ref id="B12"><mixed-citation publication-type="journal"><name><surname>McKenna</surname><given-names>A</given-names></name><name><surname>Hanna</surname><given-names>M</given-names></name><name><surname>Banks</surname><given-names>E</given-names></name><name><surname>Sivachenko</surname><given-names>A</given-names></name><name><surname>Cibulskis</surname><given-names>K</given-names></name><name><surname>Kernytsky</surname><given-names>A</given-names></name><etal/><article-title>The Genome Analysis Toolkit: a MapReduce framework for analyzing next-generation DNA sequencing data</article-title><source>Genome Res</source><year>2010</year><volume>20</volume><issue>9</issue><fpage>1297</fpage><lpage>1303</lpage><pub-id pub-id-type="doi">10.1101/gr.107524.110</pub-id><?supplied-pmid 20644199?><pub-id pub-id-type="pmid">20644199</pub-id></mixed-citation></ref><ref id="B13"><mixed-citation publication-type="journal"><name><surname>Karolchik</surname><given-names>D</given-names></name><name><surname>Kuhn</surname><given-names>RM</given-names></name><name><surname>Baertsch</surname><given-names>R</given-names></name><name><surname>Barber</surname><given-names>GP</given-names></name><name><surname>Clawson</surname><given-names>H</given-names></name><name><surname>Diekhans</surname><given-names>M</given-names></name><article-title>The UCSC Genome Browser Database: 2008 update</article-title><source>Nucleic Acids Res</source><year>2008</year><volume>36</volume><issue>Database issue</issue><fpage>D773</fpage><lpage>D779</lpage><?supplied-pmid 18086701?><pub-id pub-id-type="pmid">18086701</pub-id></mixed-citation></ref><ref id="B14"><mixed-citation publication-type="journal"><name><surname>Fujita</surname><given-names>PA</given-names></name><name><surname>Rhead</surname><given-names>B</given-names></name><name><surname>Zweig</surname><given-names>AS</given-names></name><name><surname>Hinrichs</surname><given-names>AS</given-names></name><name><surname>Karolchik</surname><given-names>D</given-names></name><name><surname>Cline</surname><given-names>MS</given-names></name><article-title>The UCSC Genome Browser database: update 2011</article-title><source>Nucleic Acids Res</source><year>2011</year><volume>39</volume><issue>Database issue</issue><fpage>D876</fpage><lpage>D882</lpage><?supplied-pmid 20959295?><pub-id pub-id-type="pmid">20959295</pub-id></mixed-citation></ref><ref id="B15"><mixed-citation publication-type="journal"><name><surname>Clamp</surname><given-names>M</given-names></name><name><surname>Andrews</surname><given-names>D</given-names></name><name><surname>Barker</surname><given-names>D</given-names></name><name><surname>Bevan</surname><given-names>P</given-names></name><name><surname>Cameron</surname><given-names>G</given-names></name><name><surname>Chen</surname><given-names>Y</given-names></name><article-title>Ensembl 2002: accommodating comparative genomics</article-title><source>Nucleic Acids Res</source><year>2003</year><volume>31</volume><issue>1</issue><fpage>38</fpage><lpage>42</lpage><pub-id pub-id-type="doi">10.1093/nar/gkg083</pub-id><?supplied-pmid 12519943?><pub-id pub-id-type="pmid">12519943</pub-id></mixed-citation></ref><ref id="B16"><mixed-citation publication-type="journal"><collab>The ENCODE Project Consortium</collab><article-title>The ENCODE (ENCyclopedia Of DNA Elements) Project</article-title><source>Science</source><year>2004</year><volume>306</volume><issue>5696</issue><fpage>636</fpage><lpage>640</lpage><?supplied-pmid 15499007?><pub-id pub-id-type="pmid">15499007</pub-id></mixed-citation></ref><ref id="B17"><mixed-citation publication-type="journal"><name><surname>Siva</surname><given-names>N</given-names></name><article-title>1000 Genomes project</article-title><source>Nat Biotechnol</source><year>2008</year><volume>26</volume><fpage>256</fpage><pub-id pub-id-type="pmid">18327223</pub-id></mixed-citation></ref><ref id="B18"><mixed-citation publication-type="other"><article-title>A client for retrieving Bioconductor objects from AnnotationHub</article-title><uri>http://www.bioconductor.org/packages/release/bioc/html/AnnotationHub.html</uri></mixed-citation></ref><ref id="B19"><mixed-citation publication-type="journal"><name><surname>Durinck</surname><given-names>S</given-names></name><name><surname>Moreau</surname><given-names>Y</given-names></name><name><surname>Kasprzyk</surname><given-names>A</given-names></name><name><surname>Davis</surname><given-names>S</given-names></name><name><surname>De Moor</surname><given-names>B</given-names></name><name><surname>Brazma</surname><given-names>A</given-names></name><name><surname>Huber</surname><given-names>W</given-names></name><article-title>BioMart and Bioconductor: a powerful link between biological databases and microarray data analysis</article-title><source>Bioinformatics</source><year>2005</year><volume>21</volume><issue>16</issue><fpage>3439</fpage><lpage>3440</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/bti525</pub-id><?supplied-pmid 16082012?><pub-id pub-id-type="pmid">16082012</pub-id></mixed-citation></ref><ref id="B20"><mixed-citation publication-type="journal"><name><surname>Kinsella</surname><given-names>RJ</given-names></name><name><surname>K&#x000e4;h&#x000e4;ri</surname><given-names>A</given-names></name><name><surname>Haider</surname><given-names>S</given-names></name><name><surname>Zamora</surname><given-names>J</given-names></name><name><surname>Proctor</surname><given-names>G</given-names></name><name><surname>Spudich</surname><given-names>G</given-names></name><etal/><article-title>Ensembl BioMarts: a hub for data retrieval across taxonomic space</article-title><source>Database (Oxford)</source><year>2011</year><volume>2011</volume><fpage>bar030</fpage><?supplied-pmid 21785142?><pub-id pub-id-type="pmid">21785142</pub-id></mixed-citation></ref><ref id="B21"><mixed-citation publication-type="journal"><name><surname>Ross-Innes</surname><given-names>CS</given-names></name><name><surname>Stark</surname><given-names>R</given-names></name><name><surname>Teschendorff</surname><given-names>AE</given-names></name><name><surname>Holmes</surname><given-names>KA</given-names></name><name><surname>Ali</surname><given-names>HR</given-names></name><name><surname>Dunning</surname><given-names>MJ</given-names></name><etal/><article-title>Differential oestrogen receptor binding is associated with clinical outcome in breast cancer</article-title><source>Nature</source><year>2012</year><volume>481</volume><issue>7381</issue><fpage>389</fpage><lpage>393</lpage><?supplied-pmid 22217937?><pub-id pub-id-type="pmid">22217937</pub-id></mixed-citation></ref><ref id="B22"><mixed-citation publication-type="journal"><name><surname>Anders</surname><given-names>S</given-names></name><name><surname>Huber</surname><given-names>W</given-names></name><article-title>Differential expression analysis for sequence count data</article-title><source>Genome Biol</source><year>2010</year><volume>11</volume><issue>10</issue><fpage>R106</fpage><pub-id pub-id-type="doi">10.1186/gb-2010-11-10-r106</pub-id><?supplied-pmid 20979621?><pub-id pub-id-type="pmid">20979621</pub-id></mixed-citation></ref><ref id="B23"><mixed-citation publication-type="journal"><name><surname>McCarthy</surname><given-names>DJ</given-names></name><name><surname>Chen</surname><given-names>Y</given-names></name><name><surname>Smyth</surname><given-names>GK</given-names></name><article-title>Differential expression analysis of multifactor RNA-Seq experiments with respect to biological variation</article-title><source>Nucleic Acids Res</source><year>2012</year><volume>40</volume><issue>10</issue><fpage>4288</fpage><lpage>4297</lpage><pub-id pub-id-type="doi">10.1093/nar/gks042</pub-id><?supplied-pmid 22287627?><pub-id pub-id-type="pmid">22287627</pub-id></mixed-citation></ref><ref id="B24"><mixed-citation publication-type="journal"><name><surname>Smyth</surname><given-names>GK</given-names></name><article-title>Linear models and empirical bayes methods for assessing differential expression in microarray experiments</article-title><source>Stat Appl Genet Mol Biol</source><year>2004</year><volume>3</volume><fpage>Article3</fpage><?supplied-pmid 16646809?><pub-id pub-id-type="pmid">16646809</pub-id></mixed-citation></ref><ref id="B25"><mixed-citation publication-type="journal"><name><surname>Trapnell</surname><given-names>C</given-names></name><name><surname>Roberts</surname><given-names>A</given-names></name><name><surname>Goff</surname><given-names>L</given-names></name><name><surname>Pertea</surname><given-names>G</given-names></name><name><surname>Kim</surname><given-names>D</given-names></name><name><surname>Kelley</surname><given-names>DR</given-names></name><etal/><article-title>Differential gene and transcript expression analysis of RNA-seq experiments with TopHat and Cufflinks</article-title><source>Nat Protoc</source><year>2012</year><volume>7</volume><issue>3</issue><fpage>562</fpage><lpage>578</lpage><pub-id pub-id-type="doi">10.1038/nprot.2012.016</pub-id><?supplied-pmid 22383036?><pub-id pub-id-type="pmid">22383036</pub-id></mixed-citation></ref><ref id="B26"><mixed-citation publication-type="journal"><name><surname>P&#x000e9;rez</surname><given-names>F</given-names></name><name><surname>Granger</surname><given-names>BE</given-names></name><article-title>IPython: A system for interactive scientific computing</article-title><source>Comput Sci Eng</source><year>2007</year><volume>9</volume><issue>3</issue><fpage>21</fpage><lpage>29</lpage></mixed-citation></ref><ref id="B27"><mixed-citation publication-type="other"><article-title>RCloud: A Social Coding Environment for the Big Data Era</article-title><uri>http://innovationblogarchive.att.com/innovation/story/a7795827</uri></mixed-citation></ref><ref id="B28"><mixed-citation publication-type="other"><article-title>Shiny, A web application framework for R</article-title><uri>http://shiny.rstudio.com/</uri></mixed-citation></ref><ref id="B29"><mixed-citation publication-type="journal"><name><surname>Harger</surname><given-names>JR</given-names></name><name><surname>Crossno</surname><given-names>PJ</given-names></name><article-title>Comparison of Open Source Visual Analytics Toolkits</article-title><source>Proc SPIE-IS&#x00026;T Electron Imaging</source><year>2012</year><volume>8294</volume><fpage>389</fpage><lpage>400</lpage></mixed-citation></ref><ref id="B30"><mixed-citation publication-type="book"><name><surname>Zhang</surname><given-names>L</given-names></name><name><surname>Stoffel</surname><given-names>A</given-names></name><name><surname>Behrisch</surname><given-names>M</given-names></name><name><surname>Mittelstadt</surname><given-names>S</given-names></name><name><surname>Schreck</surname><given-names>T</given-names></name><name><surname>Pompl</surname><given-names>R</given-names></name><etal/><article-title>Visual analytics for the big data era - A comparative review of state-of-the-art commercial systems</article-title><source>Visual Analytics Science and Technology (VAST), 2012 IEEE Conference on</source><year>2012</year><publisher-name>IEEE</publisher-name><fpage>173</fpage><lpage>182</lpage></mixed-citation></ref><ref id="B31"><mixed-citation publication-type="journal"><name><surname>Wylie</surname><given-names>B</given-names></name><name><surname>Baumes</surname><given-names>J</given-names></name><article-title>A unified toolkit for information and scientific visualization</article-title><source>Proc SPIE</source><year>2009</year><volume>7243</volume><fpage>72430H</fpage><pub-id pub-id-type="doi">10.1117/12.805589</pub-id></mixed-citation></ref><ref id="B32"><mixed-citation publication-type="journal"><name><surname>Ahlberg</surname><given-names>C</given-names></name><article-title>Spotfire: an information exploration environment</article-title><source>ACM SIGMOD Record</source><year>1996</year><volume>25</volume><issue>4</issue><fpage>25</fpage><lpage>29</lpage><pub-id pub-id-type="doi">10.1145/245882.245893</pub-id></mixed-citation></ref><ref id="B33"><mixed-citation publication-type="journal"><name><surname>Dudoit</surname><given-names>S</given-names></name><name><surname>Yang</surname><given-names>YH</given-names></name><name><surname>Callow</surname><given-names>MJ</given-names></name><name><surname>Speed</surname><given-names>TP</given-names></name><article-title>Statistical methods for identifying differentially expressed genes in replicated c{DNA} microarray experiments</article-title><source>Statistica Sinica</source><year>2002</year><volume>12</volume><fpage>111</fpage><lpage>139</lpage></mixed-citation></ref><ref id="B34"><mixed-citation publication-type="journal"><name><surname>Bostock</surname><given-names>M</given-names></name><name><surname>Ogievetsky</surname><given-names>V</given-names></name><name><surname>Heer</surname><given-names>J</given-names></name><article-title>D<sup>3</sup>: Data-Driven Documents</article-title><source>IEEE Trans Vis Comput Graph</source><year>2011</year><volume>17</volume><issue>12</issue><fpage>2301</fpage><lpage>2309</lpage><?supplied-pmid 22034350?><pub-id pub-id-type="pmid">22034350</pub-id></mixed-citation></ref><ref id="B35"><mixed-citation publication-type="journal"><name><surname>Hansen</surname><given-names>KD</given-names></name><name><surname>Timp</surname><given-names>W</given-names></name><name><surname>Bravo</surname><given-names>HC</given-names></name><name><surname>Sabunciyan</surname><given-names>S</given-names></name><name><surname>Langmead</surname><given-names>B</given-names></name><name><surname>McDonald</surname><given-names>OG</given-names></name><etal/><article-title>Increased methylation variation in epigenetic domains across cancer types</article-title><source>Nat Genet</source><year>2011</year><volume>43</volume><issue>8</issue><fpage>768</fpage><lpage>775</lpage><pub-id pub-id-type="doi">10.1038/ng.865</pub-id><?supplied-pmid 21706001?><pub-id pub-id-type="pmid">21706001</pub-id></mixed-citation></ref><ref id="B36"><mixed-citation publication-type="other"><name><surname>Nadji</surname><given-names>Y</given-names></name><name><surname>Saxena</surname><given-names>P</given-names></name><name><surname>Song</surname><given-names>D</given-names></name><article-title>Document structure integrity: A robust basis for cross-site scripting defense</article-title><source>Proc Netw Distrib Syst Secur Symp</source><year>2009</year></mixed-citation></ref><ref id="B37"><mixed-citation publication-type="other"><article-title>PHP: Prepared statements and stored procedures - Manual</article-title><uri>http://php.net/manual/en/pdo.prepared-statements.php</uri></mixed-citation></ref><ref id="B38"><mixed-citation publication-type="other"><name><surname>Miller</surname><given-names>M</given-names></name><name><surname>Samuel</surname><given-names>M</given-names></name><name><surname>Laurie</surname><given-names>B</given-names></name><name><surname>Awad</surname><given-names>I</given-names></name><name><surname>Stay</surname><given-names>M</given-names></name><article-title>Caja: Safe active content in sanitized JavaScript</article-title><source>Google white Pap</source><year>2008</year></mixed-citation></ref><ref id="B39"><mixed-citation publication-type="journal"><name><surname>Liu</surname><given-names>Z</given-names></name><name><surname>Jiang</surname><given-names>B</given-names></name><name><surname>Heer</surname><given-names>J</given-names></name><article-title>ImMens: Real-time visual querying of big data</article-title><source>EuroVis '13 Proceedings of the 15th Eurographics Conference on Visualization</source><year>2013</year><volume>32</volume><fpage>421</fpage><lpage>430</lpage></mixed-citation></ref><ref id="B40"><mixed-citation publication-type="other"><article-title>WebCL - Heterogeneous parallel computing in HTML5 web browsers</article-title><uri>https://www.khronos.org/webcl/</uri></mixed-citation></ref><ref id="B41"><mixed-citation publication-type="other"><name><surname>Heer</surname><given-names>J</given-names></name><name><surname>Agrawala</surname><given-names>M</given-names></name><article-title>Design considerations for collaborative visual analytics</article-title><source>Visual Analytics Science and Technology, 2007. VAST 2007. IEEE Symposium on</source><year>2007</year><fpage>171</fpage><lpage>178</lpage></mixed-citation></ref><ref id="B42"><mixed-citation publication-type="other"><article-title>htmlwidgets for R</article-title><uri>http://www.htmlwidgets.org/</uri></mixed-citation></ref></ref-list></back></article>