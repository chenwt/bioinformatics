<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="review-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName A++V2.4.dtd?><?SourceDTD.Version 2.4?><?ConverterInfo.XSLTName springer2nlmx2.xsl?><?ConverterInfo.Version 2?><front><journal-meta><journal-id journal-id-type="nlm-ta">BioData Min</journal-id><journal-id journal-id-type="iso-abbrev">BioData Min</journal-id><journal-title-group><journal-title>BioData Mining</journal-title></journal-title-group><issn pub-type="epub">1756-0381</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">4848821</article-id><article-id pub-id-type="publisher-id">95</article-id><article-id pub-id-type="doi">10.1186/s13040-016-0095-3</article-id><article-categories><subj-group subj-group-type="heading"><subject>Review</subject></subj-group></article-categories><title-group><article-title>Visual programming for next-generation sequencing data analytics</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Milicchio</surname><given-names>Franco</given-names></name><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author"><name><surname>Rose</surname><given-names>Rebecca</given-names></name><xref ref-type="aff" rid="Aff2"/></contrib><contrib contrib-type="author"><name><surname>Bian</surname><given-names>Jiang</given-names></name><xref ref-type="aff" rid="Aff3"/></contrib><contrib contrib-type="author"><name><surname>Min</surname><given-names>Jae</given-names></name><xref ref-type="aff" rid="Aff4"/></contrib><contrib contrib-type="author" corresp="yes"><name><surname>Prosperi</surname><given-names>Mattia</given-names></name><address><phone>+1-352-273-5860</phone><email>m.prosperi@ufl.edu</email></address><xref ref-type="aff" rid="Aff4"/></contrib><aff id="Aff1"><label/>Department of Engineering, Roma Tre University, Rome, Italy </aff><aff id="Aff2"><label/>Bioinfoexperts, LLC, Thibodaux, LA USA </aff><aff id="Aff3"><label/>Department of Health Outcomes and Policy, University of Florida, Gainesville, FL USA </aff><aff id="Aff4"><label/>Department of Epidemiology, College of Public Health and Health Professions &#x00026; College of Medicine, University of Florida, 2004 Mowry Road, Gainesville, 32610-0231 FL USA </aff></contrib-group><pub-date pub-type="epub"><day>27</day><month>4</month><year>2016</year></pub-date><pub-date pub-type="pmc-release"><day>27</day><month>4</month><year>2016</year></pub-date><pub-date pub-type="collection"><year>2016</year></pub-date><volume>9</volume><elocation-id>16</elocation-id><history><date date-type="received"><day>22</day><month>1</month><year>2016</year></date><date date-type="accepted"><day>21</day><month>4</month><year>2016</year></date></history><permissions><copyright-statement>&#x000a9; Milicchio et al. 2016</copyright-statement><license license-type="OpenAccess"><license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p></license></permissions><abstract id="Abs1"><sec><title>Background</title><p>High-throughput or next-generation sequencing (NGS) technologies have become an established and affordable experimental framework in biological and medical sciences for all basic and translational research. Processing and analyzing NGS data is challenging. NGS data are big, heterogeneous, sparse, and error prone. Although a plethora of tools for NGS data analysis has emerged in the past decade, (i) software development is still lagging behind data generation capabilities, and (ii) there is a &#x02018;cultural&#x02019; gap between the end user and the developer.</p></sec><sec><title>Text</title><p>Generic software template libraries specifically developed for NGS can help in dealing with the former problem, whilst coupling template libraries with visual programming may help with the latter. Here we scrutinize the state-of-the-art low-level software libraries implemented specifically for NGS and graphical tools for NGS analytics. An ideal developing environment for NGS should be modular (with a native library interface), scalable in computational methods (i.e. serial, multithread, distributed), transparent (platform-independent), interoperable (with external software interface), and usable (via an intuitive graphical user interface). These characteristics should facilitate both the run of standardized NGS pipelines and the development of new workflows based on technological advancements or users&#x02019; needs. We discuss in detail the potential of a computational framework blending generic template programming and visual programming that addresses all of the current limitations.</p></sec><sec><title>Conclusion</title><p>In the long term, a proper, well-developed (although not necessarily unique) software framework will bridge the current gap between data generation and hypothesis testing. This will eventually facilitate the development of novel diagnostic tools embedded in routine healthcare.</p></sec></abstract><kwd-group xml:lang="en"><title>Keywords</title><kwd>Next-generation sequencing</kwd><kwd>High-throughput sequencing</kwd><kwd>Big data</kwd><kwd>Template library</kwd><kwd>Generic programming</kwd><kwd>Visual programming</kwd><kwd>Graphical user interface</kwd><kwd>Software suite</kwd></kwd-group><funding-group><award-group><funding-source><institution>EU</institution></funding-source><award-id>634650</award-id><principal-award-recipient><name><surname>Prosperi</surname><given-names>Mattia</given-names></name></principal-award-recipient></award-group></funding-group><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>&#x000a9; The Author(s) 2016</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1"><title>Main text</title><sec id="Sec2"><title>Background</title><p>High-throughput or next-generation sequencing (NGS) technologies have become an established and affordable experimental framework for basic and translational research in biomedical sciences and clinical diagnostics [<xref ref-type="bibr" rid="CR1">1</xref>&#x02013;<xref ref-type="bibr" rid="CR3">3</xref>]. The applications of NGS are almost endless, spanning many &#x02018;&#x02013;omics&#x02019; fields, such as genomics, transcriptomics, and metabolomics [<xref ref-type="bibr" rid="CR3">3</xref>&#x02013;<xref ref-type="bibr" rid="CR11">11</xref>]. Nowadays, it is possible to sequence any microbial organism or metagenomic sample within hours and to obtain human genomes in weeks. By sequencing the entire genome in targeted patients, it is possible to identify genes and regulatory elements related to pathophysiological conditions. Genome-wide association studies and analysis of gene expression, usually made via well-established microarray techniques, can now be done via NGS, e.g. RNA-Seq[uencing]. NGS allows for full genome characterization of other organisms besides the human genome, including known pathogens, and yet-to-be-identified bacterial, viral, or fungal species that may pose a public health threat [<xref ref-type="bibr" rid="CR12">12</xref>]. Another growing application of NGS is microbial community analysis. The diverse host-associated microbiota has received intense research interests for its potential associations with human health outcomes [<xref ref-type="bibr" rid="CR13">13</xref>]. With few modifications in sample preparation protocols, a single NGS machine can offer the scientist an abundance of data for exploring multi-domain research questions.</p><p>Several NGS platforms and sequencing technologies are available [<xref ref-type="bibr" rid="CR14">14</xref>]. Technology providers include Illumina Inc. [<xref ref-type="bibr" rid="CR15">15</xref>], Thermo Fisher Scientific [<xref ref-type="bibr" rid="CR16">16</xref>], Roche [<xref ref-type="bibr" rid="CR17">17</xref>], and Pacific Biosciences [<xref ref-type="bibr" rid="CR18">18</xref>]. NGS services are available at a comparable price to established sequencing methods such as Sanger, although with considerably greater data output [<xref ref-type="bibr" rid="CR19">19</xref>&#x02013;<xref ref-type="bibr" rid="CR21">21</xref>].</p><p>Whereas the traditional Sanger [<xref ref-type="bibr" rid="CR22">22</xref>] approach produces contiguous nucleotide sequence reads between 400 and 700 bases with a throughput of 50-30,000 kilobases per hour, NGS reaches a throughput of 10-600 gigabases per hour, producing reads up to 700 nucleotide bases long [<xref ref-type="bibr" rid="CR9">9</xref>], and Pacific Biosciences broke the 10,000+ bases length record. The terabyte-size of nucleotide sequence data per run is becoming a reality, which will further lower per-sample sequencing cost [<xref ref-type="bibr" rid="CR23">23</xref>, <xref ref-type="bibr" rid="CR24">24</xref>]. The fourth-generation of Oxford&#x02019;s Nanopore-based sequencers have the potential to reduce the cost for sequencing an entire human genome from the fairly recent $1,000 target [<xref ref-type="bibr" rid="CR25">25</xref>] to an astounding $100 [<xref ref-type="bibr" rid="CR26">26</xref>, <xref ref-type="bibr" rid="CR27">27</xref>]. The decreasing trend of the cost-per-base of DNA sequence since 2008 even exceeded Moore&#x02019;s law [<xref ref-type="bibr" rid="CR28">28</xref>], i.e. the exponential growth of computing hardware capabilities, where the number of transistors in an integrated circuit doubles approximately every two years.</p><p>Ever since the first NGS machine was commercialized in 2004 by 454, the development of robust, intuitive, and easy to use analytic tools has been behind data generation capabilities. This state was defined with the evocative term &#x0201c;analysis paralysis&#x0201d; in 2010 [<xref ref-type="bibr" rid="CR29">29</xref>]. A landmark paper in 2012 by Vyverman et al. highlighted the limitations and needs of bioinformatics tools for a variety of complex string problems that are at the base of most NGS analytics [<xref ref-type="bibr" rid="CR30">30</xref>]. Five years later, analysis is no longer paralyzed. A plethora of NGS data analysis software has emerged, with considerable redundancy. Nevertheless, software development must adapt to handle fast-pace evolving technology, e.g. further data inflation resulting from the Nanopore platform [<xref ref-type="bibr" rid="CR31">31</xref>&#x02013;<xref ref-type="bibr" rid="CR34">34</xref>].</p><p>Most of the current NGS software requires dedicated bioinformaticians with access to comprehensive computational infrastructure. Just a few years ago, there was a bottleneck between data generation and inference (analyzing and making sense of the data), but nowadays, access to these bioinformatics resources is more common and affordable. The new bottleneck is the evolution of software in accordance with technological advances and users&#x02019; needs.</p><p>Comprehensive software suites for NGS analytics must be supported by an appropriate development environment. The lack of an organized programming base slows down the development of innovative applications that can be handled directly by the investigators generating the data. Biological scientists carrying out experiments at times undergo delays and difficulties in analyzing NGS data because tools customized to their needs and abilities are not readily available. Current software for NGS analytics requires medium-to-advanced level of computational proficiency. One reason is the compulsory use of high-performance computing infrastructure for analyzing most NGS data sets. Such computational arrangements should not be necessary when sequencing individual fungal, microbial or viral pathogens or when performing targeted phylogenetic studies (e.g. 16S ribosomal RNA); a desktop computer should be sufficient for analyzing bacterial data generated by platforms such as Illumina&#x02019;s MiSeq. When users need to move onto a high-performance computing infrastructure for projects involving large numbers of human genome sequences, they may benefit from the availability of software they are already familiar with (i.e. the one running on their desktop machine), rather than being required to learn an entirely new set of programs. An example in statistical analytics is the SAS software system (SAS Institute Inc.), which does not require the users to change the programming syntax when migrating across different components or installations (including desktop, server, and distributed editions).</p><p>At present, software engineers who develop new algorithms and analytical tools for NGS face a lack of dedicated libraries and interoperable software, and they have to write new tools which in turn cannot be interoperable. From a developer&#x02019;s perspective, many existing programs could be rewritten to be more efficient or to be parallelized homogeneously, as in hierarchical build of programs, for easy integration across various platforms. With a common software layer that abstracts interactions between data and algorithms, integrating procedures that exploit multithreading or distributed computing may be achieved without in-depth modifications of the algorithms themselves. In addition, the adoption of generic programming template libraries can homogenize programmers&#x02019; work and permit a more community-engaged software development.</p></sec><sec id="Sec3"><title>Template libraries and generic programming</title><p>In spite of the glut of NGS software [<xref ref-type="bibr" rid="CR35">35</xref>], there is a lack of low-level programming approaches; in other words, the development of specific data structures and functions (e.g. a de Bruijn graph constructor or a Burrows-Wheeler transformation function) for languages like C++ or Java are in short supply. Software packages and libraries specifically designed for NGS such as BAMTools [<xref ref-type="bibr" rid="CR36">36</xref>], htslib (SAMtools/bcftools) [<xref ref-type="bibr" rid="CR37">37</xref>], NGS++ [<xref ref-type="bibr" rid="CR38">38</xref>], Bioclojure [<xref ref-type="bibr" rid="CR39">39</xref>], or libStatGen [<xref ref-type="bibr" rid="CR40">40</xref>] are focused on parsing and file format standardization, with limited provision of data structures and algorithms useful for NGS analytics. Although a number of libraries and toolsets for generic sequence analysis is available [<xref ref-type="bibr" rid="CR41">41</xref>&#x02013;<xref ref-type="bibr" rid="CR43">43</xref>], their incorporation into NGS generic programming is problematic given the tremendous shift in data size. This is also true for programming language extensions such as BioPerl, BioRuby, BioJava, BioPython [<xref ref-type="bibr" rid="CR44">44</xref>&#x02013;<xref ref-type="bibr" rid="CR47">47</xref>], born under the unifying effort of the Open Bioinformatics Foundation [<xref ref-type="bibr" rid="CR48">48</xref>] and for large repositories like Bioconductor [<xref ref-type="bibr" rid="CR49">49</xref>, <xref ref-type="bibr" rid="CR50">50</xref>]. Note that we differentiate between true programming libraries, toolkits, and software tools [<xref ref-type="bibr" rid="CR51">51</xref>]. A library is a collection of data structures and functions/methods for a specific programming language (usually written in the same language, but not necessarily if the language is at a high-level, like R), which can be used seamlessly when writing new code in that language. A toolkit deviates from the rigorous concept of library as it can also include a set of executable programs which can be called and combined internally or externally (like EMBOSS). Lastly, a software tool is a standalone program that has a fixed input/output routine and whose internal functions or data structures cannot be used elsewhere. For instance, the popular BWA program for mapping short reads to a reference is a standalone program, even if it features internal data structures like the Burrows-Wheeler transform, used by other programs, like Bowtie. Table&#x000a0;<xref rid="Tab1" ref-type="table">1</xref> gives a description of the most popular libraries and toolsets for sequence analysis and NGS data processing. One example of a sequence analysis library that evolved successfully to handle NGS data is SeqAn [<xref ref-type="bibr" rid="CR52">52</xref>, <xref ref-type="bibr" rid="CR53">53</xref>]. This was possible because according to SeqAn website: &#x0201c;SeqAn applies a unique generic design that guarantees high performance, generality, extensibility, and integration with other libraries.&#x0201d; The SeqAn library is written in C++ and licensed as an open source. It also employs the Hierarchical Data Format 5, which makes possible the management of large and complex data collections [<xref ref-type="bibr" rid="CR54">54</xref>] in serial, multithreaded, and distributed environments. The number of tools for NGS that have been released using SeqAn is remarkable and proves how such open programming approach is advantageous [<xref ref-type="bibr" rid="CR55">55</xref>&#x02013;<xref ref-type="bibr" rid="CR57">57</xref>]. Bowtie, Lambda and Fiona are written in SeqAn, the latter of which is one of the fastest local aligners for NGS data and error correction tool, and it may become an alternative to BLAST. Another toolset similar to SeqAn is GenomeTools [<xref ref-type="bibr" rid="CR58">58</xref>], which is efficient but provides limited functionality and genericity. To our knowledge, SeqAn is the only available NGS-specific library that embraces the generic programming philosophy.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Summary of programming libraries/toolkits for analysis of (next-generation) sequencing data</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Library Name</th><th>Release<break/>Date</th><th>Programming<break/>Language</th><th>License</th><th>Website</th><th>Features</th></tr></thead><tbody><tr><td>EMBOSS [<xref ref-type="bibr" rid="CR43">43</xref>]</td><td>2000</td><td>C<break/>C++ BTL<break/>others</td><td>GNU GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="http://emboss.sourceforge.net/">http://emboss.sourceforge.net/</ext-link>
</td><td>Sequence alignment; rapid database search; protein motif identification; nucleotide sequence pattern analysis; codon usage analysis for small genomes; rapid identification of sequence patterns in large scale sequence sets; presentation tools for publication.</td></tr><tr><td>BTL [<xref ref-type="bibr" rid="CR41">41</xref>]</td><td>2001</td><td>C++</td><td>GNU GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="http://www.cryst.bbk.ac.uk/~classlib/">http://www.cryst.bbk.ac.uk/~classlib/</ext-link>
</td><td>Data structures (e.g. graphs); nucleotide string methods (e.g. Fourier transform, Needleman-Wunsch alignment).</td></tr><tr><td>Bioperl [<xref ref-type="bibr" rid="CR47">47</xref>]</td><td>2002</td><td>Perl</td><td>Artistic License<break/>GNU GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="http://bioperl.org/">http://bioperl.org/</ext-link>
</td><td>Access sequence data from local/remote data bases; manage data base formats; data base search; manipulating sequences/sequence alignments; gene annotations.</td></tr><tr><td>Bioconductor [<xref ref-type="bibr" rid="CR50">50</xref>]</td><td>2003</td><td>R<break/>(C/C++)</td><td>Artistic<break/>BSD<break/>GNU GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="https://www.bioconductor.org/">https://www.bioconductor.org/</ext-link>
</td><td>Repository of multiple libraries for analysis and comprehension of genomic and &#x02013;omics data, including NGS.</td></tr><tr><td>BioPHP</td><td>2003</td><td>PHP</td><td>GNU GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="http://biophp.org/">http://biophp.org/</ext-link>
</td><td>DNA and protein sequence analysis, sequence alignment.</td></tr><tr><td>GenomeTools [<xref ref-type="bibr" rid="CR58">58</xref>]</td><td>2003</td><td>C</td><td>Open BSD</td><td>
<ext-link ext-link-type="uri" xlink:href="http://genometools.org/">http://genometools.org/</ext-link>
</td><td>Parsing, compression, k-mer, suffix trees, annotation, error correction and other sequence analytics (FASTA, FASTQ)</td></tr><tr><td>Pizza&#x00026;Chili [<xref ref-type="bibr" rid="CR94">94</xref>]</td><td>2005</td><td>C/C++</td><td>GNU Lesser GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="http://pizzachili.di.unipi.it/">http://pizzachili.di.unipi.it/</ext-link>
</td><td>Compressed indices, text collections</td></tr><tr><td>Bio++[<xref ref-type="bibr" rid="CR42">42</xref>]</td><td>2006</td><td>C++</td><td>CeCILL GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="http://kimura.univ-montp2.fr/BioPP">http://kimura.univ-montp2.fr/BioPP</ext-link>
</td><td>Sequence analysis, phylogenetics, molecular evolution; population genetics.</td></tr><tr><td>Biojava [<xref ref-type="bibr" rid="CR46">46</xref>]</td><td>2008</td><td>Java</td><td>GNU Lesser GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="http://www.biojava.org/">www.biojava.org/</ext-link>
</td><td>Manipulate biological sequences; file parse; DAS client/server support; access to BioSQL/Ensembl data bases; tools for making sequence analysis GUIs; statistical routines; dynamic programming toolkit.</td></tr><tr><td>SeqAn [<xref ref-type="bibr" rid="CR52">52</xref>]</td><td>2008</td><td>C++</td><td>BSD 3-clause</td><td>
<ext-link ext-link-type="uri" xlink:href="http://www.seqan.de/">http://www.seqan.de/</ext-link>
</td><td>Extensive set of algorithms and data structures for the analysis of nucleotide sequences, with emphasis on NGS data; includes index, compression, data base search, support for NGS-specific file formats (fastq, SAM/BAM, VCF, BED).</td></tr><tr><td>Biopython [<xref ref-type="bibr" rid="CR45">45</xref>]</td><td>2009</td><td>Python, C</td><td>Biopython</td><td>
<ext-link ext-link-type="uri" xlink:href="http://biopython.org/">http://biopython.org/</ext-link>
</td><td>Sequence input/output; alignment input/output; population genetics; structural bioinformatics; SQL interface.</td></tr><tr><td>htslib<break/>SAMtools<break/>BCFtools [<xref ref-type="bibr" rid="CR37">37</xref>]</td><td>2009</td><td>C</td><td>MIT Expat<break/>Modified BSD</td><td>
<ext-link ext-link-type="uri" xlink:href="http://www.htslib.org/">http://www.htslib.org/</ext-link>
</td><td>Read, write, edit, index, view SAM/BAM/CRAM formats; read, write BCF2/VCF/gVCF files; call, filter, summarize SNP/short indels.</td></tr><tr><td>BioRuby [<xref ref-type="bibr" rid="CR44">44</xref>]</td><td>2010</td><td>Ruby</td><td>GNU GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="http://bioruby.open-bio.org/">http://bioruby.open-bio.org/</ext-link>
</td><td>DNA and protein sequence analysis, sequence alignment, biological database parsing, ontology, structural biology.</td></tr><tr><td>BAMTools [<xref ref-type="bibr" rid="CR36">36</xref>]</td><td>2011</td><td>C++</td><td>MIT</td><td>
<ext-link ext-link-type="uri" xlink:href="https://github.com/pezmaster31/bamtools">https://github.com/pezmaster31/bamtools</ext-link>
</td><td>Read, write, manipulate BAM formats</td></tr><tr><td>libStatGen [<xref ref-type="bibr" rid="CR40">40</xref>]</td><td>2011</td><td>C++</td><td>GNU GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="https://github.com/statgen/libStatGen">https://github.com/statgen/libStatGen</ext-link>
</td><td>Handle SAM/BAM, fastq, GLF, VCF, ASP.</td></tr><tr><td>NGS++ [<xref ref-type="bibr" rid="CR38">38</xref>]</td><td>2013</td><td>C++</td><td>GNU Lesser GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="https://github.com/NGS-lib/NGSplusplus">https://github.com/NGS-lib/NGSplusplus</ext-link>
</td><td>Read, write, manipulate multiple genomic file formats and data associated with BED type files (epigenomics).</td></tr><tr><td>Bioclojure [<xref ref-type="bibr" rid="CR39">39</xref>]</td><td>2014</td><td>Clojure</td><td>GNU Lesser GPL</td><td>
<ext-link ext-link-type="uri" xlink:href="https://github.com/s312569/clj-biosequence">https://github.com/s312569/clj-biosequence</ext-link>
</td><td>Parse of Genbank, Uniprot XML, fasta, fastq formats; wrappers for BLAST, signalP, TMHMM; index files for random access, lazy processing of sequences from very large files.</td></tr></tbody></table></table-wrap></p></sec><sec id="Sec4"><title>What is template generic programming?</title><p>A generic programming framework provides <italic>traits classes</italic> [<xref ref-type="bibr" rid="CR59">59</xref>], i.e. an abstract representation of data types and algorithms [<xref ref-type="bibr" rid="CR60">60</xref>]. As a real-life example, take the LEGO&#x000ae; toy construction kits. A child (end user) wants a LEGO&#x000ae; model of a brick that resists trampling. A company (developer) may be contracted to produce new stomp-resistant brick types (data structures/functions) that respect the general specification (traits class) of LEGO&#x000ae; bricks (e.g. hole spacing and size), thus ensuring that, before reaching the end-user, the new brick (structure) will work with any other LEGO&#x000ae; toy piece. In essence, a traits class may be seen as a prescription, a specification for data structures or functions: it enforces clients to respect a list of prerequisites. More technically, a traits class is the gateway for calling a function on a generic and a priori unknown data structure, employed at compile time (that is parametric polymorphism). If the given data structure provides types and methods definitions required by the traits, then any algorithm employing such a structure may be applied to any data structure that respects the requirements. This allows developers to write algorithms that can be applied at no runtime cost to any data structure, without knowing a priori which data structure will be employed or the types involved in the process.</p><p>Template generic programming enables provision of seamless infrastructure for computational tasks and replacement of serial algorithms, or data types with multithreaded/distributed ones, without significant changes to the program structure and without additional runtime overhead, provided the adherence to a traits class. For instance, when reading molecular sequence files and associated metadata (e.g. fastq files with nucleotides and quality scores), the compiler generates an ad hoc class given a chosen structure (e.g. a list or a suffix tree); no virtual functions and inheritance will be involved, reducing the runtime overhead. One could replace a serial constructor with a distributed one (e.g. reading sequence files in parallel), or change its associated methods (e.g. a sequence corrector based on two different algorithms) without changing the program; since the software employs traits to access a generic data structure, the compiler will ensure that the change will be a valid one. Hence, when a container does not respect the requirements, the software will refuse to compile, allowing developers to assess the interoperability of data types and algorithms without any performance degradation, and to write software libraries that may be applied to any traits-abiding data structure. The advantage of a library on generic programming templates is straightforward: the library can be updated for handling new data types, increase in data size, and technology changes in computing, like a new graphic processing unit chip or a computation accelerator (e.g. Intel&#x000ae; Xeon Phi).</p></sec><sec id="Sec5"><title>General-purpose software suites and graphical user interfaces</title><p>Low-level libraries and command-line toolsets are appropriate for software developers and programming-savvy users; they form the base to develop high-level ensemble software suites that feature a graphical user interface (GUI) with menus and premade workflows or analysis pipelines. Suites bring complex analytical procedures to the general user. For instance, user-friendly statistical software with powerful GUI includes Statistica (Dell Inc.), SAS Enterprise (SAS Institute Inc.), and SPSS (IBM Corporation). This easily accessible interface is advantageous as it can facilitate the applied and translational aspects of NGS research for those without programming knowledge, but the software must be carefully designed in order to prevent users from making errors due to lack of specialized expertise. In addition to a GUI featuring single functions and premade workflows, some high-level suites offer visual workflow builders. Visual builders are different form GUIs because they permit combination (more or less flexibly) of existing program functions into new data processing pipelines, which may not be available as pull-down menus or icons in a GUI.</p><p>Several high-level tools for NGS analytics are available (see Table&#x000a0;<xref rid="Tab2" ref-type="table">2</xref> for a summary). There are commercial products with closed source code, such as Illumina&#x02019;s BaseSpace [<xref ref-type="bibr" rid="CR61">61</xref>], CLCBio [<xref ref-type="bibr" rid="CR62">62</xref>], DNASTAR&#x02019;s Lasergene [<xref ref-type="bibr" rid="CR63">63</xref>], and Geneious [<xref ref-type="bibr" rid="CR64">64</xref>]. Free and hybrid commercial/free software include Galaxy [<xref ref-type="bibr" rid="CR65">65</xref>, <xref ref-type="bibr" rid="CR66">66</xref>], Globus Genomics [<xref ref-type="bibr" rid="CR67">67</xref>], PATRIC [<xref ref-type="bibr" rid="CR68">68</xref>], and UGENE [<xref ref-type="bibr" rid="CR69">69</xref>, <xref ref-type="bibr" rid="CR70">70</xref>]. Most of the software suites can be installed locally or on a server.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Summary of all-purpose software suites for analysis of next-generation sequencing data offered with a graphical user interface option</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Software Name</th><th>License</th><th>Free</th><th>Platform</th><th>Installation</th><th>Workflow Builder</th><th>Website</th></tr></thead><tbody><tr><td>BaseSpace</td><td>Proprietary</td><td>No</td><td>Web-browser<break/>App</td><td>Cloud</td><td>No</td><td>
<ext-link ext-link-type="uri" xlink:href="https://basespace.illumina.com">https://basespace.illumina.com</ext-link>
</td></tr><tr><td>CLCBio</td><td>Proprietary</td><td>Trial</td><td>Web-browser</td><td>Server</td><td>Yes</td><td>
<ext-link ext-link-type="uri" xlink:href="http://www.clcbio.com/">http://www.clcbio.com/</ext-link>
</td></tr><tr><td>DNASTAR<break/>Lasergene</td><td>Proprietary</td><td>Trial</td><td>MS Windows<break/>Mac OSX<break/>UNIX/Linux</td><td>Localhost<break/>Server</td><td>No</td><td>
<ext-link ext-link-type="uri" xlink:href="http://www.dnastar.com/">http://www.dnastar.com/</ext-link>
</td></tr><tr><td>Galaxy</td><td>GNU GPL</td><td>Yes</td><td>Web-browser</td><td>Localhost<break/>Server<break/>Cloud</td><td>Yes</td><td>
<ext-link ext-link-type="uri" xlink:href="https://galaxyproject.org/">https://galaxyproject.org/</ext-link>
<break/>
<ext-link ext-link-type="uri" xlink:href="https://usegalaxy.org/">https://usegalaxy.org/</ext-link>
</td></tr><tr><td>Geneious</td><td>Proprietary</td><td>Trial</td><td>MS Windows<break/>Mac OSX<break/>UNIX/Linux</td><td>Localhost<break/>Server</td><td>No</td><td>
<ext-link ext-link-type="uri" xlink:href="http://www.geneious.com/">http://www.geneious.com/</ext-link>
</td></tr><tr><td>Globus Genomics</td><td>Apache<break/>+ third party</td><td>Yes/No<break/>(depends on<break/>the service)</td><td>Web-browser</td><td>Cloud</td><td>Yes</td><td>
<ext-link ext-link-type="uri" xlink:href="https://www.globus.org/genomics">https://www.globus.org/genomics</ext-link>
</td></tr><tr><td>Golden Helix</td><td>Proprietary</td><td>Trial</td><td>MS Windows<break/>Mac OSX<break/>UNIX/Linux</td><td>Localhost</td><td>No</td><td>
<ext-link ext-link-type="uri" xlink:href="http://goldenhelix.com/">http://goldenhelix.com/</ext-link>
</td></tr><tr><td>Partek</td><td>Proprietary</td><td>Trial</td><td>MS Windows<break/>Mac OSX<break/>UNIX/Linux</td><td>Localhost</td><td>No</td><td>
<ext-link ext-link-type="uri" xlink:href="http://www.partek.com/">http://www.partek.com/</ext-link>
</td></tr><tr><td>PATRIC</td><td>GNU GPL</td><td>Yes</td><td>Web-browser</td><td>Cloud</td><td>No</td><td>
<ext-link ext-link-type="uri" xlink:href="https://www.patricbrc.org/">https://www.patricbrc.org</ext-link>
</td></tr><tr><td>Sequencher</td><td>Proprietary</td><td>Trial</td><td>MS Windows<break/>Mac OSX</td><td>Localhost<break/>Server</td><td>No</td><td>
<ext-link ext-link-type="uri" xlink:href="https://www.genecodes.com/">https://www.genecodes.com/</ext-link>
</td></tr><tr><td>SevenBridges</td><td>GNU GPL (Rabix)<break/>+ third party</td><td>Trial</td><td>Web-browser</td><td>Cloud</td><td>Yes</td><td>
<ext-link ext-link-type="uri" xlink:href="https://www.sbgenomics.com/">https://www.sbgenomics.com/</ext-link>
</td></tr><tr><td>SoftGenetics</td><td>Proprietary</td><td>Trial</td><td>MS Windows<break/>Mac OSX<break/>(via Parallels)</td><td>Localhost<break/>Server</td><td>No</td><td>
<ext-link ext-link-type="uri" xlink:href="http://www.softgenetics.com/">http://www.softgenetics.com/</ext-link>
</td></tr><tr><td>UGENE</td><td>GNU GPL</td><td>Yes</td><td>MS Windows<break/>Mac OSX<break/>UNIX/Linux</td><td>Localhost<break/>Server</td><td>Yes</td><td>
<ext-link ext-link-type="uri" xlink:href="http://ugene.net/">http://ugene.net/</ext-link>
</td></tr><tr><td>Vector NTI</td><td>Proprietary</td><td>Trial</td><td>MS Windows<break/>Mac OSX</td><td>Localhost<break/>Server</td><td>No</td><td>
<ext-link ext-link-type="uri" xlink:href="http://www.thermofisher.com/us/en/home/life-science/cloning/vector-nti-software.html">http://www.thermofisher.com/us/en/home/life-science/cloning/vector-nti-software.html</ext-link>
</td></tr></tbody></table></table-wrap></p><p>Illumina&#x02019;s BaseSpace provides an exclusively cloud-based environment hosted by Amazon Inc., direct integration with sequencing instruments, and workflows as mobile-touch apps.</p><p>Galaxy, a web-browser application, is one of the most popular, open source NGS suites and effectively offers a unique developer&#x02019;s platform, permitting the integration and collation of different programs. Galaxy has a substantial support from the developers&#x02019; community; both researchers and federal agencies are investing in this promising platform, which also features a visual workflow builder. However, Galaxy does not permit development of new algorithms and standalone software by itself, and it must be supported by a proper collection of low-level programs.</p><p>UGENE is another free and open source platform. The suite is multiplatform, i.e. it runs on computers with any operating system, such as MS Windows or Mac OSX by using the Qt C++ framework, incorporates multiple pipelines for NGS, and allows visual design of new ones with its built-in workflow builder, as in Galaxy (with similar limitations).</p><p>Not all procedures implementable from the command-line can be represented in the Galaxy&#x02019;s workflow builder. For instance, workflows require a fixed set of inputs and therefore looping on files within is not yet available (as of November 2015). &#x02018;Enhanced&#x02019; Galaxy frameworks like Globus Genomics or SevenBridges can overcome such workflow limitations, but require a higher technical expertise [<xref ref-type="bibr" rid="CR67">67</xref>]. UGENE&#x02019;s builder has limitations similar to Galaxy. New features in UGENE can be requested to the developers&#x02019; team, which also provides tech and other types of support for a price. UGENE is equipped for parallel computation, but the capabilities to distribute jobs are limited by the capabilities of programs embedded (also the case for Galaxy). Nonetheless, UGENE developers&#x02019; team has steadily published new workflows for NGS, providing extensive walkthroughs for the non-specialists: recently released pipelines include: &#x0201c;Variant Calling with SAMtools,&#x0201d; &#x0201c;Tuxedo Pipeline for RNA-seq Data Analysis,&#x0201d; and &#x0201c;Cistrome Pipeline for ChIP-seq Data Analysis,&#x0201d; all currently integrated into the Unipro UGENE desktop toolkit [<xref ref-type="bibr" rid="CR69">69</xref>].</p></sec><sec id="Sec6"><title>Visual programming</title><p>We have highlighted the importance of creating a solid low-level base for NGS programming and a high-level base to scale up analytics, especially with the usage of visual tools.</p><p>In computer science, a visual programming (VP) language is a <italic>medium</italic> for implementing computer programs that makes uses of graphical operators and elements rather than textual ones. VP is not a new concept [<xref ref-type="bibr" rid="CR71">71</xref>&#x02013;<xref ref-type="bibr" rid="CR74">74</xref>]; it has been envisioned in several ways starting from the early 1960s and has been the object of philosophical debates [<xref ref-type="bibr" rid="CR75">75</xref>, <xref ref-type="bibr" rid="CR76">76</xref>]. VP is different from GUI. A GUI aids users executing programs via visual menu items in contrast to command-line (i.e. terminal) text scripting. In general, GUI menus are premade and users cannot create new programs or combine menu functions within the GUI. Conversely, a VP language has the same power as a textual programming language or a library, if it features the same functional elements (e.g. data structures and methods); therefore, new algorithms and programs can be designed and compiled within a VP, and VP can even be used to implement GUIs. Visual approaches to programming have been explored in diverse environments, including education, multimedia, system simulation and automation, data warehousing, and business intelligence, with probably the most successful example being the computer-aided design (CAD) software industry. Another extremely popular area for VP is video game design [<xref ref-type="bibr" rid="CR77">77</xref>, <xref ref-type="bibr" rid="CR78">78</xref>]. Although in principle VP can be used to create algorithms starting from the lowest hierarchy of programming language elements, in practice, VP is employed for creating higher-level applications using libraries. This facilitates developers&#x02019; work when a large amount of coding (and redundant coding) is required.</p></sec><sec id="Sec7"><title>How can visual programming benefit NGS software development?</title><p>Currently, there are no &#x02018;pure&#x02019; VP approaches being developed for NGS applications. Galaxy or UGENE workflow builders can be considered rudimental VP environments, but as discussed previously, they do not offer the same set of functions as the command-line and have limited interoperability (i.e. they work only within their parent environment and cannot build independent programs). However, there is potential for improving the workflow builders using the VP approach.</p></sec><sec id="Sec8"><title>Visual programming entities</title><p>The main elements of a VP language are: <italic>building blocks</italic>, <italic>block engines</italic>, <italic>block connectors</italic>, and <italic>meta-blocks.</italic> Building blocks are the basic VP pieces, like LEGO&#x000ae;; they can have different functions, like the different shapes of LEGO&#x000ae; blocks. Building blocks can represent a file parser, a read trimmer, a mapping algorithm, a <italic>k</italic>-mer graph builder, a SAM/BAM file converter, et cetera. They can be data structures, constructors, methods. Technically, building blocks are filters modelled functionally, linking connectors with input-output control, in accordance to the domain-driven design paradigm, e.g. C# or Microsoft.NET [<xref ref-type="bibr" rid="CR79">79</xref>, <xref ref-type="bibr" rid="CR80">80</xref>]. Block engines perform computational procedures within a building block; for example, they read a fastq file or they map a read set to a reference genome using a specific algorithm. In the generic template framework, the algorithms can be transparently replaced (given that implementations respect devised traits classes). Block connectors are relational mappings between data structures and algorithms within functional visual blocks, i.e. the communication links among building blocks. For instance, a read mapper requires both a reference sequence (which could be indexed upon parsing) and a read set (which could be read as single- or paired-end). A metagenomics classifier requires a genomic database and the read sets. Block connectors encode these relations. Finally, meta-blocks are blocks made of multiple building blocks and connectors, i.e. whole data analysis pipelines, replaced by a single building block of a higher hierarchy (given a defined ontology for the blocks). If a user is not a developer, there is no need for them to access the whole block workflow. They can use the blocks at the highest level hierarchy which would correspond to a single icon/menu in the GUI; for instance, a &#x0201c;metagenomics analysis pipeline&#x0201d; meta-block would ask for a specific set of input files (fastq) and write a standardized output (fasta, KEGG, SEED). The more a user is acquainted with NGS algorithms, the more they can get trained into the visual programming interface, without resorting to traditional text-based programming. This is a convenient trade-off between black-box and informed design/use.</p><p>Figure&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref> shows an example of pipelines for single nucleotide variant calling from fastq files, using UGENE&#x02019;s and Galaxy&#x02019;s workflow builders. Both workflow builders feature block connectors that well represent the aforementioned VP entity. Likewise, one could consider a saved workflow as a meta-block. Building blocks and block engines are inherently fused, and each block corresponds to a program that has been installed in Galaxy or UGENE (e.g. Sickle, CASAVA, Bowtie2, BWA). If any of the workflow could allow access functions of a generic programming library (e.g. SeqAn), with a corresponding distinction between block hierarchies and functionality, there would be an improvement in expressive power, which would not be limited to the sole ability of pipelining compiled programs. Notably, the UGENE workflow builder is made with the cross-platform Qt C++ Library, which is an ideal development framework for enabling such transition.<fig id="Fig1"><label>Fig. 1</label><caption><p>Example of a pipeline for single nucleotide variant calling from fastq files, using Galaxy&#x02019;s (top) and UGENE&#x02019;s (bottom) workflow builders</p></caption><graphic xlink:href="13040_2016_95_Fig1_HTML" id="MO1"/></fig></p></sec><sec id="Sec9"><title>Physiognomy of visual programming</title><p>By definition, VP facilitates various aspects of the process of software design and brings closer the user and the developer. Development policies for VP should follow the same prerogatives. One way to achieve this can be through the adoption of the Agile methodology [<xref ref-type="bibr" rid="CR81">81</xref>], which implements code and develops user interfaces at the same time, with an adaptive strategy of real-time planning. Agile is an efficient and face-to-face communication between developers, stakeholders, and final users, blending the characteristics of different disciplines directly into the final product. We believe the Agile method can be appropriate for development of NGS tools via VP, when a library base is already available (e.g. SeqAn), yet it must be delivered to users with a different expertise and must meet their usage needs. Independently of the chosen development methodology, a VP framework for NGS should meet the following requirements: <italic>flexibility</italic>, <italic>scalability</italic>, <italic>transparency</italic>, <italic>usability</italic>, <italic>modularity</italic>, and <italic>interoperability</italic>. As summarized in Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref>, each of these characteristics affects either a user&#x02019;s or a developer&#x02019;s needs. For instance, flexibility of a VP product concerns its capacity to be workable on different devices such as desktops vs. tablets, or feasible for local/server/cloud installations (which is different from being installable on different operating systems or being usable). Scalability refers to the capacity of the software to scale up with data size increase, by featuring different solutions, such as switching to multithreaded mode or moving analyses from a localhost to the cloud. Note that there are needs assessments falling in multiple categories. In fact, the dichotomy of multithreading (say, parallelization within graphic processing units or central processing units) vs. distribution (e.g. message parsing interface) do relate to scalability, but also to transparency, especially in the case of adoption of a generic template library programming paradigm. As already mentioned, transparency can be associated with multiplatform (any operating system) or web-browser-based implementations. The VP framework and its products must be transparent not only at the operating system level but also at the hosting level (i.e. local host vs. cloud). In particular, security on cloud-based computations plays a major role in the potential applicability of NGS software. In regards to usability, we have already mentioned the potential advantage of employing the user-oriented Agile methodology. Any product developed using VP has to be subject to the same verification, validation, quality assurance standards, and common GUI testing schemes [<xref ref-type="bibr" rid="CR82">82</xref>] like other software, e.g. the Institute of Electrical and Electronics Engineers (IEEE) standard verification and validation IEEE 1012 or quality assurance IEEE 730 [<xref ref-type="bibr" rid="CR83">83</xref>]. Within a developer&#x02019;s VP environment, usability can mean a well-designed set of building blocks and functions. These are also related to modularity, where the availability of a native generic template programming library can make a difference. Finally, interoperability can be divided into three levels. The first one is software interoperability, which ensures the possibility of using external pieces of software or libraries. The second level is semantic interoperability, which is the ability to exchange data with unambiguous, shared meaning; when developing NGS tools this involves keeping track of meta-data information such as library versioning, file formats, and file interchange formats. The third level is expertise interoperability, connecting the stakeholders together efficiently by using an appropriate communication infrastructure, such as a users&#x02019; forum, like SEQanswers [<xref ref-type="bibr" rid="CR84">84</xref>], or a developers&#x02019; space, GitHub [<xref ref-type="bibr" rid="CR85">85</xref>].<fig id="Fig2"><label>Fig. 2</label><caption><p>Physiognomy of visual programming for development of tools for next-generation sequencing data analytics</p></caption><graphic xlink:href="13040_2016_95_Fig2_HTML" id="MO2"/></fig></p><p>As an example, Galaxy has strengths in expertise interoperability (thanks to a nourished developers&#x02019; and users&#x02019; community), software interoperability (by incorporating a plethora of different software and toolsets), and transparency (through the web-browser interface). There is relevant, yet limited, modularity (graphic workflow builder), and scalability (tool parallelization and server installation). Flexibility is enabled by the web-browser GUI. Scalability and interoperability, however, are also subject to original tools&#x02019; capabilities and may not keep up with the pace of the current technology evolution. Recent efforts in interoperability for development and standardization of NGS pipelines (i.e. importable in Galaxy and other frameworks) have been concretized in the open source Rabix toolkit [<xref ref-type="bibr" rid="CR86">86</xref>] for developing and running portable workflows based on the Common Workflow Language specification [<xref ref-type="bibr" rid="CR87">87</xref>]. Illumina&#x02019;s BaseSpace and UGENE are strong in usability and flexibility, but are behind Galaxy in other requisites; none of the available suites has a proper VP interface.</p><p>A conceptual VP framework that incorporates many of the prerogatives, named VisPro, has been proposed by Milicchio et al. in 2005 [<xref ref-type="bibr" rid="CR88">88</xref>], with a case study tailored to development of tools for complex geometric routines. VisPro was developed using the cross-platform Qt Library, like UGENE. More recently, VisPro was extended to web-based applications securely connected to the cloud [<xref ref-type="bibr" rid="CR89">89</xref>]. In Fig.&#x000a0;<xref rid="Fig3" ref-type="fig">3</xref>, a diagram of the VP framework for developing next-generation sequencing analytics tools is shown. The VP <italic>Builder</italic> is the graphical development unit, i.e. the VP environment, where both an end user (blue) and a developer (green) can design new program workflows. The end user has access to the <italic>App</italic> and/or the <italic>Web Browser</italic> (i.e. different GUIs) with predefined pipelines which can be made with the VP Builder or even with command-line programming (e.g. a VP <italic>Project</italic>). The developer has access to all the low-level, command-line features besides the VP. The VP <italic>Interoperable Engine</italic> contains all the functions of a generic programming template library, provides compatibility with external programs, e.g. with the JavaScript Object Notation [<xref ref-type="bibr" rid="CR90">90</xref>, <xref ref-type="bibr" rid="CR91">91</xref>] as with Rabix, and runs locally or in the cloud. VisPro prefigured a secure solution based on a client-server architecture for scheduling programs in the cloud [<xref ref-type="bibr" rid="CR89">89</xref>]; the computational kernel that actually executes a program may be local or remote (i.e. on a cluster), and in the latter case, the client submits, via an encrypted channel and with a secure authentication method &#x02013;such as secure-socket layer (SSL) certificates or Kerberos [<xref ref-type="bibr" rid="CR92">92</xref>, <xref ref-type="bibr" rid="CR93">93</xref>]&#x02013; the visual program to a server. The remote scheduler then executes the program on all available nodes as resources become available, leaving the client free to perform other operations. Selecting a local or remote kernel would require only a minimal user intervention, i.e. login host, user name, and password.<fig id="Fig3"><label>Fig. 3</label><caption><p>The conceptual visual programming (VP) framework for developing next-generation sequencing data analytics tools</p></caption><graphic xlink:href="13040_2016_95_Fig3_HTML" id="MO3"/></fig></p></sec><sec id="Sec10"><title>Discussion</title><p>NGS data science (or analytics) is an interdisciplinary and critical field of bioinformatics research that has gained increased attention and visibility upon the explosion of NGS technology. It is a sector which has to keep up with the tremendous advancement in sequencing yield and &#x02018;next-NGS&#x02019; (future generation) technologies. NGS data science is feasible when proper software is available and can routinely and reliably be used, with reasonable resource spending. The development of software tools for NGS analytics is challenging, given multiple practical hurdles that include the large data sizes, data heterogeneity, and data errors. Despite the glut of NGS software released in the past years, the toolsets are not yet homogenized as they are in other fields (e.g. statistics, automation). We have reviewed the current panorama of low-level software for NGS (i.e. libraries and toolsets) used mainly by developers, and high-level suites (i.e. all-purpose programs with GUIs) used by stakeholders, biological scientists performing experiments for instance. Among the reviewed software libraries, we have identified a positive effort of the Open Bioinformatics Foundation in promoting the &#x02018;Bio&#x02019; extensions to programming languages, such as BioJava, BioPerl, BioRuby, BioPHP, et cetera. However, these toolsets are often not well calibrated for the NGS needs (e.g. scalability of methods). Among the NGS-specific libraries, we have identified SeqAn (open source, C++) as the most promising one, because on top of its specificity, it is a generic programming template framework that can seamlessly upgrade itself. SeqAn has already been used in many proof-of-concept works providing efficient/optimized re-implementation of existing methods. Still, low-level libraries are instruments for software developers, not for end users. For the latter, high-level software suites with user-friendly GUIs are available. We have reviewed both commercial and free suites, including Galaxy and Geneious. This general-purpose software usually wraps around existing command-line tools, which may not have been programmed using consistent libraries or programming languages. The suites offer premade pipelines to analyze specific data sets (e.g. RNASeq) with a simple click, combining different programs together. Usability should be the key feature of these graphical suites. Some of the suites also offer the possibility to create ad hoc workflows, but the functionalities are limited; new programs are hard to develop. At the moment workflow design is bound to existing programs present in the suite, but some workflow builders could be modified to incorporate NGS libraries in the near future.</p><p>Visual programming is used in many sectors of software development, such as education, architecture, and video game design. The visual programming philosophy linked to generic template libraries, seen as a powerful extension of workflow builders, can be a valuable aid for improving NGS tool and workflow development. VisPro is a conceptual visual programming framework covering a number of requisites that make it appropriate for development of NGS software (in the need of scalability, transparency, usability, interoperability), especially if coupled with a powerful generic template library, like SeqAn. However, instantiating a brand new VisPro for NGS may require a tremendous development effort. On the other hand, existing general-purpose suites are supported by a large community of developers, users, and investors; even so, they have flaws and may be stalled by further technological changes.</p><p>In conclusion, visual programming could effectively bridge the gap between software developers and users needing cutting-edge software, making NGS data science fully translational. While an <italic>ex novo</italic> development of VP software specific for NGS may be unfeasible, trying to improve the visual programming capabilities of existing software and the interoperability with low-level libraries could be a preferred course of action.</p></sec></sec></body><back><fn-group><fn><p><bold>Competing interests</bold></p><p>The authors declare that they have no competing interests.</p></fn><fn><p><bold>Authors&#x02019; contributions</bold></p><p>FM contributed on libraries and visual programming, wrote/reviewed manuscript; RR contributed on graphical tools, wrote/reviewed manuscript; JB contributed on visual programming, reviewed manuscript; JM provided evaluation of software features, workflow comparison and building, reviewed manuscript; MP designed the work, wrote/reviewed manuscript. All authors read and approved the manuscript.</p></fn></fn-group><ack><p>The VIROGENESIS project receives funding from the European Union&#x02019;s Horizon 2020 research and innovation programme under grant agreement No 634650.</p></ack><ref-list id="Bib1"><title>References</title><ref id="CR1"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Xuan</surname><given-names>J</given-names></name><name><surname>Yu</surname><given-names>Y</given-names></name><name><surname>Qing</surname><given-names>T</given-names></name><name><surname>Guo</surname><given-names>L</given-names></name><name><surname>Shi</surname><given-names>L</given-names></name></person-group><article-title>Next-generation sequencing in the clinic: promises and challenges</article-title><source>Cancer Lett</source><year>2013</year><volume>340</volume><issue>2</issue><fpage>284</fpage><lpage>295</lpage><pub-id pub-id-type="doi">10.1016/j.canlet.2012.11.025</pub-id><?supplied-pmid 23174106?><pub-id pub-id-type="pmid">23174106</pub-id></element-citation></ref><ref id="CR2"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>van Dijk</surname><given-names>EL</given-names></name><name><surname>Auger</surname><given-names>H</given-names></name><name><surname>Jaszczyszyn</surname><given-names>Y</given-names></name><name><surname>Thermes</surname><given-names>C</given-names></name></person-group><article-title>Ten years of next-generation sequencing technology</article-title><source>Trends Genet</source><year>2014</year><volume>30</volume><issue>9</issue><fpage>418</fpage><lpage>426</lpage><pub-id pub-id-type="doi">10.1016/j.tig.2014.07.001</pub-id><?supplied-pmid 25108476?><pub-id pub-id-type="pmid">25108476</pub-id></element-citation></ref><ref id="CR3"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ohashi</surname><given-names>H</given-names></name><name><surname>Hasegawa</surname><given-names>M</given-names></name><name><surname>Wakimoto</surname><given-names>K</given-names></name><name><surname>Miyamoto-Sato</surname><given-names>E</given-names></name></person-group><article-title>Next-generation technologies for multiomics approaches including interactome sequencing</article-title><source>BioMed Res Int</source><year>2015</year><volume>2015</volume><fpage>104209</fpage><pub-id pub-id-type="doi">10.1155/2015/104209</pub-id><?supplied-pmid 25649523?><pub-id pub-id-type="pmid">25649523</pub-id></element-citation></ref><ref id="CR4"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Beggs</surname><given-names>AD</given-names></name><name><surname>Dilworth</surname><given-names>MP</given-names></name></person-group><article-title>Surgery in the era of the 'omics revolution</article-title><source>Br J Surg</source><year>2015</year><volume>102</volume><issue>2</issue><fpage>e29</fpage><lpage>40</lpage><pub-id pub-id-type="doi">10.1002/bjs.9722</pub-id><?supplied-pmid 25627134?><pub-id pub-id-type="pmid">25627134</pub-id></element-citation></ref><ref id="CR5"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mensaert</surname><given-names>K</given-names></name><name><surname>Denil</surname><given-names>S</given-names></name><name><surname>Trooskens</surname><given-names>G</given-names></name><name><surname>Van Criekinge</surname><given-names>W</given-names></name><name><surname>Thas</surname><given-names>O</given-names></name><name><surname>De Meyer</surname><given-names>T</given-names></name></person-group><article-title>Next-generation technologies and data analytical approaches for epigenomics</article-title><source>Environ Mol Mutagen</source><year>2014</year><volume>55</volume><issue>3</issue><fpage>155</fpage><lpage>170</lpage><pub-id pub-id-type="doi">10.1002/em.21841</pub-id><?supplied-pmid 24327356?><pub-id pub-id-type="pmid">24327356</pub-id></element-citation></ref><ref id="CR6"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mason</surname><given-names>CE</given-names></name><name><surname>Porter</surname><given-names>SG</given-names></name><name><surname>Smith</surname><given-names>TM</given-names></name></person-group><article-title>Characterizing multi-omic data in systems biology</article-title><source>Adv Exp Med Biol</source><year>2014</year><volume>799</volume><fpage>15</fpage><lpage>38</lpage><pub-id pub-id-type="doi">10.1007/978-1-4614-8778-4_2</pub-id><?supplied-pmid 24292960?><pub-id pub-id-type="pmid">24292960</pub-id></element-citation></ref><ref id="CR7"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Grada</surname><given-names>A</given-names></name><name><surname>Weinbrecht</surname><given-names>K</given-names></name></person-group><article-title>Next-generation sequencing: methodology and application</article-title><source>J Invest Dermatol</source><year>2013</year><volume>133</volume><issue>8</issue><fpage>e11</fpage><pub-id pub-id-type="doi">10.1038/jid.2013.248</pub-id><?supplied-pmid 23856935?><pub-id pub-id-type="pmid">23856935</pub-id></element-citation></ref><ref id="CR8"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Berger</surname><given-names>B</given-names></name><name><surname>Peng</surname><given-names>J</given-names></name><name><surname>Singh</surname><given-names>M</given-names></name></person-group><article-title>Computational solutions for omics data</article-title><source>Nat Rev Genet</source><year>2013</year><volume>14</volume><issue>5</issue><fpage>333</fpage><lpage>346</lpage><pub-id pub-id-type="doi">10.1038/nrg3433</pub-id><?supplied-pmid 23594911?><pub-id pub-id-type="pmid">23594911</pub-id></element-citation></ref><ref id="CR9"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Metzker</surname><given-names>ML</given-names></name></person-group><article-title>Sequencing technologies - the next generation</article-title><source>Nat Rev Genet</source><year>2010</year><volume>11</volume><issue>1</issue><fpage>31</fpage><lpage>46</lpage><pub-id pub-id-type="doi">10.1038/nrg2626</pub-id><?supplied-pmid 19997069?><pub-id pub-id-type="pmid">19997069</pub-id></element-citation></ref><ref id="CR10"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Koboldt</surname><given-names>DC</given-names></name><name><surname>Steinberg</surname><given-names>KM</given-names></name><name><surname>Larson</surname><given-names>DE</given-names></name><name><surname>Wilson</surname><given-names>RK</given-names></name><name><surname>Mardis</surname><given-names>ER</given-names></name></person-group><article-title>The next-generation sequencing revolution and its impact on genomics</article-title><source>Cell</source><year>2013</year><volume>155</volume><issue>1</issue><fpage>27</fpage><lpage>38</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2013.09.006</pub-id><?supplied-pmid 24074859?><pub-id pub-id-type="pmid">24074859</pub-id></element-citation></ref><ref id="CR11"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hawkins</surname><given-names>RD</given-names></name><name><surname>Hon</surname><given-names>GC</given-names></name><name><surname>Ren</surname><given-names>B</given-names></name></person-group><article-title>Next-generation genomics: an integrative approach</article-title><source>Nat Rev Genet</source><year>2010</year><volume>11</volume><issue>7</issue><fpage>476</fpage><lpage>486</lpage><?supplied-pmid 20531367?><pub-id pub-id-type="pmid">20531367</pub-id></element-citation></ref><ref id="CR12"><label>12.</label><mixed-citation publication-type="other">Azarian T, Cook RL, Johnson JA, Guzman N, McCarter YS, Gomez N, McCarter YS, Gomez N, Rathore MH, Morris JGJ, Salemi M. Whole-Genome Sequencing for Outbreak Investigations of Methicillin-Resistant Staphylococcus aureus in the Neonatal Intensive Care Unit: Time for Routine Practice? Infect Control Hosp Epidemiol. 2015;FirstView:1&#x02013;9.</mixed-citation></ref><ref id="CR13"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Berger</surname><given-names>G</given-names></name><name><surname>Bitterman</surname><given-names>R</given-names></name><name><surname>Azzam</surname><given-names>ZS</given-names></name></person-group><article-title>The human microbiota: the rise of an &#x0201c;empire&#x0201d;</article-title><source>Rambam Maimonides Med J</source><year>2015</year><volume>6</volume><issue>2</issue><fpage>e0018</fpage><pub-id pub-id-type="doi">10.5041/RMMJ.10202</pub-id><?supplied-pmid 25973270?><pub-id pub-id-type="pmid">25973270</pub-id></element-citation></ref><ref id="CR14"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Buermans</surname><given-names>HP</given-names></name><name><surname>den Dunnen</surname><given-names>JT</given-names></name></person-group><article-title>Next generation sequencing technology: Advances and applications</article-title><source>Biochim Biophys Acta</source><year>2014</year><volume>1842</volume><issue>10</issue><fpage>1932</fpage><lpage>1941</lpage><pub-id pub-id-type="doi">10.1016/j.bbadis.2014.06.015</pub-id><?supplied-pmid 24995601?><pub-id pub-id-type="pmid">24995601</pub-id></element-citation></ref><ref id="CR15"><label>15.</label><mixed-citation publication-type="other">Illumina Inc. [<ext-link ext-link-type="uri" xlink:href="http://www.illumina.com/">http://www.illumina.com/</ext-link>]. Accessed 25 Apr 2016.</mixed-citation></ref><ref id="CR16"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>James</surname><given-names>F</given-names></name></person-group><article-title>Welles Replies</article-title><source>J Infor Ethics.</source><year>2012</year><volume>21</volume><issue>1</issue><fpage>5</fpage><lpage>6</lpage></element-citation></ref><ref id="CR17"><label>17.</label><mixed-citation publication-type="other">Roche Sequencing. [<ext-link ext-link-type="uri" xlink:href="http://sequencing.roche.com/">http://sequencing.roche.com/</ext-link>]. Accessed 25 Apr 2016.</mixed-citation></ref><ref id="CR18"><label>18.</label><mixed-citation publication-type="other">Pacific Biosciences. [<ext-link ext-link-type="uri" xlink:href="http://www.pacb.com/">http://www.pacb.com/</ext-link>].</mixed-citation></ref><ref id="CR19"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Facio</surname><given-names>FM</given-names></name><name><surname>Lee</surname><given-names>K</given-names></name><name><surname>O&#x02019;Daniel</surname><given-names>JM</given-names></name></person-group><article-title>A genetic counselor&#x02019;s guide to using next-generation sequencing in clinical practice</article-title><source>J Genet Couns</source><year>2014</year><volume>23</volume><issue>4</issue><fpage>455</fpage><lpage>462</lpage><pub-id pub-id-type="doi">10.1007/s10897-013-9662-7</pub-id><?supplied-pmid 24151055?><pub-id pub-id-type="pmid">24151055</pub-id></element-citation></ref><ref id="CR20"><label>20.</label><mixed-citation publication-type="other">Aronson N. Making personalized medicine more affordable. Ann N Y Acad Sci. 2015;1346(1):81-9. doi:10.1111/nyas.12614. Epub 2015 Feb 27.</mixed-citation></ref><ref id="CR21"><label>21.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Desai</surname><given-names>AN</given-names></name><name><surname>Jere</surname><given-names>A</given-names></name></person-group><article-title>Next-generation sequencing: ready for the clinics?</article-title><source>Clin Genet</source><year>2012</year><volume>81</volume><issue>6</issue><fpage>503</fpage><lpage>510</lpage><pub-id pub-id-type="doi">10.1111/j.1399-0004.2012.01865.x</pub-id><?supplied-pmid 22375550?><pub-id pub-id-type="pmid">22375550</pub-id></element-citation></ref><ref id="CR22"><label>22.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sanger</surname><given-names>F</given-names></name><name><surname>Coulson</surname><given-names>AR</given-names></name></person-group><article-title>A rapid method for determining sequences in DNA by primed synthesis with DNA polymerase</article-title><source>J Mol Biol</source><year>1975</year><volume>94</volume><issue>3</issue><fpage>441</fpage><lpage>448</lpage><pub-id pub-id-type="doi">10.1016/0022-2836(75)90213-2</pub-id><?supplied-pmid 1100841?><pub-id pub-id-type="pmid">1100841</pub-id></element-citation></ref><ref id="CR23"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Niedringhaus</surname><given-names>TP</given-names></name><name><surname>Milanova</surname><given-names>D</given-names></name><name><surname>Kerby</surname><given-names>MB</given-names></name><name><surname>Snyder</surname><given-names>MP</given-names></name><name><surname>Barron</surname><given-names>AE</given-names></name></person-group><article-title>Landscape of next-generation sequencing technologies</article-title><source>Anal Chem</source><year>2011</year><volume>83</volume><issue>12</issue><fpage>4327</fpage><lpage>4341</lpage><pub-id pub-id-type="doi">10.1021/ac2010857</pub-id><?supplied-pmid 21612267?><pub-id pub-id-type="pmid">21612267</pub-id></element-citation></ref><ref id="CR24"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>el Bahassi</surname><given-names>M</given-names></name><name><surname>Stambrook</surname><given-names>PJ</given-names></name></person-group><article-title>Next-generation sequencing technologies: breaking the sound barrier of human genetics</article-title><source>Mutagenesis</source><year>2014</year><volume>29</volume><issue>5</issue><fpage>303</fpage><lpage>310</lpage><pub-id pub-id-type="doi">10.1093/mutage/geu031</pub-id><pub-id pub-id-type="pmid">25150023</pub-id></element-citation></ref><ref id="CR25"><label>25.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Service</surname><given-names>RF</given-names></name></person-group><article-title>Gene sequencing. The race for the $1000 genome</article-title><source>Science</source><year>2006</year><volume>311</volume><issue>5767</issue><fpage>1544</fpage><lpage>1546</lpage><pub-id pub-id-type="doi">10.1126/science.311.5767.1544</pub-id><?supplied-pmid 16543431?><pub-id pub-id-type="pmid">16543431</pub-id></element-citation></ref><ref id="CR26"><label>26.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Feng</surname><given-names>Y</given-names></name><name><surname>Zhang</surname><given-names>Y</given-names></name><name><surname>Ying</surname><given-names>C</given-names></name><name><surname>Wang</surname><given-names>D</given-names></name><name><surname>Du</surname><given-names>C</given-names></name></person-group><article-title>Nanopore-based Fourth-generation DNA Sequencing Technology</article-title><source>Genomics Proteomics Bioinformatics</source><year>2015</year><volume>13</volume><issue>1</issue><fpage>4</fpage><lpage>16</lpage><pub-id pub-id-type="doi">10.1016/j.gpb.2015.01.009</pub-id><?supplied-pmid 25743089?><pub-id pub-id-type="pmid">25743089</pub-id></element-citation></ref><ref id="CR27"><label>27.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ying</surname><given-names>YL</given-names></name><name><surname>Zhang</surname><given-names>J</given-names></name><name><surname>Gao</surname><given-names>R</given-names></name><name><surname>Long</surname><given-names>YT</given-names></name></person-group><article-title>Nanopore-based sequencing and detection of nucleic acids</article-title><source>Angew Chem Int Ed Engl</source><year>2013</year><volume>52</volume><issue>50</issue><fpage>13154</fpage><lpage>13161</lpage><pub-id pub-id-type="doi">10.1002/anie.201303529</pub-id><?supplied-pmid 24214738?><pub-id pub-id-type="pmid">24214738</pub-id></element-citation></ref><ref id="CR28"><label>28.</label><mixed-citation publication-type="other">DNA Sequencing Costs. [<ext-link ext-link-type="uri" xlink:href="http://www.genome.gov/sequencingcosts/">http://www.genome.gov/sequencingcosts/</ext-link>]. Accessed 25 Apr 2016.</mixed-citation></ref><ref id="CR29"><label>29.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Baker</surname><given-names>M</given-names></name></person-group><article-title>Next-generation sequencing: adjusting to data overload</article-title><source>Nat Meth</source><year>2010</year><volume>7</volume><issue>7</issue><fpage>495</fpage><lpage>499</lpage><pub-id pub-id-type="doi">10.1038/nmeth0710-495</pub-id></element-citation></ref><ref id="CR30"><label>30.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Vyverman</surname><given-names>M</given-names></name><name><surname>De Baets</surname><given-names>B</given-names></name><name><surname>Fack</surname><given-names>V</given-names></name><name><surname>Dawyndt</surname><given-names>P</given-names></name></person-group><article-title>Prospects and limitations of full-text index structures in genome analysis</article-title><source>Nucleic Acids Res</source><year>2012</year><volume>40</volume><issue>15</issue><fpage>6993</fpage><lpage>7015</lpage><pub-id pub-id-type="doi">10.1093/nar/gks408</pub-id><?supplied-pmid 22584621?><pub-id pub-id-type="pmid">22584621</pub-id></element-citation></ref><ref id="CR31"><label>31.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bao</surname><given-names>R</given-names></name><name><surname>Huang</surname><given-names>L</given-names></name><name><surname>Andrade</surname><given-names>J</given-names></name><name><surname>Tan</surname><given-names>W</given-names></name><name><surname>Kibbe</surname><given-names>WA</given-names></name><name><surname>Jiang</surname><given-names>H</given-names></name><name><surname>Feng</surname><given-names>G</given-names></name></person-group><article-title>Review of current methods, applications, and data management for the bioinformatics analysis of whole exome sequencing</article-title><source>Cancer Informat.</source><year>2014</year><volume>13</volume><issue>Suppl 2</issue><fpage>67</fpage><lpage>82</lpage></element-citation></ref><ref id="CR32"><label>32.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Finotello</surname><given-names>F</given-names></name><name><surname>Di Camillo</surname><given-names>B</given-names></name></person-group><article-title>Measuring differential gene expression with RNA-seq: challenges and strategies for data analysis</article-title><source>Brief Funct Genomics</source><year>2015</year><volume>14</volume><issue>2</issue><fpage>130</fpage><lpage>142</lpage><pub-id pub-id-type="doi">10.1093/bfgp/elu035</pub-id><?supplied-pmid 25240000?><pub-id pub-id-type="pmid">25240000</pub-id></element-citation></ref><ref id="CR33"><label>33.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yu</surname><given-names>B</given-names></name></person-group><article-title>Setting up next-generation sequencing in the medical laboratory</article-title><source>Methods Mol Biol</source><year>2014</year><volume>1168</volume><fpage>195</fpage><lpage>206</lpage><pub-id pub-id-type="doi">10.1007/978-1-4939-0847-9_11</pub-id><?supplied-pmid 24870137?><pub-id pub-id-type="pmid">24870137</pub-id></element-citation></ref><ref id="CR34"><label>34.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shyr</surname><given-names>C</given-names></name><name><surname>Kushniruk</surname><given-names>A</given-names></name><name><surname>Wasserman</surname><given-names>WW</given-names></name></person-group><article-title>Usability study of clinical exome analysis software: top lessons learned and recommendations</article-title><source>J Biomed Inform</source><year>2014</year><volume>51</volume><fpage>129</fpage><lpage>136</lpage><pub-id pub-id-type="doi">10.1016/j.jbi.2014.05.004</pub-id><?supplied-pmid 24860971?><pub-id pub-id-type="pmid">24860971</pub-id></element-citation></ref><ref id="CR35"><label>35.</label><mixed-citation publication-type="other">SEQanswers&#x02019; List of Next Generation Sequencing Software. [<ext-link ext-link-type="uri" xlink:href="http://seqanswers.com/wiki/Software/list">http://seqanswers.com/wiki/Software/list</ext-link>]. Accessed 25 Apr 2016.</mixed-citation></ref><ref id="CR36"><label>36.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Barnett</surname><given-names>DW</given-names></name><name><surname>Garrison</surname><given-names>EK</given-names></name><name><surname>Quinlan</surname><given-names>AR</given-names></name><name><surname>Stromberg</surname><given-names>MP</given-names></name><name><surname>Marth</surname><given-names>GT</given-names></name></person-group><article-title>BamTools: a C++ API and toolkit for analyzing and managing BAM files</article-title><source>Bioinformatics</source><year>2011</year><volume>27</volume><issue>12</issue><fpage>1691</fpage><lpage>1692</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btr174</pub-id><?supplied-pmid 21493652?><pub-id pub-id-type="pmid">21493652</pub-id></element-citation></ref><ref id="CR37"><label>37.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>H</given-names></name><name><surname>Handsaker</surname><given-names>B</given-names></name><name><surname>Wysoker</surname><given-names>A</given-names></name><name><surname>Fennell</surname><given-names>T</given-names></name><name><surname>Ruan</surname><given-names>J</given-names></name><name><surname>Homer</surname><given-names>N</given-names></name><name><surname>Marth</surname><given-names>G</given-names></name><name><surname>Abecasis</surname><given-names>G</given-names></name><name><surname>Durbin</surname><given-names>R</given-names></name><collab>Genome Project Data Processing S</collab></person-group><article-title>The Sequence Alignment/Map format and SAMtools</article-title><source>Bioinformatics</source><year>2009</year><volume>25</volume><issue>16</issue><fpage>2078</fpage><lpage>2079</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btp352</pub-id><?supplied-pmid 19505943?><pub-id pub-id-type="pmid">19505943</pub-id></element-citation></ref><ref id="CR38"><label>38.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Nordell Markovits</surname><given-names>A</given-names></name><name><surname>Joly Beauparlant</surname><given-names>C</given-names></name><name><surname>Toupin</surname><given-names>D</given-names></name><name><surname>Wang</surname><given-names>S</given-names></name><name><surname>Droit</surname><given-names>A</given-names></name><name><surname>Gevry</surname><given-names>N</given-names></name></person-group><article-title>NGS++: a library for rapid prototyping of epigenomics software tools</article-title><source>Bioinformatics</source><year>2013</year><volume>29</volume><issue>15</issue><fpage>1893</fpage><lpage>1894</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btt312</pub-id><?supplied-pmid 23736531?><pub-id pub-id-type="pmid">23736531</pub-id></element-citation></ref><ref id="CR39"><label>39.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Plieskatt</surname><given-names>J</given-names></name><name><surname>Rinaldi</surname><given-names>G</given-names></name><name><surname>Brindley</surname><given-names>PJ</given-names></name><name><surname>Jia</surname><given-names>X</given-names></name><name><surname>Potriquet</surname><given-names>J</given-names></name><name><surname>Bethony</surname><given-names>J</given-names></name><name><surname>Mulvenna</surname><given-names>J</given-names></name></person-group><article-title>Bioclojure: a functional library for the manipulation of biological sequences</article-title><source>Bioinformatics</source><year>2014</year><volume>30</volume><issue>17</issue><fpage>2537</fpage><lpage>2539</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btu311</pub-id><?supplied-pmid 24794932?><pub-id pub-id-type="pmid">24794932</pub-id></element-citation></ref><ref id="CR40"><label>40.</label><mixed-citation publication-type="other">libStatGen. [<ext-link ext-link-type="uri" xlink:href="https://github.com/statgen/libStatGen/">https://github.com/statgen/libStatGen/</ext-link>]. Accessed 25 Apr 2016.</mixed-citation></ref><ref id="CR41"><label>41.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pitt</surname><given-names>WR</given-names></name><name><surname>Williams</surname><given-names>MA</given-names></name><name><surname>Steven</surname><given-names>M</given-names></name><name><surname>Sweeney</surname><given-names>B</given-names></name><name><surname>Bleasby</surname><given-names>AJ</given-names></name><name><surname>Moss</surname><given-names>DS</given-names></name></person-group><article-title>The Bioinformatics Template Library--generic components for biocomputing</article-title><source>Bioinformatics</source><year>2001</year><volume>17</volume><issue>8</issue><fpage>729</fpage><lpage>737</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/17.8.729</pub-id><?supplied-pmid 11524374?><pub-id pub-id-type="pmid">11524374</pub-id></element-citation></ref><ref id="CR42"><label>42.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dutheil</surname><given-names>J</given-names></name><name><surname>Gaillard</surname><given-names>S</given-names></name><name><surname>Bazin</surname><given-names>E</given-names></name><name><surname>Glemin</surname><given-names>S</given-names></name><name><surname>Ranwez</surname><given-names>V</given-names></name><name><surname>Galtier</surname><given-names>N</given-names></name><name><surname>Belkhir</surname><given-names>K</given-names></name></person-group><article-title>Bio++: a set of C++ libraries for sequence analysis, phylogenetics, molecular evolution and population genetics</article-title><source>BMC Bioinf.</source><year>2006</year><volume>7</volume><fpage>188</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-7-188</pub-id></element-citation></ref><ref id="CR43"><label>43.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rice</surname><given-names>P</given-names></name><name><surname>Longden</surname><given-names>I</given-names></name><name><surname>Bleasby</surname><given-names>A</given-names></name></person-group><article-title>EMBOSS: the European Molecular Biology Open Software Suite</article-title><source>Trends Genet</source><year>2000</year><volume>16</volume><issue>6</issue><fpage>276</fpage><lpage>277</lpage><pub-id pub-id-type="doi">10.1016/S0168-9525(00)02024-2</pub-id><?supplied-pmid 10827456?><pub-id pub-id-type="pmid">10827456</pub-id></element-citation></ref><ref id="CR44"><label>44.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Goto</surname><given-names>N</given-names></name><name><surname>Prins</surname><given-names>P</given-names></name><name><surname>Nakao</surname><given-names>M</given-names></name><name><surname>Bonnal</surname><given-names>R</given-names></name><name><surname>Aerts</surname><given-names>J</given-names></name><name><surname>Katayama</surname><given-names>T</given-names></name></person-group><article-title>BioRuby: bioinformatics software for the Ruby programming language</article-title><source>Bioinformatics</source><year>2010</year><volume>26</volume><issue>20</issue><fpage>2617</fpage><lpage>2619</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btq475</pub-id><?supplied-pmid 20739307?><pub-id pub-id-type="pmid">20739307</pub-id></element-citation></ref><ref id="CR45"><label>45.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cock</surname><given-names>PJ</given-names></name><name><surname>Antao</surname><given-names>T</given-names></name><name><surname>Chang</surname><given-names>JT</given-names></name><name><surname>Chapman</surname><given-names>BA</given-names></name><name><surname>Cox</surname><given-names>CJ</given-names></name><name><surname>Dalke</surname><given-names>A</given-names></name><name><surname>Friedberg</surname><given-names>I</given-names></name><name><surname>Hamelryck</surname><given-names>T</given-names></name><name><surname>Kauff</surname><given-names>F</given-names></name><name><surname>Wilczynski</surname><given-names>B</given-names></name><etal/></person-group><article-title>Biopython: freely available Python tools for computational molecular biology and bioinformatics</article-title><source>Bioinformatics</source><year>2009</year><volume>25</volume><issue>11</issue><fpage>1422</fpage><lpage>1423</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btp163</pub-id><?supplied-pmid 19304878?><pub-id pub-id-type="pmid">19304878</pub-id></element-citation></ref><ref id="CR46"><label>46.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Holland</surname><given-names>RC</given-names></name><name><surname>Down</surname><given-names>TA</given-names></name><name><surname>Pocock</surname><given-names>M</given-names></name><name><surname>Prlic</surname><given-names>A</given-names></name><name><surname>Huen</surname><given-names>D</given-names></name><name><surname>James</surname><given-names>K</given-names></name><name><surname>Foisy</surname><given-names>S</given-names></name><name><surname>Drager</surname><given-names>A</given-names></name><name><surname>Yates</surname><given-names>A</given-names></name><name><surname>Heuer</surname><given-names>M</given-names></name><etal/></person-group><article-title>BioJava: an open-source framework for bioinformatics</article-title><source>Bioinformatics</source><year>2008</year><volume>24</volume><issue>18</issue><fpage>2096</fpage><lpage>2097</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btn397</pub-id><?supplied-pmid 18689808?><pub-id pub-id-type="pmid">18689808</pub-id></element-citation></ref><ref id="CR47"><label>47.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stajich</surname><given-names>JE</given-names></name><name><surname>Block</surname><given-names>D</given-names></name><name><surname>Boulez</surname><given-names>K</given-names></name><name><surname>Brenner</surname><given-names>SE</given-names></name><name><surname>Chervitz</surname><given-names>SA</given-names></name><name><surname>Dagdigian</surname><given-names>C</given-names></name><name><surname>Fuellen</surname><given-names>G</given-names></name><name><surname>Gilbert</surname><given-names>JG</given-names></name><name><surname>Korf</surname><given-names>I</given-names></name><name><surname>Lapp</surname><given-names>H</given-names></name><etal/></person-group><article-title>The Bioperl toolkit: Perl modules for the life sciences</article-title><source>Genome Res</source><year>2002</year><volume>12</volume><issue>10</issue><fpage>1611</fpage><lpage>1618</lpage><pub-id pub-id-type="doi">10.1101/gr.361602</pub-id><?supplied-pmid 12368254?><pub-id pub-id-type="pmid">12368254</pub-id></element-citation></ref><ref id="CR48"><label>48.</label><mixed-citation publication-type="other">Open Bioinformatics foundation. [<ext-link ext-link-type="uri" xlink:href="http://www.open-bio.org/">http://www.open-bio.org/</ext-link>]. Accessed 25 Apr 2016.</mixed-citation></ref><ref id="CR49"><label>49.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Huber</surname><given-names>W</given-names></name><name><surname>Carey</surname><given-names>VJ</given-names></name><name><surname>Gentleman</surname><given-names>R</given-names></name><name><surname>Anders</surname><given-names>S</given-names></name><name><surname>Carlson</surname><given-names>M</given-names></name><name><surname>Carvalho</surname><given-names>BS</given-names></name><name><surname>Bravo</surname><given-names>HC</given-names></name><name><surname>Davis</surname><given-names>S</given-names></name><name><surname>Gatto</surname><given-names>L</given-names></name><name><surname>Girke</surname><given-names>T</given-names></name><etal/></person-group><article-title>Orchestrating high-throughput genomic analysis with Bioconductor</article-title><source>Nat Methods</source><year>2015</year><volume>12</volume><issue>2</issue><fpage>115</fpage><lpage>121</lpage><pub-id pub-id-type="doi">10.1038/nmeth.3252</pub-id><?supplied-pmid 25633503?><pub-id pub-id-type="pmid">25633503</pub-id></element-citation></ref><ref id="CR50"><label>50.</label><mixed-citation publication-type="other">Gentleman RC, Carey VJ, Bates DM, Bolstad B, Dettling M, Dudoit S, Ellis B, Gautier L, Ge Y, Gentry J, Hornik K, Hothorn T, Huber W, Iacus S, Irizarry R, Leisch F, Li C, Maechler M, Rossini AJ, Sawitzki G, Smith C, Smyth G, Tierney L, Yang JY, Zhang J. Bioconductor: open software development for computational biology and bioinformatics. Genome Biol. 2004;5(10):R80. Epub 2004 Sep 15.</mixed-citation></ref><ref id="CR51"><label>51.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mangalam</surname><given-names>H</given-names></name></person-group><article-title>The Bio* toolkits--a brief overview</article-title><source>Brief Bioinform</source><year>2002</year><volume>3</volume><issue>3</issue><fpage>296</fpage><lpage>302</lpage><pub-id pub-id-type="doi">10.1093/bib/3.3.296</pub-id><?supplied-pmid 12230038?><pub-id pub-id-type="pmid">12230038</pub-id></element-citation></ref><ref id="CR52"><label>52.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Doring</surname><given-names>A</given-names></name><name><surname>Weese</surname><given-names>D</given-names></name><name><surname>Rausch</surname><given-names>T</given-names></name><name><surname>Reinert</surname><given-names>K</given-names></name></person-group><article-title>SeqAn an efficient, generic C++ library for sequence analysis</article-title><source>BMC Bioinf.</source><year>2008</year><volume>9</volume><fpage>11</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-9-11</pub-id></element-citation></ref><ref id="CR53"><label>53.</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Gogol-D&#x000f6;ring</surname><given-names>A</given-names></name><name><surname>Reinert</surname><given-names>K</given-names></name></person-group><source>Biological sequence analysis using the SeqAn C++ library</source><year>2010</year><publisher-loc>Boca Raton</publisher-loc><publisher-name>CRC Press</publisher-name></element-citation></ref><ref id="CR54"><label>54.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mason</surname><given-names>CE</given-names></name><name><surname>Zumbo</surname><given-names>P</given-names></name><name><surname>Sanders</surname><given-names>S</given-names></name><name><surname>Folk</surname><given-names>M</given-names></name><name><surname>Robinson</surname><given-names>D</given-names></name><name><surname>Aydt</surname><given-names>R</given-names></name><name><surname>Gollery</surname><given-names>M</given-names></name><name><surname>Welsh</surname><given-names>M</given-names></name><name><surname>Olson</surname><given-names>NE</given-names></name><name><surname>Smith</surname><given-names>TM</given-names></name></person-group><article-title>Standardizing the Next Generation of Bioinformatics Software Development with BioHDF (HDF5)</article-title><source>Adv Comput Biol</source><year>2010</year><volume>680</volume><fpage>693</fpage><lpage>700</lpage><pub-id pub-id-type="doi">10.1007/978-1-4419-5913-3_77</pub-id></element-citation></ref><ref id="CR55"><label>55.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rahn</surname><given-names>R</given-names></name><name><surname>Weese</surname><given-names>D</given-names></name><name><surname>Reinert</surname><given-names>K</given-names></name></person-group><article-title>Journaled string tree-a scalable data structure for analyzing thousands of similar genomes on your laptop</article-title><source>Bioinformatics</source><year>2014</year><volume>30</volume><issue>24</issue><fpage>3499</fpage><lpage>3505</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btu438</pub-id><?supplied-pmid 25028723?><pub-id pub-id-type="pmid">25028723</pub-id></element-citation></ref><ref id="CR56"><label>56.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schulz</surname><given-names>MH</given-names></name><name><surname>Weese</surname><given-names>D</given-names></name><name><surname>Holtgrewe</surname><given-names>M</given-names></name><name><surname>Dimitrova</surname><given-names>V</given-names></name><name><surname>Niu</surname><given-names>S</given-names></name><name><surname>Reinert</surname><given-names>K</given-names></name><name><surname>Richard</surname><given-names>H</given-names></name></person-group><article-title>Fiona: a parallel and automatic strategy for read error correction</article-title><source>Bioinformatics</source><year>2014</year><volume>30</volume><issue>17</issue><fpage>i356</fpage><lpage>363</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btu440</pub-id><?supplied-pmid 25161220?><pub-id pub-id-type="pmid">25161220</pub-id></element-citation></ref><ref id="CR57"><label>57.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hauswedell</surname><given-names>H</given-names></name><name><surname>Singer</surname><given-names>J</given-names></name><name><surname>Reinert</surname><given-names>K</given-names></name></person-group><article-title>Lambda: the local aligner for massive biological data</article-title><source>Bioinformatics</source><year>2014</year><volume>30</volume><issue>17</issue><fpage>i349</fpage><lpage>355</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btu439</pub-id><?supplied-pmid 25161219?><pub-id pub-id-type="pmid">25161219</pub-id></element-citation></ref><ref id="CR58"><label>58.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gremme</surname><given-names>G</given-names></name><name><surname>Steinbiss</surname><given-names>S</given-names></name><name><surname>Kurtz</surname><given-names>S</given-names></name></person-group><article-title>GenomeTools: a comprehensive software library for efficient processing of structured genome annotations</article-title><source>IEEE/ACM Trans. Comput. Biol. Bioinform.</source><year>2013</year><volume>10</volume><issue>3</issue><fpage>645</fpage><lpage>656</lpage><pub-id pub-id-type="doi">10.1109/TCBB.2013.68</pub-id><?supplied-pmid 24091398?><pub-id pub-id-type="pmid">24091398</pub-id></element-citation></ref><ref id="CR59"><label>59.</label><mixed-citation publication-type="other">Stroustrup B. The C++ Programming Language (4th Edition). Boston, MA, USA: Addison-Wesley Professional; 2013.</mixed-citation></ref><ref id="CR60"><label>60.</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Pataki</surname><given-names>N</given-names></name><name><surname>Porkolab</surname><given-names>Z</given-names></name></person-group><article-title>Extension of iterator traits in the C&#x0002b;&#x0002b; Standard Template Library</article-title><source>Computer Science and Information Systems (FedCSIS), 2011 Federated Conference on: 18-21 Sept. 2011</source><year>2011</year><fpage>911</fpage><lpage>914</lpage></element-citation></ref><ref id="CR61"><label>61.</label><mixed-citation publication-type="other">Illumina&#x02019;s BaseSpace. [<ext-link ext-link-type="uri" xlink:href="https://basespace.illumina.com/">https://basespace.illumina.com/</ext-link>]</mixed-citation></ref><ref id="CR62"><label>62.</label><mixed-citation publication-type="other">CLCBio. [<ext-link ext-link-type="uri" xlink:href="http://www.clcbio.com/">http://www.clcbio.com/</ext-link>]</mixed-citation></ref><ref id="CR63"><label>63.</label><mixed-citation publication-type="other">DNASTAR. [<ext-link ext-link-type="uri" xlink:href="http://www.dnastar.com/">http://www.dnastar.com/</ext-link>]</mixed-citation></ref><ref id="CR64"><label>64.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kearse</surname><given-names>M</given-names></name><name><surname>Moir</surname><given-names>R</given-names></name><name><surname>Wilson</surname><given-names>A</given-names></name><name><surname>Stones-Havas</surname><given-names>S</given-names></name><name><surname>Cheung</surname><given-names>M</given-names></name><name><surname>Sturrock</surname><given-names>S</given-names></name><name><surname>Buxton</surname><given-names>S</given-names></name><name><surname>Cooper</surname><given-names>A</given-names></name><name><surname>Markowitz</surname><given-names>S</given-names></name><name><surname>Duran</surname><given-names>C</given-names></name><etal/></person-group><article-title>Geneious Basic: an integrated and extendable desktop software platform for the organization and analysis of sequence data</article-title><source>Bioinformatics</source><year>2012</year><volume>28</volume><issue>12</issue><fpage>1647</fpage><lpage>1649</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/bts199</pub-id><?supplied-pmid 22543367?><pub-id pub-id-type="pmid">22543367</pub-id></element-citation></ref><ref id="CR65"><label>65.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Giardine</surname><given-names>B</given-names></name><name><surname>Riemer</surname><given-names>C</given-names></name><name><surname>Hardison</surname><given-names>RC</given-names></name><name><surname>Burhans</surname><given-names>R</given-names></name><name><surname>Elnitski</surname><given-names>L</given-names></name><name><surname>Shah</surname><given-names>P</given-names></name><name><surname>Zhang</surname><given-names>Y</given-names></name><name><surname>Blankenberg</surname><given-names>D</given-names></name><name><surname>Albert</surname><given-names>I</given-names></name><name><surname>Taylor</surname><given-names>J</given-names></name><etal/></person-group><article-title>Galaxy: a platform for interactive large-scale genome analysis</article-title><source>Genome Res</source><year>2005</year><volume>15</volume><issue>10</issue><fpage>1451</fpage><lpage>1455</lpage><pub-id pub-id-type="doi">10.1101/gr.4086505</pub-id><?supplied-pmid 16169926?><pub-id pub-id-type="pmid">16169926</pub-id></element-citation></ref><ref id="CR66"><label>66.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Goecks</surname><given-names>J</given-names></name><name><surname>Nekrutenko</surname><given-names>A</given-names></name><name><surname>Taylor</surname><given-names>J</given-names></name><name><surname>Galaxy</surname><given-names>T</given-names></name></person-group><article-title>Galaxy: a comprehensive approach for supporting accessible, reproducible, and transparent computational research in the life sciences</article-title><source>Genome Biol</source><year>2010</year><volume>11</volume><issue>8</issue><fpage>R86</fpage><pub-id pub-id-type="doi">10.1186/gb-2010-11-8-r86</pub-id><?supplied-pmid 20738864?><pub-id pub-id-type="pmid">20738864</pub-id></element-citation></ref><ref id="CR67"><label>67.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Madduri</surname><given-names>RK</given-names></name><name><surname>Sulakhe</surname><given-names>D</given-names></name><name><surname>Lacinski</surname><given-names>L</given-names></name><name><surname>Liu</surname><given-names>B</given-names></name><name><surname>Rodriguez</surname><given-names>A</given-names></name><name><surname>Chard</surname><given-names>K</given-names></name><name><surname>Dave</surname><given-names>UJ</given-names></name><name><surname>Foster</surname><given-names>IT</given-names></name></person-group><article-title>Experiences Building Globus Genomics: A Next-Generation Sequencing Analysis Service using Galaxy, Globus, and Amazon Web Services</article-title><source>Concurr Comput</source><year>2014</year><volume>26</volume><issue>13</issue><fpage>2266</fpage><lpage>2279</lpage><pub-id pub-id-type="doi">10.1002/cpe.3274</pub-id><?supplied-pmid 25342933?><pub-id pub-id-type="pmid">25342933</pub-id></element-citation></ref><ref id="CR68"><label>68.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wattam</surname><given-names>AR</given-names></name><name><surname>Abraham</surname><given-names>D</given-names></name><name><surname>Dalay</surname><given-names>O</given-names></name><name><surname>Disz</surname><given-names>TL</given-names></name><name><surname>Driscoll</surname><given-names>T</given-names></name><name><surname>Gabbard</surname><given-names>JL</given-names></name><name><surname>Gillespie</surname><given-names>JJ</given-names></name><name><surname>Gough</surname><given-names>R</given-names></name><name><surname>Hix</surname><given-names>D</given-names></name><name><surname>Kenyon</surname><given-names>R</given-names></name><etal/></person-group><article-title>PATRIC, the bacterial bioinformatics database and analysis resource</article-title><source>Nucleic Acids Res</source><year>2014</year><volume>42</volume><issue>Database issue</issue><fpage>D581</fpage><lpage>591</lpage><pub-id pub-id-type="doi">10.1093/nar/gkt1099</pub-id><?supplied-pmid 24225323?><pub-id pub-id-type="pmid">24225323</pub-id></element-citation></ref><ref id="CR69"><label>69.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Golosova</surname><given-names>O</given-names></name><name><surname>Henderson</surname><given-names>R</given-names></name><name><surname>Vaskin</surname><given-names>Y</given-names></name><name><surname>Gabrielian</surname><given-names>A</given-names></name><name><surname>Grekhov</surname><given-names>G</given-names></name><name><surname>Nagarajan</surname><given-names>V</given-names></name><name><surname>Oler</surname><given-names>AJ</given-names></name><name><surname>Quinones</surname><given-names>M</given-names></name><name><surname>Hurt</surname><given-names>D</given-names></name><name><surname>Fursov</surname><given-names>M</given-names></name><etal/></person-group><article-title>Unipro UGENE NGS pipelines and components for variant calling, RNA-seq and ChIP-seq data analyses</article-title><source>PeerJ</source><year>2014</year><volume>2</volume><fpage>e644</fpage><pub-id pub-id-type="doi">10.7717/peerj.644</pub-id><?supplied-pmid 25392756?><pub-id pub-id-type="pmid">25392756</pub-id></element-citation></ref><ref id="CR70"><label>70.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Okonechnikov</surname><given-names>K</given-names></name><name><surname>Golosova</surname><given-names>O</given-names></name><name><surname>Fursov</surname><given-names>M</given-names></name><collab>Team U</collab></person-group><article-title>Unipro UGENE: a unified bioinformatics toolkit</article-title><source>Bioinformatics</source><year>2012</year><volume>28</volume><issue>8</issue><fpage>1166</fpage><lpage>1167</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/bts091</pub-id><?supplied-pmid 22368248?><pub-id pub-id-type="pmid">22368248</pub-id></element-citation></ref><ref id="CR71"><label>71.</label><mixed-citation publication-type="other">Glinert EP. Visual Programming Environments: Paradigms and Systems. Los Alamitos, CA, USA: IEEE Computer Society Press; 1990.</mixed-citation></ref><ref id="CR72"><label>72.</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Shu</surname><given-names>N</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Chang</surname><given-names>S-K</given-names></name><name><surname>Ichikawa</surname><given-names>T</given-names></name><name><surname>Ligomenides</surname><given-names>P</given-names></name></person-group><article-title>Visual Programming Languages: A Perspective and a Dimensional Analysis</article-title><source>Visual Languages</source><year>1986</year><publisher-loc>US</publisher-loc><publisher-name>Springer</publisher-name><fpage>11</fpage><lpage>34</lpage></element-citation></ref><ref id="CR73"><label>73.</label><mixed-citation publication-type="other">Cypher A, editor. Watch what I do: programming by demonstration. Cambridge, MA, USA: MIT Press; 1993.</mixed-citation></ref><ref id="CR74"><label>74.</label><mixed-citation publication-type="other">Lieberman H, editor. Your wish is my command: programming by example. San Francisco, CA, USA: Morgan Kaufmann Publishers Inc; 2001.</mixed-citation></ref><ref id="CR75"><label>75.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brooks</surname><given-names>R</given-names></name></person-group><article-title>Watch What I Do - Programming by Demonstration - Cypher,A</article-title><source>Int J Man Mach Stud</source><year>1993</year><volume>39</volume><issue>6</issue><fpage>1054</fpage><lpage>1055</lpage></element-citation></ref><ref id="CR76"><label>76.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Green</surname><given-names>TRG</given-names></name><name><surname>Petre</surname><given-names>M</given-names></name></person-group><article-title>Usability analysis of visual programming environments: A &#x02018;cognitive dimensions&#x02019; framework</article-title><source>J Visual Lang Comput</source><year>1996</year><volume>7</volume><issue>2</issue><fpage>131</fpage><lpage>174</lpage><pub-id pub-id-type="doi">10.1006/jvlc.1996.0009</pub-id></element-citation></ref><ref id="CR77"><label>77.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>MacLaurin</surname><given-names>M</given-names></name></person-group><article-title>The Design of Kodu: A Tiny Visual Programming Language for Children on the Xbox 360</article-title><source>Acm Sigplan Notices</source><year>2011</year><volume>46</volume><issue>1</issue><fpage>241</fpage><lpage>245</lpage><pub-id pub-id-type="doi">10.1145/1925844.1926413</pub-id></element-citation></ref><ref id="CR78"><label>78.</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Busby</surname><given-names>J</given-names></name><name><surname>Parrish</surname><given-names>Z</given-names></name><name><surname>Wilson</surname><given-names>J</given-names></name></person-group><source>Mastering Unreal technology</source><year>2010</year><publisher-loc>Indianapolis</publisher-loc><publisher-name>Sams</publisher-name></element-citation></ref><ref id="CR79"><label>79.</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Evans</surname><given-names>E</given-names></name></person-group><source>Domain-driven design : tackling complexity in the heart of software</source><year>2004</year><publisher-loc>Boston</publisher-loc><publisher-name>Addison-Wesley</publisher-name></element-citation></ref><ref id="CR80"><label>80.</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Nilsson</surname><given-names>J</given-names></name></person-group><source>Applying domain-driven design and patterns: with examples in C# and.NET</source><year>2006</year><publisher-loc>Upper Saddle River</publisher-loc><publisher-name>Addison-Wesley</publisher-name></element-citation></ref><ref id="CR81"><label>81.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jain</surname><given-names>R</given-names></name></person-group><article-title>Agile Software Development: Adaptive Systems Principles and Best Practices</article-title><source>Inf. Syst. Manag.</source><year>2006</year><volume>23</volume><issue>3</issue><fpage>19</fpage><lpage>30</lpage><pub-id pub-id-type="doi">10.1201/1078.10580530/46108.23.3.20060601/93704.3</pub-id></element-citation></ref><ref id="CR82"><label>82.</label><mixed-citation publication-type="other">Memon AM, Pollack ME, Soffa ML. Using a goal-driven approach to generate test cases for GUIs. In: Proceedings of the 21st international conference on Software engineering; Los Angeles, California, USA. 302632: ACM 1999: 257-266</mixed-citation></ref><ref id="CR83"><label>83.</label><mixed-citation publication-type="other">IEEE 1012. [<ext-link ext-link-type="uri" xlink:href="https://standards.ieee.org/findstds/standard/1012-2012.html">https://standards.ieee.org/findstds/standard/1012-2012.html</ext-link>]. Accessed 25 Apr 2016.</mixed-citation></ref><ref id="CR84"><label>84.</label><mixed-citation publication-type="other">SEQanswers. [<ext-link ext-link-type="uri" xlink:href="http://seqanswers.com/">http://seqanswers.com/</ext-link>]. Accessed 25 Apr 2016.</mixed-citation></ref><ref id="CR85"><label>85.</label><mixed-citation publication-type="other">GitHub. [<ext-link ext-link-type="uri" xlink:href="https://github.com/">https://github.com/</ext-link>]. Accessed 25 Apr 2016.</mixed-citation></ref><ref id="CR86"><label>86.</label><mixed-citation publication-type="other">Rabix: Reproducible Analyses for Bioinformatics. [<ext-link ext-link-type="uri" xlink:href="https://www.rabix.org/">https://www.rabix.org/</ext-link>]. Accessed 25 Apr 2016.</mixed-citation></ref><ref id="CR87"><label>87.</label><mixed-citation publication-type="other">The Common Workflow Language (CWL). [<ext-link ext-link-type="uri" xlink:href="http://www.commonwl.org/">http://www.commonwl.org</ext-link>]. Accessed 25 Apr 2016.</mixed-citation></ref><ref id="CR88"><label>88.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Milicchio</surname><given-names>F</given-names></name><name><surname>Paoluzzi</surname><given-names>A</given-names></name><name><surname>Bertoli</surname><given-names>C</given-names></name></person-group><article-title>A Visual Approach To Geometric Programming</article-title><source>Comput.-Aided Des. Applic.</source><year>2005</year><volume>2</volume><fpage>411</fpage><lpage>420</lpage><pub-id pub-id-type="doi">10.1080/16864360.2005.10738390</pub-id></element-citation></ref><ref id="CR89"><label>89.</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Bottaro</surname><given-names>A</given-names></name><name><surname>Marino</surname><given-names>E</given-names></name><name><surname>Milicchio</surname><given-names>F</given-names></name><name><surname>Paoluzzi</surname><given-names>A</given-names></name><name><surname>Rosina</surname><given-names>M</given-names></name><name><surname>Spini</surname><given-names>F</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Smith</surname><given-names>M</given-names></name><name><surname>Salvendy</surname><given-names>G</given-names></name></person-group><article-title>Visual Programming of Location-Based Services</article-title><source>Human Interface and the Management of Information Interacting with Information</source><year>2011</year><publisher-loc>Berlin Heidelberg</publisher-loc><publisher-name>Springer</publisher-name><fpage>3</fpage><lpage>12</lpage></element-citation></ref><ref id="CR90"><label>90.</label><mixed-citation publication-type="other">Dimou A, Verborgh R, Sande MV, Mannens E, Walle RVd. Machine-interpretable dataset and service descriptions for heterogeneous data access and retrieval. In: Proceedings of the 11th International Conference on Semantic Systems; Vienna, Austria. 2814873: ACM 2015: 145-152</mixed-citation></ref><ref id="CR91"><label>91.</label><mixed-citation publication-type="other">Lanthaler M, G&#x000fc;tl C. On using JSON-LD to create evolvable RESTful services. In: Proceedings of the Third International Workshop on RESTful Design; Lyon, France. 2307827: ACM 2012: 25-32</mixed-citation></ref><ref id="CR92"><label>92.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>HJ</given-names></name><name><surname>Luo</surname><given-names>P</given-names></name><name><surname>Wang</surname><given-names>DS</given-names></name></person-group><article-title>A distributed expansible authentication model based on Kerberos</article-title><source>J Netw Comput Appl</source><year>2008</year><volume>31</volume><issue>4</issue><fpage>472</fpage><lpage>486</lpage><pub-id pub-id-type="doi">10.1016/j.jnca.2007.12.003</pub-id></element-citation></ref><ref id="CR93"><label>93.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Butler</surname><given-names>F</given-names></name><name><surname>Cervesato</surname><given-names>I</given-names></name><name><surname>Jaggard</surname><given-names>AD</given-names></name><name><surname>Scedrov</surname><given-names>A</given-names></name><name><surname>Walstad</surname><given-names>C</given-names></name></person-group><article-title>Formal analysis of Kerberos 5</article-title><source>Theor Comput Sci</source><year>2006</year><volume>367</volume><issue>1-2</issue><fpage>57</fpage><lpage>87</lpage><pub-id pub-id-type="doi">10.1016/j.tcs.2006.08.040</pub-id></element-citation></ref><ref id="CR94"><label>94.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Makinen</surname><given-names>V</given-names></name></person-group><article-title>Compressed Full-Text Indexes</article-title><source>Acm Comput Surv</source><year>2007</year><volume>39</volume><issue>1</issue><fpage>1</fpage><lpage>61</lpage><pub-id pub-id-type="doi">10.1145/1216370.1216371</pub-id></element-citation></ref></ref-list></back></article>