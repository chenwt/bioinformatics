<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v3.0 20080202//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName journalpublishing3.dtd?><?SourceDTD.Version 3.0?><?ConverterInfo.XSLTName jp2nlmx2.xsl?><?ConverterInfo.Version 2?><front><journal-meta><journal-id journal-id-type="nlm-ta">PLoS One</journal-id><journal-id journal-id-type="iso-abbrev">PLoS ONE</journal-id><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="pmc">plosone</journal-id><journal-title-group><journal-title>PLoS ONE</journal-title></journal-title-group><issn pub-type="epub">1932-6203</issn><publisher><publisher-name>Public Library of Science</publisher-name><publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">3714256</article-id><article-id pub-id-type="publisher-id">PONE-D-13-15597</article-id><article-id pub-id-type="doi">10.1371/journal.pone.0069401</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Biology</subject><subj-group><subject>Computational Biology</subject><subj-group><subject>Genomics</subject><subj-group><subject>Genome Analysis Tools</subject><subj-group><subject>Transcriptomes</subject></subj-group></subj-group><subj-group><subject>Comparative Genomics</subject><subject>Genome Expression Analysis</subject></subj-group></subj-group><subj-group><subject>Biological Data Management</subject></subj-group></subj-group><subj-group><subject>Genomics</subject><subj-group><subject>Genome Analysis Tools</subject><subj-group><subject>Transcriptomes</subject></subj-group></subj-group><subj-group><subject>Comparative Genomics</subject></subj-group></subj-group><subj-group><subject>Plant Science</subject><subj-group><subject>Plant Genomics</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Computer Science</subject><subj-group><subject>Software Engineering</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Engineering</subject><subj-group><subject>Software Engineering</subject></subj-group></subj-group></article-categories><title-group><article-title>TCW: Transcriptome Computational Workbench</article-title><alt-title alt-title-type="running-head">Transcriptome Computational Workbench</alt-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Soderlund</surname><given-names>Carol</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author"><name><surname>Nelson</surname><given-names>William</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author"><name><surname>Willer</surname><given-names>Mark</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author"><name><surname>Gang</surname><given-names>David R.</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>BIO5 Institute, University of Arizona, Tucson, Arizona, United States of America</addr-line></aff><aff id="aff2"><label>2</label><addr-line>Washington State University, Pullman, Washington, United States of America</addr-line></aff><contrib-group><contrib contrib-type="editor"><name><surname>Candela</surname><given-names>Hector</given-names></name><role>Editor</role><xref ref-type="aff" rid="edit1"/></contrib></contrib-group><aff id="edit1"><addr-line>Universidad Miguel Hern&#x000e1;ndez de Elche, Spain</addr-line></aff><author-notes><corresp id="cor1">* E-mail: <email>cari@agcol.arizona.edu</email></corresp><fn fn-type="conflict"><p><bold>Competing Interests: </bold>The authors have declared that no competing interests exist.</p></fn><fn fn-type="con"><p>Conceived and designed the experiments: CS DRG. Analyzed the data: CS WN. Contributed reagents/materials/analysis tools: DRG. Wrote the paper: CS. Designed the software: CS. Software development: CS WN MW.</p></fn></author-notes><pub-date pub-type="collection"><year>2013</year></pub-date><pub-date pub-type="epub"><day>17</day><month>7</month><year>2013</year></pub-date><volume>8</volume><issue>7</issue><elocation-id>e69401</elocation-id><history><date date-type="received"><day>15</day><month>4</month><year>2013</year></date><date date-type="accepted"><day>7</day><month>6</month><year>2013</year></date></history><permissions><copyright-year>2013</copyright-year><copyright-holder>Soderlund et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract><sec><title>Background</title><p>The analysis of transcriptome data involves many steps and various programs, along with organization of large amounts of data and results. Without a methodical approach for storage, analysis and query, the resulting ad hoc analysis can lead to human error, loss of data and results, inefficient use of time, and lack of verifiability, repeatability, and extensibility.</p></sec><sec><title>Methodology</title><p>The Transcriptome Computational Workbench (TCW) provides Java graphical interfaces for methodical analysis for both single and comparative transcriptome data without the use of a reference genome (e.g. for non-model organisms). The singleTCW interface steps the user through importing transcript sequences (e.g. Illumina) or assembling long sequences (e.g. Sanger, 454, transcripts), annotating the sequences, and performing differential expression analysis using published statistical programs in R. The data, metadata, and results are stored in a MySQL database. The multiTCW interface builds a comparison database by importing sequence and annotation from one or more single TCW databases, executes the ESTscan program to translate the sequences into proteins, and then incorporates one or more clusterings, where the clustering options are to execute the orthoMCL program, compute transitive closure, or import clusters. Both singleTCW and multiTCW allow extensive query and display of the results, where singleTCW displays the alignment of annotation hits to transcript sequences, and multiTCW displays multiple transcript alignments with MUSCLE or pairwise alignments. The query programs can be executed on the desktop for fastest analysis, or from the web for sharing the results.</p></sec><sec><title>Conclusion</title><p>It is now affordable to buy a multi-processor machine, and easy to install Java and MySQL. By simply downloading the TCW, the user can interactively analyze, query and view their data. The TCW allows in-depth data mining of the results, which can lead to a better understanding of the transcriptome. TCW is freely available from <ext-link ext-link-type="uri" xlink:href="http://www.agcol.arizona.edu/software/tcw">www.agcol.arizona.edu/software/tcw</ext-link>.</p></sec></abstract><funding-group><funding-statement>This work was supported by National Science Foundation grant IOS-1044821 (<ext-link ext-link-type="uri" xlink:href="http://www.nsf.gov/awardsearch/showAward?AWD_ID=1044821">http://www.nsf.gov/awardsearch/showAward?AWD_ID=1044821</ext-link>). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="10"/></counts></article-meta></front><body><sec id="s1"><title>Introduction</title><p>With next generation sequencing (NGS), the amount of transcriptome data is increasing rapidly. Typical analyses performed on transcripts are GC-content, open reading frames (ORF), single-nucleotide polymorphisms (SNP), comparisons with protein databases, gene ontology (GO) <xref ref-type="bibr" rid="pone.0069401-TheGO1">[1]</xref>, differential expression (DE), and homology (paralogs and/or orthologs) clustering. Often, publications for transcriptome analysis reference many different programs and perform computations on web sites, which indicates the authors needed to merge the results from the various locations and programs. Most publications do not state what software they used for merging the results, which indicates either that they did not properly reference the software, or they wrote their own scripts and/or used Excel spreadsheets. This causes an &#x02018;ad hoc&#x02019; style of analysis that can lead to human error, loss of data and results, inefficient use of time, and lack of verifiability, repeatability and extensibility. Moreover, this approach does not make the data and results easily available on the web in a queryable form for the community.</p><p>The Transcriptome Computational Workbench (TCW) aims to make analysis more systematic by consolidating data, analysis and results. Towards this end, TCW contains two manager programs: singleTCW has a graphical interface for building a database of annotated sequences with DE results for a single species, and multiTCW has a graphical interface for building a database of multiple species with comparison results. It uses external programs when appropriate, where most are packaged within the TCW for ease of installation. Except for downloading annotation databases from the web (for which scripts are supplied), the TCW is a web-free program so the user is not dependent on having a good Internet connection or contention with other web users. For large projects, it is beneficial to have a high-end computer, but a 32 CPU 2.4 ghz AMD machine with 128G of RAM and 7TB internal disk space can now be purchased for less than $6000. It is helpful to have a system administrator to configure the machine, but it is now common for biology departments to have such support. To keep installation simple, the TCW uses the common platforms Java, MySQL, and R (optional for differential expression analysis).</p><p>Many transcriptome publications show &#x02018;big picture&#x02019; results, e.g. a chart of the major GO categories. Though this information is worthwhile, it is equally important to be able to drill down into the data and view exactly what the alignments look like, all the annotation hits (not just the best e-value), etc. Interactive data mining can provide a better understanding of the transcriptome and lead to new and better experiments. The TCW provides this interactive exploratory environment within both singleTCW and multiTCW. A big advantage of using Java is that the project analysis can be run locally for speed, but then results can be made publically available as an applet on the web (albeit, startup time is slower).</p><p>The TCW takes as input Sanger reads, 454 reads and/or pre-assembled transcripts (e.g. Illumina) with read counts. It does not perform assembly of high volume short reads as there are many good software programs to perform that task along with computing the read counts (see <xref ref-type="bibr" rid="pone.0069401-Garber1">[2]</xref> for a good review). Hence, the TCW can assemble a mix of long reads and transcripts, computing the counts of the reads and integrating the read counts of the transcripts. It will also work directly with a pre-assembled transcript set (i.e. no assembly needed). Though this manuscript is written for transcriptome analysis, the system can also be used for the annotation and DE analysis of shotgun proteomics, i.e. in both cases there are sequences and abundance levels. This would be especially advantageous when joint transcriptome and proteome experiments are performed, as the analysis would be the same for both datasets. To our knowledge, there is no other program that can work with this set of inputs.</p><p>The TCW is a combination of pipeline software with a graphical interface and interactive graphics of the results for both single and multiple species. To our knowledge, there is no other software that performs both single and multiple analyses with interactive display. However, there are freely available software programs that have overlapping functionality. As the TCW is specifically written for &#x0201c;project-specific desktop interactive transcriptome analysis&#x0201d;, we compare its features with similar freely available downloadable interactive programs (i.e. not web-based or configurable pipelines).</p><p>Both TCW and Blast2GO <xref ref-type="bibr" rid="pone.0069401-Conesa1">[3]</xref> provide annotation from protein databases and GO assignments along with interactive graphics of the results, but they are otherwise quite different. Using Blast2GO, the user does not need a multiprocessor machine to run the blasts as it uses a cloud server. They do not need to download databases, and the results include InterPro <xref ref-type="bibr" rid="pone.0069401-Hunter1">[4]</xref> and pathway data. Using TCW, the user can easily configure it to use their annotation databases of choice (protein or nucleotide), it results in an in-house MySQL database of all data and results with differential expression analysis and comparisons across transcriptomes, and it has the ability to provide the results on the web. Both TCW and Blast2GO are written in Java and aim to provide an easy interface for the user. A scenario that would utilize the best of both applications is to use the TCW to output to a file the sequences from the differentially expressed annotated transcripts, and then further analyze the sequences with Blast2GO for pathway, InterPro or other Blast2GO specific features.</p><p>An important set of R statistical packages for transcriptomics relates to normalization and DE analysis. The RobiNA software <xref ref-type="bibr" rid="pone.0069401-Lohse1">[5]</xref> has packaged the edgeR <xref ref-type="bibr" rid="pone.0069401-Robinson1">[6]</xref>, DESeq <xref ref-type="bibr" rid="pone.0069401-Anders1">[7]</xref>, and EDASeq <xref ref-type="bibr" rid="pone.0069401-Risso1">[8]</xref> commands into a Java program, along with executing Bowtie <xref ref-type="bibr" rid="pone.0069401-Langmead1">[9]</xref> to align the short reads, but does not provide other features of the TCW. The TCW starts processing after the alignment but before normalization and DE analysis. It has packaged the edgeR, DESeq, EDASeq, and DEGseq <xref ref-type="bibr" rid="pone.0069401-Wang1">[10]</xref> commands along with the GOseq <xref ref-type="bibr" rid="pone.0069401-Young1">[11]</xref> commands for GO differential expression analysis.</p><p>There are a number of programs for the computation of orthologs (e.g. orthoMCL <xref ref-type="bibr" rid="pone.0069401-Li1">[12]</xref> and InParanoid <xref ref-type="bibr" rid="pone.0069401-Ostlund1">[13]</xref>), but they do not have a desktop interactive display. The one exception is OrthoInspector <xref ref-type="bibr" rid="pone.0069401-Linard1">[14]</xref>, which is a Java package with both a novel algorithm and graphics. In contrast, the TCW does not have its own clustering algorithm except for a simple transitive closure based on BLAST e-values, which provides a way to view the most similar sequences regardless of inparalogs, outparalogs or orthologs. The aim of TCW is more general purpose, as it takes as input any type of clusters (homologous, co-expression, etc.) for combined query and display. OrthoMCL is one of the most widely used ortholog clustering programs, which works for multiple species input. However, it does not provide a way to view the results and assumes knowledge of the Unix command-line environment as it has many steps to perform. Therefore, the TCW has packaged this program for orthologous clustering to make it easier for the user to compute and display orthoMCL clusters.</p><p>The TCW provides query and display of clusters, but not the highly graphical displays of CytoScape and its plugins. It provides query and display of read counts (raw or RPKM) along with DE values, but it does not provide the extensive analysis and display of programs such as MeV <xref ref-type="bibr" rid="pone.0069401-Howe1">[15]</xref>. Instead, the TCW provides various forms of output that can be used as input into these Java desktop programs in order that a biology laboratory can create an &#x0201c;environment&#x0201d; of interactive graphical software to rigorously explore their data and results.</p><p>In genomics, there is a range of software for web-based computing where some sites provide full service (i.e. hardware, software, storage, backups), such as Galaxy <xref ref-type="bibr" rid="pone.0069401-Giardine1">[16]</xref> and iPlant <xref ref-type="bibr" rid="pone.0069401-Goff1">[17]</xref>, or just the hardware and software such as ArrayExpressHTS <xref ref-type="bibr" rid="pone.0069401-Goncalves1">[18]</xref> and MyRNA <xref ref-type="bibr" rid="pone.0069401-Langmead2">[19]</xref>. This is part of the wider trend towards &#x02018;cloud computing&#x02019; or &#x02018;software as a service&#x02019;. The advantages of web-based computing are that the lab does not need to purchase a high-end machine, install software, or (in some cases) provide backups and storage. The advantages of local computing on a high-end machine (preferably that belongs to the project) are that all data is in one place, the lab can more easily collaborate with computational scientists to experiment with new software approaches, and interactive local programs (e.g. written in Java) can be much faster for exploring the data. Local computation also reduces privacy concerns and complications related to data transfer, task-sharing, and detection and re-running of failed processes; moreover, with the steadily-falling price of standalone hardware, the cost is not necessarily higher than a cloud solution. As further discussed in the Discussion, we contend that genomics needs a mix of cloud based and local computing for years to come to give biologists maximal flexibility for exploratory research.</p><p>Much of the TCW software has grown out of years of collaborating with biologists on transcriptome analysis, where the original program was referred to as PAVE (Program for Assembling and Viewing ESTS) <xref ref-type="bibr" rid="pone.0069401-Soderlund1">[20]</xref>. Due to its evolution to next-gen sequencing support and comparative analysis, the name was changed to Transcriptome Computational Workbench. This upgraded software was developed for a plant-based project (<ext-link ext-link-type="uri" xlink:href="http://www.plantrhizome.org">www.plantrhizome.org</ext-link>), which is sequencing the transcriptomes of rhizomes and other tissues from over a dozen plants to determine what genes distinguish the rhizome from other tissues. None of these plants have sequenced genomes, and only a few have closely related sequenced genomes. Due to the amount of data being generated, it was important to develop a methodical and easy system to use, hence, the TCW. Results are published elsewhere (e.g. He et al. <xref ref-type="bibr" rid="pone.0069401-He1">[21]</xref>), but timing results will be included here from the rhizome project.</p></sec><sec sec-type="methods" id="s2"><title>Methods</title><p>TCW is composed of five graphical interfaces: runSingleTCW for building the singleTCW database, runDE for adding DE results to the database, viewSingleTCW for query and display of the results, runMultiTCW for building a comparison database, and viewMultiTCW for query and display of the results.</p><sec id="s2a"><title>Build Single TCW Database (runSingleTCW)</title><sec id="s2a1"><title>Input</title><p>The only required input is one or more FASTA files of sequences. This program works for any of the following scenarios: (1) assemble Sanger and/or 454 reads, which generates consensus sequences and read counts; (2) import transcripts (e.g. assembled Illumina consensus sequences or gene models) with read counts, which may have replicas for DE analysis; (3) assemble multiple transcript libraries, maintaining the read counts; (4) assemble Sanger and/or 454 reads with transcripts, maintaining the transcript read counts and computing the Sanger and/or 454 read counts; and (5) import protein sequences with abundances from proteomic experiments. We have used the TCW for all five of these scenarios. The manager provides the following steps (see <xref ref-type="fig" rid="pone-0069401-g001">Figure 1</xref>):</p><fig id="pone-0069401-g001" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0069401.g001</object-id><label>Figure 1</label><caption><title>The runSingleTCW interface.</title><p>This shows the configuration for building the red rice singleTCW database. The &#x0201c;Add&#x0201d; button in the LOAD LIBRARIES section opens a window (not shown) for defining the location of the sequence file and read count files; when the window is closed, information about the read count files is automatically entered into the &#x0201c;Transcript Read Count Libraries&#x0201d; table. The &#x0201c;Define Replicas&#x0201d; button opens a window to allow the user to define the replicas, which results in an updated &#x0201c;Transcript Read Count Libraries&#x0201d; table. In this case, there were 6 tissues types where the first 4 have 5 replicas each. As there was just one pre-assembled transcript data set, it was instantiated without assembly. The 13 annotation databases along with the GO database were identified in the third step.</p></caption><graphic xlink:href="pone.0069401.g001"/></fig></sec><sec id="s2a2"><title>Step 1. Load libraries</title><p>The user defines one or more read or transcript files, with optional quality files. For transcripts, they may also define the read count files (multiple files or one delimited file). Replicas (if any) are grouped per library, with values summed for display and used separately for DE analysis. The user defines a short column heading for each library to be used in viewSingleTCW. The user also enters the metadata title, species, cultivar, strain, tissue, treatment, sequencing lab, and year to be displayed on the viewSingleTCW overview page.</p></sec><sec id="s2a3"><title>Step 2. Assemble or instantiate</title><p>As detailed in Soderlund et al. <xref ref-type="bibr" rid="pone.0069401-Soderlund1">[20]</xref>, the assembly algorithm performs multiple iterations of self-blast and assembly using CAP3 <xref ref-type="bibr" rid="pone.0069401-Huang1">[22]</xref>. It was initially developed for Sanger sequences, where mate pairs are retained in the same contigs. It was then extended for 454 reads, which tend to have a higher abundance of reads compared to Sanger, so the algorithm removes reads contained in another from assembly, and after assembly, they are added back into contigs as &#x02018;buried&#x02019; reads. Since the original publication, the code has been ported from Perl to Java, plus the following three features have been added. First, SNPs are computed using a binomial p-value based on the number of confirming reads, the depth of the contig at that base, and the estimated base call error rate. Second, the code was extended for already-assembled reads (e.g. Illumina) by allowing transcripts with their optional read counts to be instantiated (i.e. no assembly is performed) or an assembly may be performed while maintaining input read counts. Third, normalization and differential expression statistics are computed, as discussed below.</p></sec><sec id="s2a4"><title>Step 3. Annotation</title><p>The user can define one or more protein or nucleotide databases to blast against, and attach a &#x02018;taxonomy&#x02019; identifier to each to be used as a short tag for query on a specific database in viewSingleTCW. If the UniProt <xref ref-type="bibr" rid="pone.0069401-Dimmer1">[23]</xref> taxonomic databases are used, each entry is given a tag to identify the taxonomy (i.e. plant, invertebrate, etc.) and whether is it SwissProt or TrEMBL. Additionally, the GO terms, KEGG <xref ref-type="bibr" rid="pone.0069401-Tanabe1">[24]</xref>, EC <xref ref-type="bibr" rid="pone.0069401-Bairoch1">[25]</xref>, and Pfam <xref ref-type="bibr" rid="pone.0069401-Punta1">[26]</xref> identifiers are extracted from the UniProt &#x02018;.dat&#x02019; files and added to the TCW database for query and display. The GO analysis uses the GO tree downloaded from <ext-link ext-link-type="uri" xlink:href="http://www.geneontology.org">www.geneontology.org</ext-link> to extract the levels and descriptions.</p><p>During annotation, the GC content and ORFs are computed. The user also has the option to have a self-blast of the sequences run and all similar pairs identified, i.e. this is a good way to estimate how stringent the assembly was.</p></sec></sec><sec id="s2b"><title>Normalization and Differential Expression Results (runDE)</title><p>Step 2 above automatically computes RPKM (Reads Per Kilobase of transcript per Million mapped reads) normalization on the raw values. As Mortazavi et al. <xref ref-type="bibr" rid="pone.0069401-Mortazavi1">[27]</xref> observed, two transcripts may have the same actual expression level but the longer transcript will have more reads than the shorter one, falsely giving it a higher apparent expression level; therefore, the length must be taken into account. Step 2 also computes the Poisson-based R statistic <xref ref-type="bibr" rid="pone.0069401-Stekel1">[28]</xref>, which was designed for Sanger EST data and takes into account library size and frequency of the read count in all libraries. Though this should not replace use of a more rigorous statistic (e.g. as provided by the DE R packages), it has the virtues of being computationally inexpensive and testing a whole group at once, rather than performing pairwise comparisons.</p><p>With the advent of next-gen sequencing, a number of normalization and DE analysis programs have been written in R to take into account the unique attributes of RNAseq data. The EDASeq package performs (among other functions) normalization that takes into account GC-content biases because GC-rich and GC-poor reads tend to be under-represented, and GC-content effects tend to be lane-specific <xref ref-type="bibr" rid="pone.0069401-Risso1">[8]</xref>. The edgeR method uses variability between biological replicas to compute the dispersion parameter for a negative-binomial model, which improves the reliability of the differential expression statistic between two libraries; though edgeR can be used without replicas, they strongly suggest having biological replicas <xref ref-type="bibr" rid="pone.0069401-Robinson1">[6]</xref>. DEGseq provides several different methods, of which three are implemented in TCW: Fisher&#x02019;s exact test, likelihood ratio test, and an MA-plot-based method <xref ref-type="bibr" rid="pone.0069401-Wang1">[10]</xref>. DESeq <xref ref-type="bibr" rid="pone.0069401-Anders1">[7]</xref> also uses the biological replicas to compute the dispersion <xref ref-type="bibr" rid="pone.0069401-Hardcastle1">[29]</xref>. GOseq <xref ref-type="bibr" rid="pone.0069401-Young1">[11]</xref> computes DE p-values for GO terms based on enrichment of underlying DE transcripts. There are other R packages for DE analysis (e.g. BaySeq <xref ref-type="bibr" rid="pone.0069401-Hardcastle1">[29]</xref>), which are not included within the TCW but we would add upon request, or could be added to the downloadable code.</p><p>To run any of these computations requires some knowledge of R and often requires many commands to be performed. To simplify this analysis for the user, the commands are bundled within runSingleTCW. The user can request default or the EDAseq normalization (see <xref ref-type="fig" rid="pone-0069401-g002">Figure 2</xref>), i.e. all three packages have default normalization or can take as input normalized values. Some of these programs provide useful graphing and exploratory functions, therefore, the execution finishes with the R session active at the terminal along with the commands to generate selected graphs, e.g. edgeR provides a scatter plot which can be viewed with &#x0201c;plotBCV(d)&#x0201d;. Columns can be added and removed with results from the different analyses so the user can visually evaluate the results in viewSingleTCW.</p><fig id="pone-0069401-g002" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0069401.g002</object-id><label>Figure 2</label><caption><title>The runDE interface.</title><p>This shows the setup to compute the differential expression (DE) between tip and root using the edgeR method with default normalization. The results will be written into a database column called &#x0201c;TiRo&#x0201d;. Once all DE values are computed, the &#x0201c;All Pval Columns&#x0201d; can be selected followed by &#x0201c;Execute GOSeq&#x0201d; to compute the corresponding GO differential expression p-values.</p></caption><graphic xlink:href="pone.0069401.g002"/></fig><p>Though the user can select multiple libraries for each of the two groups, the code treats all the sequences in each group as replicas, hence we recommend that the user perform all pairwise comparisons of interest, and then use viewSingleTCW to search for all or any of the p-values that pass the user-supplied cutoff. For example, with the rhizome data, to ask what transcripts are differentially expressed in rhizome tips compared to stem and root, p-values are computed for each pair (tip-root and tip-stem), then the query requests all transcripts that have a p-values less than a user-supplied value for both columns of p-values (results in <xref ref-type="fig" rid="pone-0069401-g003">Figure 3</xref>).</p><fig id="pone-0069401-g003" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0069401.g003</object-id><label>Figure 3</label><caption><title>The viewSingleTCW interface.</title><p>This shows the main table, where the filter was set to show all sequences where tip is differentially expressed compared to root and stem using a 1E-10 cutoff. The columns are: Root, Stem and Tip are the RPKM values; TiRo and TiSt are DE p-values between tip-root and tip-stem, respectively; BestAnno (AN) is the best annotation for the sequence (i.e. not containing phrases such as &#x0201c;uncharacterized protein&#x0201d;); and the last four columns are the BestAnno description, BLAST e-value, the DB type (&#x02018;tr&#x02019;&#x0200a;=&#x0200a;TrEMBL, &#x02018;sp&#x02019;&#x0200a;=&#x0200a;Swiss-Prot, &#x02018;TF&#x02019;&#x0200a;=&#x0200a;plantTFDB), and the taxonomic type (all these best hits are from plants).</p></caption><graphic xlink:href="pone.0069401.g003"/></fig></sec><sec id="s2c"><title>Single TCW Query and Display (viewSingleTCW)</title><p>As shown in <xref ref-type="fig" rid="pone-0069401-g003">Figure 3</xref>, the graphical interface is similar to the BioMart <xref ref-type="bibr" rid="pone.0069401-Smedley1">[30]</xref> approach, where the user selects the columns (attributes) to view and the filters for searches, where the salient filters are on RPKM values, DE p-values, fold changes, ORFs, and attributes of the sequences such as length. The search results in a table of sequence identifiers and associated information, where the table is &#x0201c;full-featured&#x0201d;, i.e. columns can be moved and multiple columns sorted.</p><p>A row in the query result table can be selected to view details of a sequence, e.g. alignment of reads to the consensus (assembled only), alignment of hits from the annotation databases, listing of hits, the GO tree of the hits, and other information about the sequence such as ORF and GC content. The alignment of the annotation hits to the sequences uses dynamic programming, and allows the user to see exactly how the hits aligned. The sequence can automatically be sent to the UniProt website to be aligned to all current sequences in that database.</p><p>A Basic DB hit query allows search by hit identifier, hit description, or attributes; the results are shown in a table of hit identifiers (i.e. UniProt IDs), with the number of sequences that contained the hit along with the associated UniProt information. The user can drill down by selecting a row and view all the associated sequences. A Basic GO query is very similar; filters include GO number and description keywords, along with DE p-values from GOseq, and the &#x0201c;level:&#x0201d; of the GO (an approximate concept as the GO is not structured as a tree <xref ref-type="bibr" rid="pone.0069401-Rhee1">[31]</xref>).</p></sec><sec id="s2d"><title>Build multiTCW Database (runMultiTCW)</title><sec id="s2d1"><title>Input</title><p>One or more databases built with singleTCW. As shown in <xref ref-type="fig" rid="pone-0069401-g004">Figure 4</xref>, there are three steps to building a multiTCW database:</p><fig id="pone-0069401-g004" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0069401.g004</object-id><label>Figure 4</label><caption><title>The runMultiTCW interface.</title><p>This shows the configuration for building a comparison multiTCW database of 4 rhizome singleTCW databases. Three cluster methods were performed: orthoMCL with inflation 1.5, orthoMCL with inflation 4, and transitive with 80% similarity and 80% overlap. The italicized methods indicate they have been added to the database; new clusters can be added and will not be italicized until processed.</p></caption><graphic xlink:href="pone.0069401.g004"/></fig></sec><sec id="s2d2"><title>1. Import and extract coding sequence</title><p>The user selects one or more singleTCW databases. For each database, the user selects the SMAT file for ESTscan <xref ref-type="bibr" rid="pone.0069401-Iseli1">[32]</xref> to apply to the sequences (the SMAT file is created from related gene Genbank files using an ESTscan supplied script). ESTscan is executed on all sequences and the resulting proteins loaded into the database. If the singleTCW contains protein sequences, then ESTscan is not run. All annotation hits from the singleTCWs are added to the multiTCW database.</p></sec><sec id="s2d3"><title>2. Run BLAST and filter</title><p>The user can supply a blast file of the self-blast of the combined FASTA file produced by step 1, or they can request that the TCW execute the blast. As some of the sequences from a given database can be almost identical (depending on the approach used to create the sequences), the user has the option of removing very similar sequences (based on user supplied parameters of overlap and similarity).</p></sec><sec id="s2d4"><title>3. Clustering</title><p>The user can select one or more clusterings to be performed. For example, they can request orthoMCL with inflation&#x0200a;=&#x0200a;4, orthoMCL with inflation&#x0200a;=&#x0200a;1.5, transitive closure with overlap cutoff&#x0200a;=&#x0200a;80% and similarity&#x0200a;=&#x0200a;80%, and upload a file of clusters generated by some other method. This would result in four cluster sets in the database. The annotation that hits the most sequences in a given cluster is assigned to it. Clusters may be removed or added at any time.</p></sec></sec><sec id="s2e"><title>Multi TCW Query and Display (viewMultiTCW)</title><p>The filters allow the user to select a cluster set to view (e.g. orthoMCL with inflation 4), select clusters that have a specific species composition (e.g. only clusters with red rice and horsetail sequences), or select based on RPKM composition. Selecting a cluster results in a full-featured table of the sequences contained in the cluster, as shown in <xref ref-type="fig" rid="pone-0069401-g005">Figure 5</xref>. The sequences can be aligned with MUSCLE <xref ref-type="bibr" rid="pone.0069401-Edgar1">[33]</xref> or the sequences can be pairwise aligned. In both cases, the alignments can be viewed in graphical or sequence detail. A sequence can be selected to view more detail, e.g. all of its annotation hits. The columns of the sequence and cluster tables work differently from singleTCW, as they can be interactively added and removed from the table without a new query of the database.</p><fig id="pone-0069401-g005" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0069401.g005</object-id><label>Figure 5</label><caption><title>The viewMultiTCW interface.</title><p>This shows the table of orthoMCL inflation 4.0 clusters where there is at least one sequence from each species. The H-ID and H-Desc columns are the annotation hit that the majority of the sequences have, e.g. for cluster OM4_0001010, 100% have the hit PXM16_ARATH where the best of them has an e-value of 0.0. The columns can be changed by selecting the &#x0201c;Select Columns&#x0201d; at the bottom, which will immediately change the table (i.e. a new search of the database is not required).</p></caption><graphic xlink:href="pone.0069401.g005"/></fig></sec><sec id="s2f"><title>The TCW Package</title><p>A major objective of the TCW is ease of use, starting with installation. Towards this end, everything is kept as simple as possible so that the biologist can download the package and immediately try it on the demo.</p><sec id="s2f1"><title>Platform</title><p>The TCW uses the common platforms of Java and MySQL. There are two Perl scripts, one to download all desired UniProt taxonomic databases and extract the sequences and the second to download the GO tree and merge UniProt information with it.</p></sec><sec id="s2f2"><title>External software packages</title><p>TCW uses the external programs Blast, CAP3, MUSCLE, ESTscan and orthoMCL; all external software packages except BLAST are included in the package (TCW can use the old BLAST or new BLAST+). In case of version updates, as long as there is not a format change, the user can easily replace external binaries. For ESTscan, the user needs to make a SMAT matrix from similar sequences (instructions are provided); all other steps are run by runMultiTCW. The orthoMCL package has many steps to perform including one that creates and uses a MySQL database; all steps are performed by runMultiTCW using the user-supplied value for the inflation parameter. The only drawback of including external programs in the TCW packages is that users may neglect to include their respective references in publications that use software within the TCW, hence, the TCW user agreement requires referencing TCW plus all other programs used for the analysis that are contained in the package.</p></sec><sec id="s2f3"><title>R packages</title><p>These cannot be easily included in the package, but can all be easily installed with Bioconductor <xref ref-type="bibr" rid="pone.0069401-Gentleman1">[34]</xref>. The TCW package provides instructions to step the user through the installation, which is only necessary if the user desires the DE calculations.</p></sec><sec id="s2f4"><title>Command line</title><p>RunSingleTCW writes a configuration file that is used by the loader, assembler, and annotator executables. These programs can be run from the command line once the configuration file is created.</p></sec><sec id="s2f5"><title>Demo and Help</title><p>Three single demos are available, as follows: one with Sanger ESTs plus Illlumina transcripts to assemble, one with transcripts and three libraries with three replica biological samples, and one with transcripts and two libraries with no replicas. These three databases can then be used to create a multiTCW database. All necessary files are contained in the package (e.g. the subset of the UniProt files for annotation) with the exception of those needed for DE and GO analysis, where the R packages would need to be installed and the GO tree downloaded, respectively. All interfaces have a &#x0201c;help&#x0201d; button to provide information about the interface. There is also a tour of the interfaces at <ext-link ext-link-type="uri" xlink:href="http://www.agcol.arizona.edu/software/tcw/tour">http://www.agcol.arizona.edu/software/tcw/tour</ext-link>.</p></sec><sec id="s2f6"><title>Interaction with other programs</title><p>ViewSingleTCW outputs multiple types of files from the table of query results: (1) all columns from the table as a CSV file, (2) the sequences from the table as a FASTA file (e.g. used as input to Blast2GO), and (3) the Pearson Correlation Coefficient will be computed for co-expression analysis using the RPKM columns (optionally log2 of the RPKM) in the table. ViewMultiTCW will export the contents of any table.</p><p>As a general way to add information into the singleTCW database, the user can simply import a file of &#x02018;seqID &#x0003c;remark&#x0003e;&#x02019; rows, which can be viewed and searched on in the &#x02018;Remark&#x02019; column.</p></sec></sec></sec><sec id="s3"><title>Results</title><p>Results for the assembler are provided in Soderlund et al. <xref ref-type="bibr" rid="pone.0069401-Soderlund1">[20]</xref>. Results are provided here using a dataset from the rhizome project (He et al. submitted) on timing and memory, as detailed in <xref ref-type="table" rid="pone-0069401-t001">Table 1</xref>. The dataset used is from red rice (<italic>Oryza longistaminata</italic>) with 143,625 contigs and read count files for two paired end libraries plus 4 single-end libraries with 5 replicas each (22 total). The transcripts are annotated against the following 13 databases: plantTFDB <xref ref-type="bibr" rid="pone.0069401-Zhang1">[35]</xref>, 5 taxonomic SwissProt and TrEMBL databases, and a SwissProt and TrEMBL subset of the entire UniProt (i.e. minus the 5 taxonomic and bacteria databases). The overall time required to perform the blasts of these 13 databases was a little over 6 days. Loading them into the TCW database along with the GC/ORF analysis and adding GO annotation took &#x0223c;14.5 hours.</p><table-wrap id="pone-0069401-t001" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0069401.t001</object-id><label>Table 1</label><caption><title>Timing results for building a singleTCW database.</title></caption><alternatives><graphic id="pone-0069401-t001-1" xlink:href="pone.0069401.t001"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup><thead><tr><td align="left" rowspan="1" colspan="1">SingleTCW</td><td align="left" rowspan="1" colspan="1">Time</td><td align="left" rowspan="1" colspan="1">Remarks</td></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Load transcripts</td><td align="left" rowspan="1" colspan="1">12 m</td><td align="left" rowspan="1" colspan="1">143,625 transcripts plus 10 read count files</td></tr><tr><td align="left" rowspan="1" colspan="1">Instantiate transcripts</td><td align="left" rowspan="1" colspan="1">5 m</td><td align="left" rowspan="1" colspan="1">No assembly</td></tr><tr><td align="left" rowspan="1" colspan="1">Blast</td><td align="left" rowspan="1" colspan="1">6 d:5 h:00 m</td><td align="left" rowspan="1" colspan="1">13 databases<xref ref-type="table-fn" rid="nt101">1</xref> using 24 CPUs</td></tr><tr><td align="left" rowspan="1" colspan="1">Add hits and descriptions</td><td align="left" rowspan="1" colspan="1">13 h:50 m</td><td align="left" rowspan="1" colspan="1">Add 2M hits, 0.8M unique</td></tr><tr><td align="left" rowspan="1" colspan="1">Add GO terms</td><td align="left" rowspan="1" colspan="1">43 m</td><td align="left" rowspan="1" colspan="1">Add 4.7 k transcript GOs, 17 k unique GOs</td></tr><tr><td align="left" rowspan="1" colspan="1">DE with edgeR+FDR</td><td align="left" rowspan="1" colspan="1">9 m</td><td align="left" rowspan="1" colspan="1">One pairwise computation</td></tr><tr><td align="left" rowspan="1" colspan="1"><bold>Total</bold></td><td align="left" rowspan="1" colspan="1">6 d:20 h:00 m</td><td align="left" rowspan="1" colspan="1">MySQL database 2.4G</td></tr></tbody></table></alternatives><table-wrap-foot><fn id="nt101"><label>1</label><p>The plantTFDB database, the SwissProt and TrEMBL taxonomic databases for plants, invertebrates, fungi, viruses, vertebrate and a subset of the complete UniProt (i.e. minus the sequences from the bacteria and these 5 taxonomic databases). This is based on the April 2012 UniProt, where this set of databases (plus bacteria) take about 45G disk space.</p></fn></table-wrap-foot></table-wrap><p><xref ref-type="table" rid="pone-0069401-t002">Table 2</xref> shows the time for building a multi-species database from four rhizome species with the same libraries, and all have approximately the same number of sequences except for one that has a genome sequence, in which case, the gene models were used. The overall time was 7 hours, where the majority of that time was for the self-blast (on 24 CPUs).</p><table-wrap id="pone-0069401-t002" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0069401.t002</object-id><label>Table 2</label><caption><title>Timing results for building a multiTCW database from 4 singleTCW databases.</title></caption><alternatives><graphic id="pone-0069401-t002-2" xlink:href="pone.0069401.t002"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup><thead><tr><td align="left" rowspan="1" colspan="1">MultiTCW</td><td align="left" rowspan="1" colspan="1">Time</td><td align="left" rowspan="1" colspan="1">Remarks</td></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Load 4 databases</td><td align="left" rowspan="1" colspan="1">33 m</td><td align="left" rowspan="1" colspan="1">431,888 transcripts</td></tr><tr><td align="left" rowspan="1" colspan="1">ESTscan<xref ref-type="table-fn" rid="nt102">1</xref></td><td align="left" rowspan="1" colspan="1">8 m</td><td align="left" rowspan="1" colspan="1">170,311 protein<xref ref-type="table-fn" rid="nt102">1</xref></td></tr><tr><td align="left" rowspan="1" colspan="1">Run selfblast</td><td align="left" rowspan="1" colspan="1">5 h:40 m</td><td align="left" rowspan="1" colspan="1">Using 24 CPUs</td></tr><tr><td align="left" rowspan="1" colspan="1">Run orthoMCL</td><td align="left" rowspan="1" colspan="1">18 m</td><td align="left" rowspan="1" colspan="1">18,184 clusters</td></tr><tr><td align="left" rowspan="1" colspan="1">Run transitive closure</td><td align="left" rowspan="1" colspan="1">1 m</td><td align="left" rowspan="1" colspan="1">7,767 clusters</td></tr><tr><td align="left" rowspan="1" colspan="1"><bold>Total</bold></td><td align="left" rowspan="1" colspan="1">7 h:03 m</td><td align="left" rowspan="1" colspan="1">MySQL database 1.6G</td></tr></tbody></table></alternatives><table-wrap-foot><fn id="nt102"><label>1</label><p>ESTscan does not produce protein sequences for all transcripts.</p></fn></table-wrap-foot></table-wrap></sec><sec id="s4"><title>Discussion</title><p>TCW uses MySQL as its database for a number of reasons. First, it is a common database and a biology laboratory is likely to already have it, which keeps installation simple. Second, orthoMCL uses MySQL, and the GO database is also available as MySQL tables, so there is no need for multiple database platforms. Third, TCW is meant for use by a single project and MySQL can easily handle the amount of data for a single laboratory analysis, i.e. it does not need to scale to sizes envisioned for data centers (e.g. iPlant). For example, a TCW project the size of red rice completely annotated (see <xref ref-type="table" rid="pone-0069401-t001">Table 1</xref>) takes about 2.4G, which is just 0.24% of a terabyte hard drive.</p><p>The TCW uses common file formats to keep it simple, plus there is no need for more complicated file formats. Though an objective of the TCW is to reduce the use of spreadsheets, they will continue to be of value. For example, the biologist can export the contents of a table in delimited format, where Excel or a similar program can be used to produce graphs for publication. A second output is the FASTA file, where a filtered set of sequences can be used for analysis in a different program. The third output is the correlation coefficients of the DE values for use in pathway programs. These three file formats support analysis commonly used by individual laboratories.</p><p>De novo transcriptome assembly is much more compute-intensive than genome-assisted assembly. In both cases, blasting the transcripts against known protein or nucleotide databases is generally also compute intensive. To de novo assemble and map a project the size of red rice (4133M paired ends for assembly) took the following times (personal communications, Min-Jeong Kim, Gang laboratory): &#x0223c;24 h for sequence cleaning with CLC Workbench (<ext-link ext-link-type="uri" xlink:href="http://www.clcbio.com">www.clcbio.com</ext-link>), 12&#x02013;24 h for the first round assembly with CLC, &#x0223c;1 h for polyA trimming with EMBOSS TrimEST <xref ref-type="bibr" rid="pone.0069401-Sarachu1">[36]</xref>, 12&#x02013;48 h for GapClosing, &#x0223c;24 h for the second round of assembly with iAssembler <xref ref-type="bibr" rid="pone.0069401-Zheng1">[37]</xref>, and 1&#x02013;2 h for mapping a single library. Therefore, it took &#x0223c;6 days on modest size computers (12-CPU, 32G Ram, 1.5TB HDD Windows machine for CLC and an 8-CPU, 24G Ram, 2TB HDD Linux machine for all other steps). As shown in <xref ref-type="table" rid="pone-0069401-t001">Table 1</xref>, the annotation blasts took about 7 days on a 24CPU processor (only the blast is parallelized). If a lab has a multi-processor computer, a project the size of red rice can be processed in about 13 days (albeit, UniProt has grown since the Apr-2012 release), and then the team members can use the computer for querying the results. Conversely, the availability of cloud computing will increase, and assembly and blasts are great applications for such computing, where the results can be used as input into TCW.</p><p>An important aspect of using a program such as TCW, which could reside on the project machine, is to encourage biologists to have a central location for all files and results. This is in contrast to various members of the team having files on their personal computers, which can cause loss of data. The project machine can contain all of the downloadable programs that the members need, e.g. TCW, MeV, CytoScape, Blast2GO. Since many bioinformatics tools run most conveniently on Linux, it is helpful if the team members know basic Unix commands, but these really are simple and can be learned in an hour or two. Users can log in directly from MACs, or from PCs using approaches such as VNC (Virtual Network Computing, <ext-link ext-link-type="uri" xlink:href="http://www.realvnc.com">www.realvnc.com</ext-link>). Using this approach, the team members have a shared environment with highly interactive graphics, providing a methodical approach for analysis.</p><p>As a final word, in the past, many software programs required a high level of computer expertise to run along with the need to read pages of documentation to figure out what to do. The next-gen software programs provide, in general, easy one-step download and execution. For example, MAUVE <xref ref-type="bibr" rid="pone.0069401-Darling1">[38]</xref>, SyMAP <xref ref-type="bibr" rid="pone.0069401-Soderlund2">[39]</xref>, MeV, CytoScape, and TCW are easy to install Java programs, and Blast2GO and BioLayout <xref ref-type="bibr" rid="pone.0069401-Theocharidis1">[40]</xref> are webstart Java programs. All of these programs have interactive graphics for analysis and for viewing the results. It would provide a powerful dynamic approach for large-scale data and analysis of the 21<sup>st</sup> century to have this highly interactive environment working for laboratory projects, along with cloud computing for the large-scale processing and on-line databases to extract information.</p></sec></body><back><ack><p>We would like to acknowledge Min-Jeong Kim and Ruifeng He for creating the red rice dataset, Tonja Wilkins Fisher and Meenal Vyas for their feedback on the TCW, and Lomax Boyd for providing our system support.</p></ack><ref-list><title>References</title><ref id="pone.0069401-TheGO1"><label>1</label><mixed-citation publication-type="journal"><name><surname>The GO</surname><given-names>Consortium</given-names></name> (<year>2012</year>) <article-title>The Gene Ontology: enhancements for 2011</article-title>. <source>Nucleic Acids Res</source><volume>40</volume>: <fpage>D559</fpage>&#x02013;<lpage>564</lpage><pub-id pub-id-type="pmid">22102568</pub-id></mixed-citation></ref><ref id="pone.0069401-Garber1"><label>2</label><mixed-citation publication-type="journal"><name><surname>Garber</surname><given-names>M</given-names></name>, <name><surname>Grabherr</surname><given-names>MG</given-names></name>, <name><surname>Guttman</surname><given-names>M</given-names></name>, <name><surname>Trapnell</surname><given-names>C</given-names></name> (<year>2011</year>) <article-title>Computational methods for transcriptome annotation and quantification using RNA-seq</article-title>. <source>Nat Methods</source><volume>8</volume>: <fpage>469</fpage>&#x02013;<lpage>477</lpage><pub-id pub-id-type="pmid">21623353</pub-id></mixed-citation></ref><ref id="pone.0069401-Conesa1"><label>3</label><mixed-citation publication-type="journal"><name><surname>Conesa</surname><given-names>A</given-names></name>, <name><surname>Gotz</surname><given-names>S</given-names></name> (<year>2008</year>) <article-title>Blast2GO: A comprehensive suite for functional analysis in plant genomics</article-title>. <source>Int J Plant Genomics</source><volume>2008</volume>: <fpage>619832</fpage><pub-id pub-id-type="pmid">18483572</pub-id></mixed-citation></ref><ref id="pone.0069401-Hunter1"><label>4</label><mixed-citation publication-type="journal"><name><surname>Hunter</surname><given-names>S</given-names></name>, <name><surname>Jones</surname><given-names>P</given-names></name>, <name><surname>Mitchell</surname><given-names>A</given-names></name>, <name><surname>Apweiler</surname><given-names>R</given-names></name>, <name><surname>Attwood</surname><given-names>TK</given-names></name>, <etal>et al</etal> (<year>2012</year>) <article-title>InterPro in 2011: new developments in the family and domain prediction database</article-title>. <source>Nucleic Acids Res</source><volume>40</volume>: <fpage>D306</fpage>&#x02013;<lpage>312</lpage><pub-id pub-id-type="pmid">22096229</pub-id></mixed-citation></ref><ref id="pone.0069401-Lohse1"><label>5</label><mixed-citation publication-type="journal"><name><surname>Lohse</surname><given-names>M</given-names></name>, <name><surname>Bolger</surname><given-names>AM</given-names></name>, <name><surname>Nagel</surname><given-names>A</given-names></name>, <name><surname>Fernie</surname><given-names>AR</given-names></name>, <name><surname>Lunn</surname><given-names>JE</given-names></name>, <etal>et al</etal> (<year>2012</year>) <article-title>RobiNA: a user-friendly, integrated software solution for RNA-Seq-based transcriptomics</article-title>. <source>Nucleic Acids Res</source><volume>40</volume>: <fpage>W622</fpage>&#x02013;<lpage>627</lpage><pub-id pub-id-type="pmid">22684630</pub-id></mixed-citation></ref><ref id="pone.0069401-Robinson1"><label>6</label><mixed-citation publication-type="journal"><name><surname>Robinson</surname><given-names>MD</given-names></name>, <name><surname>McCarthy</surname><given-names>DJ</given-names></name>, <name><surname>Smyth</surname><given-names>GK</given-names></name> (<year>2010</year>) <article-title>edgeR: a Bioconductor package for differential expression analysis of digital gene expression data</article-title>. <source>Bioinformatics</source><volume>26</volume>: <fpage>139</fpage>&#x02013;<lpage>140</lpage><pub-id pub-id-type="pmid">19910308</pub-id></mixed-citation></ref><ref id="pone.0069401-Anders1"><label>7</label><mixed-citation publication-type="journal"><name><surname>Anders</surname><given-names>S</given-names></name>, <name><surname>Huber</surname><given-names>W</given-names></name> (<year>2010</year>) <article-title>Differential expression analysis for sequence count data</article-title>. <source>Genome Biol</source><volume>11</volume>: <fpage>R106</fpage><pub-id pub-id-type="pmid">20979621</pub-id></mixed-citation></ref><ref id="pone.0069401-Risso1"><label>8</label><mixed-citation publication-type="journal"><name><surname>Risso</surname><given-names>D</given-names></name>, <name><surname>Schwartz</surname><given-names>K</given-names></name>, <name><surname>Sherlock</surname><given-names>G</given-names></name>, <name><surname>Dudoit</surname><given-names>S</given-names></name> (<year>2011</year>) <article-title>GC-content normalization for RNA-Seq data</article-title>. <source>BMC Bioinformatics</source><volume>12</volume>: <fpage>480</fpage><pub-id pub-id-type="pmid">22177264</pub-id></mixed-citation></ref><ref id="pone.0069401-Langmead1"><label>9</label><mixed-citation publication-type="journal"><name><surname>Langmead</surname><given-names>B</given-names></name>, <name><surname>Trapnell</surname><given-names>C</given-names></name>, <name><surname>Pop</surname><given-names>M</given-names></name>, <name><surname>Salzberg</surname><given-names>SL</given-names></name> (<year>2009</year>) <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>. <source>Genome Biol</source><volume>10</volume>: <fpage>R25</fpage><pub-id pub-id-type="pmid">19261174</pub-id></mixed-citation></ref><ref id="pone.0069401-Wang1"><label>10</label><mixed-citation publication-type="journal"><name><surname>Wang</surname><given-names>L</given-names></name>, <name><surname>Feng</surname><given-names>Z</given-names></name>, <name><surname>Wang</surname><given-names>X</given-names></name>, <name><surname>Zhang</surname><given-names>X</given-names></name> (<year>2010</year>) <article-title>DEGseq: an R package for identifying differentially expressed genes from RNA-seq data</article-title>. <source>Bioinformatics</source><volume>26</volume>: <fpage>136</fpage>&#x02013;<lpage>138</lpage><pub-id pub-id-type="pmid">19855105</pub-id></mixed-citation></ref><ref id="pone.0069401-Young1"><label>11</label><mixed-citation publication-type="journal"><name><surname>Young</surname><given-names>MD</given-names></name>, <name><surname>Wakefield</surname><given-names>MJ</given-names></name>, <name><surname>Smyth</surname><given-names>GK</given-names></name>, <name><surname>Oshlack</surname><given-names>A</given-names></name> (<year>2010</year>) <article-title>Gene ontology analysis for RNA-seq: accounting for selection bias</article-title>. <source>Genome Biol</source><volume>11</volume>: <fpage>R14</fpage><pub-id pub-id-type="pmid">20132535</pub-id></mixed-citation></ref><ref id="pone.0069401-Li1"><label>12</label><mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>L</given-names></name>, <name><surname>Stoeckert</surname><given-names>CJ</given-names><suffix>Jr</suffix></name>, <name><surname>Roos</surname><given-names>DS</given-names></name> (<year>2003</year>) <article-title>OrthoMCL: identification of ortholog groups for eukaryotic genomes</article-title>. <source>Genome Res</source><volume>13</volume>: <fpage>2178</fpage>&#x02013;<lpage>2189</lpage><pub-id pub-id-type="pmid">12952885</pub-id></mixed-citation></ref><ref id="pone.0069401-Ostlund1"><label>13</label><mixed-citation publication-type="journal"><name><surname>Ostlund</surname><given-names>G</given-names></name>, <name><surname>Schmitt</surname><given-names>T</given-names></name>, <name><surname>Forslund</surname><given-names>K</given-names></name>, <name><surname>Kostler</surname><given-names>T</given-names></name>, <name><surname>Messina</surname><given-names>DN</given-names></name>, <etal>et al</etal> (<year>2010</year>) <article-title>InParanoid 7: new algorithms and tools for eukaryotic orthology analysis</article-title>. <source>Nucleic Acids Res</source><volume>38</volume>: <fpage>D196</fpage>&#x02013;<lpage>203</lpage><pub-id pub-id-type="pmid">19892828</pub-id></mixed-citation></ref><ref id="pone.0069401-Linard1"><label>14</label><mixed-citation publication-type="journal"><name><surname>Linard</surname><given-names>B</given-names></name>, <name><surname>Thompson</surname><given-names>JD</given-names></name>, <name><surname>Poch</surname><given-names>O</given-names></name>, <name><surname>Lecompte</surname><given-names>O</given-names></name> (<year>2011</year>) <article-title>OrthoInspector: comprehensive orthology analysis and visual exploration</article-title>. <source>BMC Bioinformatics</source><volume>12</volume>: <fpage>11</fpage><pub-id pub-id-type="pmid">21219603</pub-id></mixed-citation></ref><ref id="pone.0069401-Howe1"><label>15</label><mixed-citation publication-type="journal"><name><surname>Howe</surname><given-names>EA</given-names></name>, <name><surname>Sinha</surname><given-names>R</given-names></name>, <name><surname>Schlauch</surname><given-names>D</given-names></name>, <name><surname>Quackenbush</surname><given-names>J</given-names></name> (<year>2011</year>) <article-title>RNA-Seq analysis in MeV</article-title>. <source>Bioinformatics</source><volume>27</volume>: <fpage>3209</fpage>&#x02013;<lpage>3210</lpage><pub-id pub-id-type="pmid">21976420</pub-id></mixed-citation></ref><ref id="pone.0069401-Giardine1"><label>16</label><mixed-citation publication-type="journal"><name><surname>Giardine</surname><given-names>B</given-names></name>, <name><surname>Riemer</surname><given-names>C</given-names></name>, <name><surname>Hardison</surname><given-names>RC</given-names></name>, <name><surname>Burhans</surname><given-names>R</given-names></name>, <name><surname>Elnitski</surname><given-names>L</given-names></name>, <etal>et al</etal> (<year>2005</year>) <article-title>Galaxy: a platform for interactive large-scale genome analysis</article-title>. <source>Genome Res</source><volume>15</volume>: <fpage>1451</fpage>&#x02013;<lpage>1455</lpage><pub-id pub-id-type="pmid">16169926</pub-id></mixed-citation></ref><ref id="pone.0069401-Goff1"><label>17</label><mixed-citation publication-type="journal"><name><surname>Goff</surname><given-names>SA</given-names></name>, <name><surname>Vaughn</surname><given-names>M</given-names></name>, <name><surname>McKay</surname><given-names>S</given-names></name>, <name><surname>Lyons</surname><given-names>E</given-names></name>, <name><surname>Stapleton</surname><given-names>AE</given-names></name>, <etal>et al</etal> (<year>2011</year>) <article-title>The iPlant Collaborative: Cyberinfrastructure for Plant Biology</article-title>. <source>Front Plant Sci</source><volume>2</volume>: <fpage>34</fpage><pub-id pub-id-type="pmid">22645531</pub-id></mixed-citation></ref><ref id="pone.0069401-Goncalves1"><label>18</label><mixed-citation publication-type="journal"><name><surname>Goncalves</surname><given-names>A</given-names></name>, <name><surname>Tikhonov</surname><given-names>A</given-names></name>, <name><surname>Brazma</surname><given-names>A</given-names></name>, <name><surname>Kapushesky</surname><given-names>M</given-names></name> (<year>2011</year>) <article-title>A pipeline for RNA-seq data processing and quality assessment</article-title>. <source>Bioinformatics</source><volume>27</volume>: <fpage>867</fpage>&#x02013;<lpage>869</lpage><pub-id pub-id-type="pmid">21233166</pub-id></mixed-citation></ref><ref id="pone.0069401-Langmead2"><label>19</label><mixed-citation publication-type="journal"><name><surname>Langmead</surname><given-names>B</given-names></name>, <name><surname>Hansen</surname><given-names>KD</given-names></name>, <name><surname>Leek</surname><given-names>JT</given-names></name> (<year>2010</year>) <article-title>Cloud-scale RNA-sequencing differential expression analysis with Myrna</article-title>. <source>Genome Biol</source><volume>11</volume>: <fpage>R83</fpage><pub-id pub-id-type="pmid">20701754</pub-id></mixed-citation></ref><ref id="pone.0069401-Soderlund1"><label>20</label><mixed-citation publication-type="journal"><name><surname>Soderlund</surname><given-names>C</given-names></name>, <name><surname>Johnson</surname><given-names>E</given-names></name>, <name><surname>Bomhoff</surname><given-names>M</given-names></name>, <name><surname>Descour</surname><given-names>A</given-names></name> (<year>2009</year>) <article-title>PAVE: program for assembling and viewing ESTs</article-title>. <source>BMC Genomics</source><volume>10</volume>: <fpage>400</fpage><pub-id pub-id-type="pmid">19709403</pub-id></mixed-citation></ref><ref id="pone.0069401-He1"><label>21</label><mixed-citation publication-type="journal"><name><surname>He</surname><given-names>R</given-names></name>, <name><surname>Kim</surname><given-names>MJ</given-names></name>, <name><surname>Nelson</surname><given-names>W</given-names></name>, <name><surname>Balbuena</surname><given-names>TS</given-names></name>, <name><surname>Kim</surname><given-names>R</given-names></name>, <etal>et al</etal> (<year>2012</year>) <article-title>Next-generation sequencing-based transcriptomic and proteomic analysis of the common reed, Phragmites australis (Poaceae), reveals genes involved in invasiveness and rhizome specificity</article-title>. <source>Am J Bot</source><volume>99</volume>: <fpage>232</fpage>&#x02013;<lpage>247</lpage><pub-id pub-id-type="pmid">22301892</pub-id></mixed-citation></ref><ref id="pone.0069401-Huang1"><label>22</label><mixed-citation publication-type="journal"><name><surname>Huang</surname><given-names>X</given-names></name>, <name><surname>Madan</surname><given-names>A</given-names></name> (<year>1999</year>) <article-title>CAP3: A DNA sequence assembly program</article-title>. <source>Genome Res</source><volume>9</volume>: <fpage>868</fpage>&#x02013;<lpage>877</lpage><pub-id pub-id-type="pmid">10508846</pub-id></mixed-citation></ref><ref id="pone.0069401-Dimmer1"><label>23</label><mixed-citation publication-type="journal"><name><surname>Dimmer</surname><given-names>EC</given-names></name>, <name><surname>Huntley</surname><given-names>RP</given-names></name>, <name><surname>Alam-Faruque</surname><given-names>Y</given-names></name>, <name><surname>Sawford</surname><given-names>T</given-names></name>, <name><surname>O&#x02019;Donovan</surname><given-names>C</given-names></name>, <etal>et al</etal> (<year>2012</year>) <article-title>The UniProt-GO Annotation database in 2011</article-title>. <source>Nucleic Acids Res</source><volume>40</volume>: <fpage>D565</fpage>&#x02013;<lpage>570</lpage><pub-id pub-id-type="pmid">22123736</pub-id></mixed-citation></ref><ref id="pone.0069401-Tanabe1"><label>24</label><mixed-citation publication-type="other">Tanabe M, Kanehisa M (2012) Using the KEGG database resource. Curr Protoc Bioinformatics Chapter 1: Unit1 12.</mixed-citation></ref><ref id="pone.0069401-Bairoch1"><label>25</label><mixed-citation publication-type="journal"><name><surname>Bairoch</surname><given-names>A</given-names></name> (<year>2000</year>) <article-title>The ENZYME database in 2000</article-title>. <source>Nucleic Acids Res</source><volume>28</volume>: <fpage>304</fpage>&#x02013;<lpage>305</lpage><pub-id pub-id-type="pmid">10592255</pub-id></mixed-citation></ref><ref id="pone.0069401-Punta1"><label>26</label><mixed-citation publication-type="journal"><name><surname>Punta</surname><given-names>M</given-names></name>, <name><surname>Coggill</surname><given-names>PC</given-names></name>, <name><surname>Eberhardt</surname><given-names>RY</given-names></name>, <name><surname>Mistry</surname><given-names>J</given-names></name>, <name><surname>Tate</surname><given-names>J</given-names></name>, <etal>et al</etal> (<year>2012</year>) <article-title>The Pfam protein families database</article-title>. <source>Nucleic Acids Res</source><volume>40</volume>: <fpage>D290</fpage>&#x02013;<lpage>301</lpage><pub-id pub-id-type="pmid">22127870</pub-id></mixed-citation></ref><ref id="pone.0069401-Mortazavi1"><label>27</label><mixed-citation publication-type="journal"><name><surname>Mortazavi</surname><given-names>A</given-names></name>, <name><surname>Williams</surname><given-names>BA</given-names></name>, <name><surname>McCue</surname><given-names>K</given-names></name>, <name><surname>Schaeffer</surname><given-names>L</given-names></name>, <name><surname>Wold</surname><given-names>B</given-names></name> (<year>2008</year>) <article-title>Mapping and quantifying mammalian transcriptomes by RNA-Seq</article-title>. <source>Nat Methods</source><volume>5</volume>: <fpage>621</fpage>&#x02013;<lpage>628</lpage><pub-id pub-id-type="pmid">18516045</pub-id></mixed-citation></ref><ref id="pone.0069401-Stekel1"><label>28</label><mixed-citation publication-type="journal"><name><surname>Stekel</surname><given-names>DJ</given-names></name>, <name><surname>Git</surname><given-names>Y</given-names></name>, <name><surname>Falciani</surname><given-names>F</given-names></name> (<year>2000</year>) <article-title>The comparison of gene expression from multiple cDNA libraries</article-title>. <source>Genome Res</source><volume>10</volume>: <fpage>2055</fpage>&#x02013;<lpage>2061</lpage><pub-id pub-id-type="pmid">11116099</pub-id></mixed-citation></ref><ref id="pone.0069401-Hardcastle1"><label>29</label><mixed-citation publication-type="journal"><name><surname>Hardcastle</surname><given-names>TJ</given-names></name>, <name><surname>Kelly</surname><given-names>KA</given-names></name> (<year>2010</year>) <article-title>baySeq: empirical Bayesian methods for identifying differential expression in sequence count data</article-title>. <source>BMC Bioinformatics</source><volume>11</volume>: <fpage>422</fpage><pub-id pub-id-type="pmid">20698981</pub-id></mixed-citation></ref><ref id="pone.0069401-Smedley1"><label>30</label><mixed-citation publication-type="journal"><name><surname>Smedley</surname><given-names>D</given-names></name>, <name><surname>Haider</surname><given-names>S</given-names></name>, <name><surname>Ballester</surname><given-names>B</given-names></name>, <name><surname>Holland</surname><given-names>R</given-names></name>, <name><surname>London</surname><given-names>D</given-names></name>, <etal>et al</etal> (<year>2009</year>) <article-title>BioMart&#x02013;biological queries made easy</article-title>. <source>BMC Genomics</source><volume>10</volume>: <fpage>22</fpage><pub-id pub-id-type="pmid">19144180</pub-id></mixed-citation></ref><ref id="pone.0069401-Rhee1"><label>31</label><mixed-citation publication-type="journal"><name><surname>Rhee</surname><given-names>SY</given-names></name>, <name><surname>Wood</surname><given-names>V</given-names></name>, <name><surname>Dolinski</surname><given-names>K</given-names></name>, <name><surname>Draghici</surname><given-names>S</given-names></name> (<year>2008</year>) <article-title>Use and misuse of the gene ontology annotations</article-title>. <source>Nat Rev Genet</source><volume>9</volume>: <fpage>509</fpage>&#x02013;<lpage>515</lpage><pub-id pub-id-type="pmid">18475267</pub-id></mixed-citation></ref><ref id="pone.0069401-Iseli1"><label>32</label><mixed-citation publication-type="other">Iseli C, Jongeneel CV, Bucher P (1999) ESTScan: a program for detecting, evaluating, and reconstructing potential coding regions in EST sequences. Proc Int Conf Intell Syst Mol Biol: 138&#x02013;148.</mixed-citation></ref><ref id="pone.0069401-Edgar1"><label>33</label><mixed-citation publication-type="journal"><name><surname>Edgar</surname><given-names>RC</given-names></name> (<year>2004</year>) <article-title>MUSCLE: multiple sequence alignment with high accuracy and high throughput</article-title>. <source>Nucleic Acids Res</source><volume>32</volume>: <fpage>1792</fpage>&#x02013;<lpage>1797</lpage><pub-id pub-id-type="pmid">15034147</pub-id></mixed-citation></ref><ref id="pone.0069401-Gentleman1"><label>34</label><mixed-citation publication-type="journal"><name><surname>Gentleman</surname><given-names>RC</given-names></name>, <name><surname>Carey</surname><given-names>VJ</given-names></name>, <name><surname>Bates</surname><given-names>DM</given-names></name>, <name><surname>Bolstad</surname><given-names>B</given-names></name>, <name><surname>Dettling</surname><given-names>M</given-names></name>, <etal>et al</etal> (<year>2004</year>) <article-title>Bioconductor: open software development for computational biology and bioinformatics</article-title>. <source>Genome Biol</source><volume>5</volume>: <fpage>R80</fpage><pub-id pub-id-type="pmid">15461798</pub-id></mixed-citation></ref><ref id="pone.0069401-Zhang1"><label>35</label><mixed-citation publication-type="journal"><name><surname>Zhang</surname><given-names>H</given-names></name>, <name><surname>Jin</surname><given-names>J</given-names></name>, <name><surname>Tang</surname><given-names>L</given-names></name>, <name><surname>Zhao</surname><given-names>Y</given-names></name>, <name><surname>Gu</surname><given-names>X</given-names></name>, <etal>et al</etal> (<year>2011</year>) <article-title>PlantTFDB 2.0: update and improvement of the comprehensive plant transcription factor database</article-title>. <source>Nucleic Acids Res</source><volume>39</volume>: <fpage>D1114</fpage>&#x02013;<lpage>1117</lpage><pub-id pub-id-type="pmid">21097470</pub-id></mixed-citation></ref><ref id="pone.0069401-Sarachu1"><label>36</label><mixed-citation publication-type="journal"><name><surname>Sarachu</surname><given-names>M</given-names></name>, <name><surname>Colet</surname><given-names>M</given-names></name> (<year>2005</year>) <article-title>wEMBOSS: a web interface for EMBOSS</article-title>. <source>Bioinformatics</source><volume>21</volume>: <fpage>540</fpage>&#x02013;<lpage>541</lpage><pub-id pub-id-type="pmid">15388516</pub-id></mixed-citation></ref><ref id="pone.0069401-Zheng1"><label>37</label><mixed-citation publication-type="journal"><name><surname>Zheng</surname><given-names>Y</given-names></name>, <name><surname>Zhao</surname><given-names>L</given-names></name>, <name><surname>Gao</surname><given-names>J</given-names></name>, <name><surname>Fei</surname><given-names>Z</given-names></name> (<year>2011</year>) <article-title>iAssembler: a package for de novo assembly of Roche-454/Sanger transcriptome sequences</article-title>. <source>BMC Bioinformatics</source><volume>12</volume>: <fpage>453</fpage><pub-id pub-id-type="pmid">22111509</pub-id></mixed-citation></ref><ref id="pone.0069401-Darling1"><label>38</label><mixed-citation publication-type="journal"><name><surname>Darling</surname><given-names>AC</given-names></name>, <name><surname>Mau</surname><given-names>B</given-names></name>, <name><surname>Blattner</surname><given-names>FR</given-names></name>, <name><surname>Perna</surname><given-names>NT</given-names></name> (<year>2004</year>) <article-title>Mauve: multiple alignment of conserved genomic sequence with rearrangements</article-title>. <source>Genome Res</source><volume>14</volume>: <fpage>1394</fpage>&#x02013;<lpage>1403</lpage><pub-id pub-id-type="pmid">15231754</pub-id></mixed-citation></ref><ref id="pone.0069401-Soderlund2"><label>39</label><mixed-citation publication-type="journal"><name><surname>Soderlund</surname><given-names>C</given-names></name>, <name><surname>Bomhoff</surname><given-names>M</given-names></name>, <name><surname>Nelson</surname><given-names>WM</given-names></name> (<year>2011</year>) <article-title>SyMAP v3.4: a turnkey synteny system with application to plant genomes</article-title>. <source>Nucleic Acids Res</source><volume>39</volume>: <fpage>e68</fpage><pub-id pub-id-type="pmid">21398631</pub-id></mixed-citation></ref><ref id="pone.0069401-Theocharidis1"><label>40</label><mixed-citation publication-type="journal"><name><surname>Theocharidis</surname><given-names>A</given-names></name>, <name><surname>van Dongen</surname><given-names>S</given-names></name>, <name><surname>Enright</surname><given-names>AJ</given-names></name>, <name><surname>Freeman</surname><given-names>TC</given-names></name> (<year>2009</year>) <article-title>Network visualization and analysis of gene expression data using BioLayout Express(3D)</article-title>. <source>Nat Protoc</source><volume>4</volume>: <fpage>1535</fpage>&#x02013;<lpage>1550</lpage><pub-id pub-id-type="pmid">19798086</pub-id></mixed-citation></ref></ref-list></back></article>