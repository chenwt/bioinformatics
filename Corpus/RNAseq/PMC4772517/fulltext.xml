<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName A++V2.4.dtd?><?SourceDTD.Version 2.4?><?ConverterInfo.XSLTName springer2nlmx2.xsl?><?ConverterInfo.Version 2?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id><journal-title-group><journal-title>BMC Bioinformatics</journal-title></journal-title-group><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">4772517</article-id><article-id pub-id-type="publisher-id">967</article-id><article-id pub-id-type="doi">10.1186/s12859-016-0967-z</article-id><article-categories><subj-group subj-group-type="heading"><subject>Software</subject></subj-group></article-categories><title-group><article-title>ADEPT, a dynamic next generation sequencing data error-detection program with trimming</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Feng</surname><given-names>Shihai</given-names></name><address><email>sfeng@lanl.gov</email></address><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author"><name><surname>Lo</surname><given-names>Chien-Chi</given-names></name><address><email>chienchi@lanl.gov</email></address><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author"><name><surname>Li</surname><given-names>Po-E</given-names></name><address><email>po-e@lanl.gov</email></address><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author" corresp="yes"><name><surname>Chain</surname><given-names>Patrick S. G.</given-names></name><address><phone>505-665-4019</phone><email>pchain@lanl.gov</email></address><xref ref-type="aff" rid="Aff1"/></contrib><aff id="Aff1">Genome Science Group, Bioscience Division, Los Alamos National Laboratory, Los Alamos, NM 87545 USA </aff></contrib-group><pub-date pub-type="epub"><day>29</day><month>2</month><year>2016</year></pub-date><pub-date pub-type="pmc-release"><day>29</day><month>2</month><year>2016</year></pub-date><pub-date pub-type="collection"><year>2016</year></pub-date><volume>17</volume><elocation-id>109</elocation-id><history><date date-type="received"><day>10</day><month>2</month><year>2015</year></date><date date-type="accepted"><day>22</day><month>2</month><year>2016</year></date></history><permissions><copyright-statement>&#x000a9; Feng et al. 2016</copyright-statement><license license-type="OpenAccess"><license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p></license></permissions><abstract id="Abs1"><sec><title>Background</title><p>Illumina is the most widely used next generation sequencing technology and produces millions of short reads that contain errors. These sequencing errors constitute a major problem in applications such as <italic>de novo</italic> genome assembly, metagenomics analysis and single nucleotide polymorphism discovery.</p></sec><sec><title>Results</title><p>In this study, we present ADEPT, a dynamic error detection method, based on the quality scores of each nucleotide and its neighboring nucleotides, together with their positions within the read and compares this to the position-specific quality score distribution of all bases within the sequencing run. This method greatly improves upon other available methods in terms of the true positive rate of error discovery without affecting the false positive rate, particularly within the middle of reads.</p></sec><sec><title>Conclusions</title><p>ADEPT is the only tool to date that dynamically assesses errors within reads by comparing position-specific and neighboring base quality scores with the distribution of quality scores for the dataset being analyzed. The result is a method that is less prone to position-dependent under-prediction, which is one of the most prominent issues in error prediction. The outcome is that ADEPT improves upon prior efforts in identifying true errors, primarily within the middle of reads, while reducing the false positive rate.</p></sec><sec><title>Electronic supplementary material</title><p>The online version of this article (doi:10.1186/s12859-016-0967-z) contains supplementary material, which is available to authorized users.</p></sec></abstract><kwd-group xml:lang="en"><title>Keywords</title><kwd>Next generation sequencing</kwd><kwd>Illumina error prediction</kwd><kwd>Local quality scores</kwd><kwd>Position-specific quality</kwd></kwd-group><funding-group><award-group><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000774</institution-id><institution>Defense Threat Reduction Agency</institution></institution-wrap></funding-source><award-id>CB10152</award-id><principal-award-recipient><name><surname>Chain</surname><given-names>Patrick S. G.</given-names></name></principal-award-recipient></award-group></funding-group><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>&#x000a9; The Author(s) 2016</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1" sec-type="introduction"><title>Background</title><p>Error profiles of current high-throughput short read sequencing technologies are different compared with traditional Sanger sequencing [<xref ref-type="bibr" rid="CR1">1</xref>&#x02013;<xref ref-type="bibr" rid="CR3">3</xref>]. Most sequencing technologies come with software that assign quality scores to each nucleotide as a means to estimate the probability of there being an error at that position, and does so by using a measurement (e.g. fluorescence intensity) on the platform. Multiple iterations of calling quality scores has occurred and while the overall quality of a read may be accurate; the scoring systems used fall short when predicting single nucleotide errors. Error detection (and correction) at the single nucleotide may not be a priority for many applications, as high fold coverage over any given nucleotide is generally sufficient to resolve inconsistencies in the data. There are however some applications where error identification may be more essential, such as in the area of metagenomics, where population variation and errors in sequences may be easily confounded.</p><p>Current approaches of error detection/correction of reads can be summarized in two categories. One strategy relies on intrinsic properties of the run and corrects erroneous bases without removing them [<xref ref-type="bibr" rid="CR4">4</xref>&#x02013;<xref ref-type="bibr" rid="CR8">8</xref>]. This approach relies on depth of coverage in order to correct errors, by assuming that sufficient depth of coverage will allow identification of errors within the raw data. In this case, low frequency Kmers, a nucleotide sequence of length K, are subject to correction with abundant Kmers that are identical except for 1 position. This does not require quality scores and is good for isolate/single genomes or any clonal genome that is highly covered. This does not work well for low coverage regions, such as low abundance transcripts in RNAseq or for low abundance organisms within metagenomes and will in effect normalize any natural variations in sequence (such as allelic variation) when sequencing populations of highly similar organisms (genomes).</p><p>The other strategy removes reads or trims nucleotides based on quality scores. This method can be applied to any sequence, regardless of depth of coverage, since the primary input is the quality score and the cutoff for trimming is a user-defined quality threshold. This is performed from one or both ends of each read, and entire reads can be removed. Commonly used programs such as ConDeTri, SolexaQA, and BWA are implemented using this method [<xref ref-type="bibr" rid="CR9">9</xref>&#x02013;<xref ref-type="bibr" rid="CR11">11</xref>].</p><p>In this study, we present A Dynamic Error-detection Program with Trimming (ADEPT), and perform comparisons with these latter tools. ADEPT is an input-specific error detection method that relies on the local quality scores of each nucleotide, as well as its neighboring nucleotides, in comparison with the dataset&#x02019;s average position-specific scores. We developed our error model based on statistical analysis of errors in Illumina reads. Likely errors within reads are predicted by applying this model to the quality score patterns observed within each specific dataset. As a result, the set of criteria for detecting errors are unique to each read position within any given sequencing run. We show that the incorporation of adjacent nucleotides into an error detection model (and not solely relying on individual nucleotide quality score), greatly improves upon prior efforts, particularly in terms of true positives (i.e. error detection), without increasing the false positive rate. The detected errors are changed to N&#x02019;s within the read, and a downstream trimming module which allows for both 5&#x02032; and 3&#x02032; end trimming as well as the optional splitting of reads at N&#x02019;s (thereby removing identified errors from the reads).</p></sec><sec id="Sec2"><title>Implementation</title><sec id="Sec3"><title>Overview</title><p>We used several Illumina datasets with known reference genomes to establish our model for error prediction, which uses the quality scores of not only the position in question, but also its preceding and following two nucleotides. ADEPT first randomly chooses two hundred thousand reads from raw data input files, and the overall statistics are calculated: the average, minimum, maximum and standard deviation of quality scores for each position over the entire length of the reads. These statistics are unique for each sequencing dataset and establish the baseline for subsequent processing. The statistics are used to assess the likelihood of error for any given position within any read, based on position-specific quality score distributions and incorporates adjacent base quality values.</p></sec><sec id="Sec4"><title>Establishing a model for error detection</title><p>Primary sequence analysis software included with most sequencing platforms generally provide users with a guide to potential sequencing errors based on a quality scoring system that tries to estimate the probability of any nucleotide being called correctly. We used the read mapping software BWA [<xref ref-type="bibr" rid="CR5">5</xref>] to align the raw Illumina reads to the finished genomes that were derived from those reads to identify positions within the reads that we consider as real errors. We selected three sequencing datasets and their corresponding genomes from bacteria that represent a range of genomic G&#x02009;+&#x02009;C content: <italic>Burkholderia thailandensis</italic> (68&#x000a0;%&#x000a0;G&#x02009;+&#x02009;C), <italic>Yersinia aldovae</italic> (48&#x000a0;%&#x000a0;G&#x02009;+&#x02009;C), and <italic>Francisella philomiragia</italic> (33&#x000a0;%&#x000a0;G&#x02009;+&#x02009;C). While the general trend observed supports higher quality scores correlating with more accurate base calling, there is yet a large discrepancy between the calculated probability P of accuracy (<italic>P&#x02009;=&#x02009;10^(&#x02212;Q/10)</italic>, where Q is the Phred quality score) and the observed experimental value (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S1). This initial quality scoring provided within Illumina FastQ files appears to over-predict the error rate along the entire spectra of quality scores.<fig id="Fig1"><label>Fig. 1</label><caption><p>Comparison of predicted error rates with observed error rates. The solid line represents the theoretical, predicted error rate given a Q score, <italic>P&#x02009;=&#x02009;10^(&#x02212;Q/10)</italic>, where Q is the Phred quality score and P is the predicted error rate. The actual error rates for all called Q scores are the mean values calculated from all nucleotide positions within all reads for the three datasets: <italic>Burkholderia thailandensis</italic> (<italic>square</italic>), <italic>Yersinia aldovae</italic> (<italic>triangle</italic>), and <italic>Francisella philomiragia</italic> (<italic>circle</italic>). 95&#x000a0;% confidence limits were used as error bars, however, due to the large amount of data sampled, the error bars are too small to be seen, and are covered by the height of the symbol</p></caption><graphic xlink:href="12859_2016_967_Fig1_HTML" id="MO1"/></fig></p><p>Because the quality score is meant to reflect the probability of errors at a given position, we tested whether the position-specific quality scores of correct versus erroneous bases were statistically different, as would be expected. Using the correct versus erroneous position-specific scores, a Wilcoxon Signed-Rank Test clearly showed very small <italic>P</italic>-values on the order of 10<sup>&#x02212;11</sup> (i.e. significantly different), over the entire length of the read. Similar <italic>P</italic>-values were also found for at least two positions immediately adjacent (both 5&#x02032; and 3&#x02032;) to the erroneous bases, essentially discriminating the scores of bases adjacent to errors versus those adjacent to correct base calls. Furthermore, comparisons of erroneous base call scores (and adjacent positions) with the scores of the entire dataset (including the erroneous positions) displayed nearly identical Wilcoxon Signed-Rank Test statistics. As an example, Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref> displays a summary of the quality scores over the entire length of all reads for <italic>Burkholderia thailandensis</italic>, showing correct bases, erroneous bases, and the bases adjacent to erroneous base calls. The sequence errors on average have much lower quality scores than correct base calls. Furthermore, the positions adjacent to the erroneous base calls also have lower quality values than might otherwise be expected for a correct base call, both 5&#x02032; (Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">2a</xref>) and 3&#x02032; (Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">2b</xref>). Similar trends were found with the two other projects despite their very different G&#x02009;+&#x02009;C content, <italic>Yersinia aldovae</italic> and <italic>Francisella philomiragia</italic>, and are presented in the Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S2 and Figure S3, respectively. Based on these findings, we sought to improve upon traditional error detection/trimming methods that only use a user-defined quality score threshold for all positions along the entire read.<fig id="Fig2"><label>Fig. 2</label><caption><p>Average quality scores along reads for erroneous bases and their adjacent bases, and for all the reads for <italic>Burkholderia thailandensis</italic>. In 2(<bold>a</bold>), the purple line represents the average quality score of the full Illumina run. The orange line represents the average quality score at erroneous base positions. The other lines represent average quality scores of bases near the erroneous base at positions &#x02212;1, &#x02212;2, &#x02212;5, and &#x02212;10. In Fig.&#x000a0;2(b), the purple and orange lines are identical to 2(<bold>a</bold>), while the other lines represent average quality scores of bases near the erroneous base at positions +1, +2, +5, and +10</p></caption><graphic xlink:href="12859_2016_967_Fig2_HTML" id="MO2"/></fig></p></sec><sec id="Sec5"><title>Algorithm</title><p>Based on the above observations, we reasoned that the position-specific quality distribution should be accounted for over the entire length of the reads, and adjacent base quality values should be taken into account when assessing errors. Here we present a method that takes this local and position-specific information into account, and that can accommodate sequencer, or even run-to-run variations. Therefore, ADEPT&#x02019;s underlying algorithm is based on the observed differences of Q scores between the erroneous bases (and local adjacent bases) and the corresponding position-specific scores of the entire dataset.</p><p>The software was written in Perl5.8 and is executed as a command line tool. The only input files required by ADEPT are one or more FASTQ files (either single end or paired-end reads). ADEPT utilizes the Parallel::ForkManager Perl module to allow parallel processing and to control sub-processes. The input dataset is initially split by default into multiple files of four million reads each, but users can tune this parameter via a command line flag. Each split file is independently run through the ADEPT process, controlled by ForkManager in parallel.</p><p>ADEPT investigates reads in three sequential steps:</p><p>The <italic>first</italic> step uses a traditional method of identifying likely errors at both the 5&#x02032; and 3&#x02032; ends of reads, since the ends often have poor quality. We implemented a sliding window-based approach [<xref ref-type="bibr" rid="CR12">12</xref>] to identify these errors using default parameters. The nucleotides at these positions are converted to Ns for downstream processing.</p><p>The <italic>second</italic> step randomly samples up to 10 million reads from a given input dataset to automatically establish the baseline distribution of quality scores and determines the parameter settings for the model of error prediction of this particular sequencing dataset. This concept of using the intrinsic qualities of the data as a guide for error-detection is unique and not found in other programs. ADEPT then investigates all reads and bases that pass the first step and identifies a nucleotide as correct if the quality score is above the median score for that position within the sampled run (i.e. higher than 50&#x000a0;% of the quality scores at that position). This threshold is a tunable parameter, should the user decide to be more stringent or lenient in the automatic calling of a correct base. For example, changing this parameter to 40&#x000a0;% would allow 10&#x000a0;% more bases to be automatically identified as correct. In addition this step can include automatically identifying a nucleotide as an error if it falls below a defined percentage of the quality scores for that position (this parameter is set to 0&#x000a0;% as a stringent default, meaning that no nucleotide is ever identified automatically as an error). For example, setting this threshold to 5&#x000a0;% would essentially guarantee calling 5&#x000a0;% of the bases as incorrect for any given position. Those identified as incorrect are converted to Ns for downstream processing.</p><p>The <italic>third</italic> step incorporates the quality values of adjacent nucleotides for all positions (that are not already identified as correct or as errors in step 2). In this step, ADEPT uses two criteria that include using the scores of adjacent base positions.</p><p>The first criterion is determined by the ratio of the base quality to the qualities of <italic>n</italic> upstream and downstream positions, <italic>R</italic><sub><italic>in</italic></sub>&#x02009;=&#x02009;<italic>Q</italic><sub><italic>i</italic></sub>/<italic>Q</italic><sub><italic>i</italic>&#x02009;&#x000b1;&#x02009;<italic>n</italic></sub>, where Q<sub>i</sub> is the quality score at the <italic>i</italic>th position and <italic>Q</italic><sub><italic>i</italic>&#x02009;&#x000b1;&#x02009;<italic>n</italic></sub> are the quality scores at positions <italic>i</italic>&#x02009;&#x000b1;&#x02009;<italic>n</italic>. By default, all R<sub>in</sub> ratios must be smaller or equal to 0.4 to be considered as a potential erroneous base (i.e. all adjacent qualities must be at least 2.5 times higher than the quality of the position being investigated for that position to be considered as a potential error). Relaxing the stringency of R<sub>in</sub> (i.e. higher than 0.4) would consider more bases as potential errors.</p><p>The second criterion is determined by the position of <italic>Q</italic><sub><italic>i</italic>&#x02009;&#x000b1;&#x02009;<italic>n</italic></sub> within the distribution of all quality values for the <italic>i</italic>&#x02009;&#x000b1;&#x02009;<italic>n</italic> positions. By default, the quality of the <italic>i</italic>&#x02009;&#x000b1;&#x02009;<italic>n</italic> positions must all be within the bottom 30&#x000a0;% of the distribution of quality values for that position to continue to be considered as a potential error. Increasing this cutoff above 30&#x000a0;% will have the effect of including more bases as potential errors. Only positions that satisfy all these criteria are identified as erroneous bases, which are then converted to Ns for downstream processing.</p><p>We examined the effect of using adjacent bases in the identification of errors and compared the results of using only the quality score of the erroneous base with incorporating the qualities of either one, two or three adjacent bases, or using a randomly selected base from within the read (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S4). We found that including adjacent positions to the base of interest offers substantial error-identification improvement over the simple use of the quality score of the base itself. Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S4 also shows that including two adjacent positions performs better than only a single adjacent position (primarily in the middle of the read) and that including additional adjacent positions beyond two did not notably increase the performance of finding errors. Therefore, to accommodate computational efficiency, ADEPT considers only two upstream and two downstream positions.</p><p>After the determination of where errors reside, trimming occurs to remove identified errors. To maximize efficiency, this trimming occurs as the reads are processed. By default, ADEPT trims any continuous stretches of N&#x02019;s at the 5&#x02032; and 3&#x02032; ends from reads and keeps the N&#x02019;s in the middle of reads but changes the quality scores to zero. All remaining reads greater than a user-specified minimum length (50&#x000a0;bp default) are placed in a new FASTQ output file. For paired-end reads, if only one read of a pair is retained, it is placed within a separate FASTQ file that contains unpaired reads. Users also have an option to trim the N&#x02019;s in the middle of reads. This option splices reads at any N, and retains only the longest remaining fragment for the new FASTQ output file (subject to the same user-specified minimum length). Users can also output untrimmed reads, where the identified errors are replaced by Ns (with quality scores of zero).</p></sec></sec><sec id="Sec6" sec-type="results"><title>Results and discussions</title><p>We evaluated ADEPT and compared its performance in identifying errors with three other tools (ConDeTri, SolexaQA, and BWA) using four independent datasets (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S1) that have finished genomes, namely, <italic>Bacillus anthracis Ames_BA1004</italic>, S<italic>erratia marcescens</italic> FGI94, <italic>Burkholderia thailandensis</italic> 2002721723, and <italic>Serratia plymuthica</italic> RVH1. These four datasets span a wide range of G&#x02009;+&#x02009;C (36-70&#x000a0;%), read length (100-150&#x000a0;bp reads), and were generated on different sequencers and even at different genome centers. When run on an eight-core machine (Intel(R) Xeon(R) CPU X5675 @ 3.07GHz), ADEPT requires approximately one hour per 15 million reads and a maximum of ~20GB memory to process the entire dataset.</p><p>True errors were identified by comparing all reads to the finished genomes. The percentage of true errors identified by each method is shown in Fig.&#x000a0;<xref rid="Fig3" ref-type="fig">3</xref>. While the performance of the tools is somewhat similar at the 5&#x02032; and 3&#x02032; ends of reads, ADEPT excels in identifying true errors in the middle of the reads for all datasets and outperforms the other tools. This improvement appears independent of G&#x02009;+&#x02009;C content, read length or sequencer used. We note that ConDeTri, a content dependent read trimmer did outperform the two other tools, particularly in the second half of the reads. In almost all cases, SolexaQA, ConDeTri, and BWA identify 20-60&#x000a0;% fewer true errors in the middle portion of the read (~50&#x000a0;% of the read length) and display a concave distribution of identified true errors along the length of the reads. This curvature is less pronounced with ADEPT, indicating substantially improved position-independent error detection. We also note that the proportion of true errors found can differ substantially (with all tools) depending on the dataset.<fig id="Fig3"><label>Fig. 3</label><caption><p>Fraction of known errors identified for diverse samples. The four samples include <italic>Bacillus anthracis</italic> AMES, <italic>Serratia</italic> sp. FGI94, <italic>Burkholderia thailandensis</italic>, and <italic>Serratia plymuthica</italic> RVH1 and are of differing G&#x02009;+&#x02009;C content and/or sequenced on different physical machines. The four methods shown are SolexaQA (<italic>purple circle</italic>), BWA (<italic>green X</italic>), ConDeTri (<italic>orange diamond</italic>) and ADEPT (<italic>red triangle</italic>). Y-axis represents the fraction of the known errors identified by each tool; X-axis represents the position within the reads</p></caption><graphic xlink:href="12859_2016_967_Fig3_HTML" id="MO3"/></fig></p><p>While identification of additional true errors is important, we also wanted to investigate if this was solely due to calling many more predicted erroneous positions. Figure&#x000a0;<xref rid="Fig4" ref-type="fig">4</xref> displays the fraction of false positives to the total errors called (i.e. fraction of positions called as erroneous but that are not errors). In all cases and all sequence positions, the fraction of false positive errors ranges from 85 to 99&#x000a0;%, indicating that most of the predicted errors are in fact not erroneous, and by extension, that there are many accurately-called nucleotides in any given sequencing run are assigned low quality scores. This corroborates our findings in Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>, indicating that the quality scores do not always reflect true error probabilities. However, this proportion is consistently lower throughout the entire length of the read when using ADEPT compared with the other methods. This improved performance over other programs (reduced false positive rate, Fig.&#x000a0;<xref rid="Fig4" ref-type="fig">4</xref>; and improved true positive rate, Fig.&#x000a0;<xref rid="Fig3" ref-type="fig">3</xref>) is more prominent in the middle of the reads than the 5&#x02032; or 3&#x02032; ends. As shown in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S5, the fraction of false errors called compared with the total reads at a given position can be substantially high, and in some cases can be as much as ~40&#x000a0;% at the ends of reads. The extent of these erroneous predictions varies depending on the dataset and the quality of the run, as all tools use the native quality scores to predict errors. While this may dissuade researchers from using such tools with high false positive rates, the high sequencing throughput combined with the elimination of most errors generally provide improved results after using these error-prediction and trimming tools.<fig id="Fig4"><label>Fig. 4</label><caption><p>The fraction of incorrectly identified errors for diverse samples. The four samples include <italic>Bacillus anthracis</italic> AMES, <italic>Serratia</italic> sp. FGI94, <italic>Burkholderia thailandensis</italic>, and <italic>Serratia plymuthica</italic> RVH1 and are of differing G&#x02009;+&#x02009;C content and/or sequenced on different physical machines. The four methods shown are SolexaQA (<italic>purple circle</italic>), BWA (<italic>green X</italic>), ConDeTri (<italic>orange diamond</italic>) and ADEPT (<italic>red triangle</italic>). Y-axis represents the fraction of called errors that are incorrect (i.e. the tools called these errors but they are correct bases); X-axis represents the position within the reads</p></caption><graphic xlink:href="12859_2016_967_Fig4_HTML" id="MO4"/></fig></p><p>Using another independent dataset, we tested and compared the effect of ADEPT with other tools, and specifically looked at Velvet assembly results compared with untrimmed data (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S2). Using Velvet (Version 1.2.08) with <italic>K</italic>&#x02009;=&#x02009;77, ADEPT offers improvements in terms of contig N50 and maximum contig size. This improvement and favorable comparison with the other tools, comes despite the fact that Velvet cannot take advantage of ADEPT output (neither the N&#x02019;s replacing the suspected erroneous bases, nor their qualities set to zero). Assembly and other analysis tools that are used downstream of error-detection algorithms, would need to be reconfigured in order to take full advantage of ADEPT output.</p></sec><sec id="Sec7" sec-type="conclusion"><title>Conclusions</title><p>Here we present ADEPT, a tool that dynamically assesses errors within reads based on position-specific and local quality scores. It is the first tool that we are aware of that dynamically processes data and relies on within-dataset information to identify errors. The method used to devise the error model for Illumina data can readily be applied for assessing and detecting errors in other technologies. The key to ADEPT is the analysis of quality scores not only of the base being analyzed, but also the scores of its neighboring bases, and how these relate to the entire dataset in a position-specific fashion. ADEPT outperforms other tools with respect to identifying true errors without increasing the total errors called. This is particularly true within the middle of reads, because other tools rely almost exclusively on the quality scores of the base being considered, and because these scores are typically poor at the ends of reads, and their inability to distinguish errors in the higher quality middle portion of reads. Taking into account position-specific scores, neighboring base scores, and relating these to the distribution of scores in a position-specific manner provides ADEPT with a superior true positive error rate. The ability to identify errors within the middle of reads may be particularly important in the case of metagenomic data analysis when the genome coverage may be very low. Perhaps more importantly, the methodology presented here provides a framework that can be extended to other sequencing technologies.</p></sec><sec id="Sec8"><title>Availability and requirements</title><p>Project name: ADEPT</p><p>Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/LANL-Bioinformatics/ADEPT">https://github.com/LANL-Bioinformatics/ADEPT</ext-link></p><p>Operating system(s): Platform independent with primary UNIX support</p><p>Programming language: Perl and R</p><p>Other requirements: Perl Parallel::ForkManager from CPAN <ext-link ext-link-type="uri" xlink:href="http://search.cpan.org/">http://search.cpan.org</ext-link></p><p>License: GNU GPL version 3 or later</p></sec></body><back><app-group><app id="App1"><sec id="Sec9"><title>Additional file</title><p><media position="anchor" xlink:href="12859_2016_967_MOESM1_ESM.pdf" id="MOESM1"><label>Additional file 1:</label><caption><p>Supplemental file. (PDF 600 kb)</p></caption></media></p></sec></app></app-group><fn-group><fn><p><bold>Competing interests</bold></p><p>The authors declare that they have no competing interests.</p></fn><fn><p><bold>Authors&#x02019; contributions</bold></p><p>SF, CL, PL and PC conceived of, and planned project. SF, CL and PL implemented software and analyzed data. SF and PC wrote the manuscript. All authors read and approved the final manuscript.</p></fn></fn-group><ack><title>Acknowledgements</title><p>This study was supported in part by the U.S. Department of Energy Joint Genome Institute through the Office of Science of the U.S. Department of Energy under Contract Number DE-AC02-05CH11231 and grants from NIH (Y1-DE-6006-02), the U.S. Department of Homeland Security under contract number HSHQDC08X00790, and the U.S. Defense Threat Reduction Agency under contract numbers B104153I and B084531I.</p></ack><ref-list id="Bib1"><title>References</title><ref id="CR1"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mardis</surname><given-names>ER</given-names></name></person-group><article-title>The impact of next-generation sequencing technology on genetics</article-title><source>Trends Genet</source><year>2008</year><volume>24</volume><fpage>133</fpage><lpage>41</lpage><pub-id pub-id-type="doi">10.1016/j.tig.2007.12.007</pub-id><?supplied-pmid 18262675?><pub-id pub-id-type="pmid">18262675</pub-id></element-citation></ref><ref id="CR2"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Metzker</surname><given-names>ML</given-names></name></person-group><article-title>Sequencing technologies - the next generation</article-title><source>Nat Rev Genet</source><year>2010</year><volume>11</volume><fpage>31</fpage><lpage>46</lpage><pub-id pub-id-type="doi">10.1038/nrg2626</pub-id><?supplied-pmid 19997069?><pub-id pub-id-type="pmid">19997069</pub-id></element-citation></ref><ref id="CR3"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dohm</surname><given-names>JC</given-names></name><name><surname>Lottaz</surname><given-names>C</given-names></name><name><surname>Borodina</surname><given-names>T</given-names></name><name><surname>Himmelbauer</surname><given-names>H</given-names></name></person-group><article-title>Substantial biases in ultra-short read data sets from high-throughput DNA sequencing</article-title><source>Nucleic Acids Res</source><year>2008</year><volume>36</volume><issue>16</issue><fpage>e95</fpage><pub-id pub-id-type="doi">10.1093/nar/gkn425</pub-id><pub-id pub-id-type="pmid">18614605</pub-id></element-citation></ref><ref id="CR4"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ilie</surname><given-names>L</given-names></name><name><surname>Fazayeli</surname><given-names>F</given-names></name><name><surname>Ilie</surname><given-names>S</given-names></name></person-group><article-title>HiTEC: accurate error correction in high- throughput sequencing data</article-title><source>Bioinformatics</source><year>2011</year><volume>27</volume><fpage>295</fpage><lpage>302</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btq653</pub-id><?supplied-pmid 21115437?><pub-id pub-id-type="pmid">21115437</pub-id></element-citation></ref><ref id="CR5"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Salmela</surname><given-names>L</given-names></name></person-group><article-title>Correction of sequencing errors in a mixed set of reads</article-title><source>Bioinformatics</source><year>2010</year><volume>26</volume><fpage>1284</fpage><lpage>90</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btq151</pub-id><?supplied-pmid 20378555?><pub-id pub-id-type="pmid">20378555</pub-id></element-citation></ref><ref id="CR6"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yang</surname><given-names>X</given-names></name><name><surname>Chockalingam</surname><given-names>S</given-names></name><name><surname>Aluru</surname><given-names>S</given-names></name></person-group><article-title>A survey of error correction methods for next generation sequencing</article-title><source>Brief Bioinform</source><year>2013</year><volume>14</volume><fpage>56</fpage><lpage>66</lpage><pub-id pub-id-type="doi">10.1093/bib/bbs015</pub-id><?supplied-pmid 22492192?><pub-id pub-id-type="pmid">22492192</pub-id></element-citation></ref><ref id="CR7"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kelley</surname><given-names>D</given-names></name><name><surname>Schatz</surname><given-names>M</given-names></name><name><surname>Salzberg</surname><given-names>L</given-names></name></person-group><article-title>Quake: quality-aware detection and correction of sequencing erros</article-title><source>Genome Biol</source><year>2010</year><volume>11</volume><fpage>R116</fpage><pub-id pub-id-type="doi">10.1186/gb-2010-11-11-r116</pub-id><?supplied-pmid 21114842?><pub-id pub-id-type="pmid">21114842</pub-id></element-citation></ref><ref id="CR8"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schro der</surname><given-names>J</given-names></name><name><surname>Schro der</surname><given-names>H</given-names></name><name><surname>Puglisi</surname><given-names>SJ</given-names></name><name><surname>Sinha</surname><given-names>R</given-names></name><name><surname>Schmidt</surname><given-names>B</given-names></name></person-group><article-title>SHREC: a short- read error correction method</article-title><source>Bioinformatics</source><year>2009</year><volume>25</volume><fpage>2157</fpage><lpage>63</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btp379</pub-id><pub-id pub-id-type="pmid">19542152</pub-id></element-citation></ref><ref id="CR9"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cox</surname><given-names>MP</given-names></name><name><surname>Peterson</surname><given-names>DA</given-names></name><name><surname>Biggs</surname><given-names>PJ</given-names></name></person-group><article-title>SolexaQA: at-a-glance quality assessment of Illumina second-generation sequencing data</article-title><source>BMC Bioinformatics</source><year>2010</year><volume>11</volume><fpage>485</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-11-485</pub-id><?supplied-pmid 20875133?><pub-id pub-id-type="pmid">20875133</pub-id></element-citation></ref><ref id="CR10"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>H</given-names></name><name><surname>Durbin</surname><given-names>R</given-names></name></person-group><article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title><source>Bioinformatics</source><year>2009</year><volume>25</volume><fpage>1754</fpage><lpage>60</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btp324</pub-id><?supplied-pmid 19451168?><pub-id pub-id-type="pmid">19451168</pub-id></element-citation></ref><ref id="CR11"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Smeds</surname><given-names>L</given-names></name><name><surname>K&#x000fc;nstner</surname><given-names>A</given-names></name></person-group><article-title>ConDeTri - A Content Dependent Read Trimmer for Illumina Data</article-title><source>PLoS One</source><year>2011</year><volume>6</volume><issue>10</issue><fpage>e26314</fpage><pub-id pub-id-type="doi">10.1371/journal.pone.0026314</pub-id><?supplied-pmid 22039460?><pub-id pub-id-type="pmid">22039460</pub-id></element-citation></ref><ref id="CR12"><label>12.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lo</surname><given-names>CC</given-names></name><name><surname>Chain</surname><given-names>PS</given-names></name></person-group><article-title>Rapid evaluation and quality control of next generation sequencing data with FaQCs</article-title><source>BMC Bioinformatics</source><year>2014</year><volume>15</volume><issue>1</issue><fpage>366</fpage><pub-id pub-id-type="doi">10.1186/s12859-014-0366-2</pub-id><?supplied-pmid 25408143?><pub-id pub-id-type="pmid">25408143</pub-id></element-citation></ref></ref-list></back></article>